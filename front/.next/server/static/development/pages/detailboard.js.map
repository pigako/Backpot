{"version":3,"file":"static\\development\\pages\\detailboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CommentCard.js","webpack:///./components/designs/Button.js","webpack:///./pages/detailboard.js","webpack:///./reducers/board.js","webpack:///external \"@ckeditor/ckeditor5-build-classic\"","webpack:///external \"@ckeditor/ckeditor5-react\"","webpack:///external \"immer\"","webpack:///external \"moment\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-helmet\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  DELETE_COMMENT_REQUEST,\r\n  UPDATE_COMMENT_REQUEST,\r\n} from '../reducers/board';\r\n\r\nconst SCommentCard = styled.div`\r\n  margin: 1.5rem;\r\n`;\r\nconst CommentCardTop = styled.div`\r\n  height: 2rem;\r\n  background: #f7f7f7;\r\n  border-bottom: solid 1px #6441a5;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n\r\n  & > label {\r\n    line-height: 2rem;\r\n  }\r\n`;\r\nconst CommentCardNickname = styled.label`\r\n  font-weight: bold;\r\n  margin-left: 1rem;\r\n`;\r\nconst CommentCardCreateLabel = styled.label`\r\n  display: block;\r\n  float: right;\r\n`;\r\nconst CommentUpDelButtonDiv = styled.div`\r\n  font-size: 1rem;\r\n  display: inline-block;\r\n  float: right;\r\n  margin-right: 1rem;\r\n  line-height: 2rem;\r\n\r\n  & > a {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #148cff;\r\n    }\r\n  }\r\n`;\r\nconst CommentCardContent = styled.div`\r\n  margin: 1.5rem;\r\n  & > div {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst CommentCard = ({ comment }) => {\r\n  const { id: myId } = useSelector(state => state.user.me) || false;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isUpdatingComment, setIsUpdatingComment] = useState(false);\r\n  const [updateCommentText, setUpdateCommentText] = useState('');\r\n\r\n  const editorRef = useRef();\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const onUpdateComment = useCallback(\r\n    e => {\r\n      if (isUpdatingComment) {\r\n        dispatch({\r\n          type: UPDATE_COMMENT_REQUEST,\r\n          data: {\r\n            id: comment.id,\r\n            content: updateCommentText,\r\n          },\r\n        });\r\n        setIsUpdatingComment(false);\r\n      } else {\r\n        setIsUpdatingComment(true);\r\n      }\r\n    },\r\n    [isUpdatingComment, comment && comment.id, updateCommentText],\r\n  );\r\n\r\n  const onUpdateCommentCancle = useCallback(\r\n    e => {\r\n      setIsUpdatingComment(false);\r\n      setUpdateCommentText(comment.content);\r\n    },\r\n    [comment && comment.content],\r\n  );\r\n\r\n  const onDeleteComment = useCallback(\r\n    e => {\r\n      console.log('CommentCard', comment.id);\r\n      dispatch({\r\n        type: DELETE_COMMENT_REQUEST,\r\n        commentId: comment.id,\r\n      });\r\n    },\r\n    [comment && comment.id],\r\n  );\r\n\r\n  return (\r\n    <SCommentCard key={+comment.id}>\r\n      <CommentCardTop>\r\n        <CommentCardNickname>{comment.User.nickname}</CommentCardNickname>\r\n        <CommentCardCreateLabel>\r\n          {moment(comment.createdAt).format('YY.MM.DD HH시 mm분')}\r\n        </CommentCardCreateLabel>\r\n        {myId === comment.User.id ? (\r\n          <CommentUpDelButtonDiv>\r\n            {isUpdatingComment ? (\r\n              <a onClick={onUpdateCommentCancle}>취소</a>\r\n            ) : null}\r\n            <a onClick={onUpdateComment}>수정</a>\r\n            <a onClick={onDeleteComment}>삭제</a>\r\n          </CommentUpDelButtonDiv>\r\n        ) : null}\r\n      </CommentCardTop>\r\n      <CommentCardContent>\r\n        {isUpdatingComment ? (\r\n          editorLoded ? (\r\n            <CKEditor\r\n              key={'board'}\r\n              editor={ClassicEditor}\r\n              data={comment && comment.content}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setUpdateCommentText(data);\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>Editor Loding</p>\r\n          )\r\n        ) : (\r\n          <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n        )}\r\n      </CommentCardContent>\r\n    </SCommentCard>\r\n  );\r\n};\r\n\r\nCommentCard.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentCard;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-block;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n\r\n  height: 2.25rem;\r\n  width: 6rem;\r\n  font-size: 1rem;\r\n\r\n  ${props => {\r\n    if (props.size === 'large') {\r\n      return css`\r\n        width: 100%;\r\n      `;\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.color === 'blue') {\r\n      return css`\r\n        background: #148cff;\r\n        &:hover {\r\n          background: #1e96ff;\r\n        }\r\n        &:active {\r\n          background: #0a82ff;\r\n        }\r\n      `;\r\n    } else if (props.color === 'pink') {\r\n      return css`\r\n        background: #ff7493;\r\n        &:hover {\r\n          background: #ff7e9d;\r\n        }\r\n        &:active {\r\n          background: #ff6a89;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n  /* \r\n    blue: '#228be6 #339af0 #1c7ed6',\r\n    gray: '#495057',\r\n    pink: '#f06595 #FF8E99 #FF7493' \r\n  */\r\n \r\n  \r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, ...rest }) => {\r\n  return <StyledButton {...rest}>{children}</StyledButton>;\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'blue',\r\n  size: 'middle',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useCallback, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Helmet from 'react-helmet';\r\nimport Router from 'next/router';\r\n\r\nimport Button from '../components/designs/Button';\r\nimport {\r\n  LOAD_BOARD_REQUEST,\r\n  DELETE_BOARD_REQUEST,\r\n  UPDATE_BOARD_REQUEST,\r\n  ADD_COMMENT_REQUEST,\r\n} from '../reducers/board';\r\nimport CommnetCard from '../components/CommentCard';\r\n\r\nconst SBoard = styled.div`\r\n  width: 98%;\r\n  margin-top: 10px;\r\n`;\r\nconst SDetailBoardTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\nconst SBoardTop = styled.div`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: solid 2px #6441a5;\r\n`;\r\nconst SBoardTitle = styled.div`\r\n  display: inline-block;\r\n`;\r\nconst SBoardTitleLabel = styled.label`\r\n  display: block;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst SBoardWriterLabel = styled.label`\r\n  padding-right: 1rem;\r\n  border-right: solid 1px #495057;\r\n  & > strong {\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst SBoardCreateLabel = styled.label`\r\n  padding-left: 1rem;\r\n`;\r\nconst SBoardTitleButtonDiv = styled.div`\r\n  float: right;\r\n`;\r\nconst SBoardContent = styled.div`\r\n  margin: 1.5rem;\r\n\r\n  & > div {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n  }\r\n`;\r\nconst SBoardComment = styled.div`\r\n  border-top: solid 3px #6441a5;\r\n`;\r\nconst SBoardCommentCountDiv = styled.div`\r\n  height: 2rem;\r\n  background: #e7e7e7;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: solid 3px #6441a5;\r\n  & > label {\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst CommentDiv = styled.div`\r\n  height: 330px;\r\n`;\r\n\r\nconst CommentButton = styled(Button)`\r\n  width: 8rem;\r\n  margin-right: 1.5rem;\r\n  float: right;\r\n`;\r\n\r\nconst LoadingImg = styled.img`\r\n  margin-top: 4px;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst DetailBoard = () => {\r\n  const {\r\n    boardDeleted,\r\n    board,\r\n    isUpdatingBoard,\r\n    isAddingComment,\r\n    commentAdded,\r\n  } = useSelector(state => state.board);\r\n  const { id: myId } = useSelector(state => state.user.me) || false;\r\n  const dispatch = useDispatch();\r\n\r\n  const editorRef = useRef();\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n\r\n  const [userComment, setUserComment] = useState('');\r\n  const [updateText, setUpdateText] = useState('');\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (boardDeleted) {\r\n      Router.push('/board');\r\n    }\r\n  }, [boardDeleted]);\r\n\r\n  useEffect(() => {\r\n    if (commentAdded) {\r\n      setUserComment('');\r\n    }\r\n  }, [commentAdded]);\r\n\r\n  const onUpdateBoard = useCallback(\r\n    e => {\r\n      if (isUpdating) {\r\n        dispatch({\r\n          type: UPDATE_BOARD_REQUEST,\r\n          data: {\r\n            id: board.id,\r\n            content: updateText,\r\n          },\r\n        });\r\n        setIsUpdating(false);\r\n      } else {\r\n        setIsUpdating(true);\r\n      }\r\n    },\r\n    [isUpdating, board && board.id, updateText],\r\n  );\r\n\r\n  const onUpdateBoardCancle = useCallback(\r\n    e => {\r\n      setIsUpdating(false);\r\n      setUpdateText(board && board.content);\r\n    },\r\n    [isUpdating],\r\n  );\r\n\r\n  const onDeleteBoard = useCallback(\r\n    e => {\r\n      dispatch({\r\n        type: DELETE_BOARD_REQUEST,\r\n        boardId: board.id,\r\n      });\r\n    },\r\n    [board && board.id],\r\n  );\r\n\r\n  const onCreateComment = useCallback(\r\n    e => {\r\n      if (!userComment.trim()) {\r\n        return;\r\n      }\r\n      dispatch({\r\n        type: ADD_COMMENT_REQUEST,\r\n        data: {\r\n          boardId: board.id,\r\n          content: userComment,\r\n        },\r\n      });\r\n    },\r\n    [board && board.id, userComment],\r\n  );\r\n  return (\r\n    <SBoard>\r\n      <Helmet>\r\n        <title>{board && board.title}</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable { height: 200px;}\r\n            .ck.ck-reset.ck-editor.ck-rounded-corners {margin: 1.5rem;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <SDetailBoardTitle>추천게시글</SDetailBoardTitle>\r\n      <SBoardTop>\r\n        <SBoardTitle>\r\n          <SBoardTitleLabel>{board && board.title}</SBoardTitleLabel>\r\n          <SBoardWriterLabel>\r\n            <strong>{board && board.User.nickname}</strong> 님\r\n          </SBoardWriterLabel>\r\n          <SBoardCreateLabel>\r\n            {moment(board && board.createdAt).format('YY.MM.DD HH시 mm분')}\r\n          </SBoardCreateLabel>\r\n        </SBoardTitle>\r\n        {myId === (board && board.User.id) ? (\r\n          <SBoardTitleButtonDiv>\r\n            {isUpdating ? (\r\n              <Button onClick={onUpdateBoardCancle}>취소</Button>\r\n            ) : null}\r\n            <Button onClick={onUpdateBoard}>\r\n              {isUpdatingBoard ? (\r\n                <LoadingImg src=\"/static/icons/loading_blue.gif\" />\r\n              ) : (\r\n                `수정`\r\n              )}\r\n            </Button>\r\n            <Button color={'pink'} onClick={onDeleteBoard}>\r\n              삭제\r\n            </Button>\r\n          </SBoardTitleButtonDiv>\r\n        ) : null}\r\n      </SBoardTop>\r\n      <SBoardContent>\r\n        {isUpdating ? (\r\n          editorLoded ? (\r\n            <CKEditor\r\n              key={'board'}\r\n              editor={ClassicEditor}\r\n              data={board && board.content}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setUpdateText(data);\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>Editor Loding</p>\r\n          )\r\n        ) : (\r\n          <div dangerouslySetInnerHTML={{ __html: board && board.content }} />\r\n        )}\r\n      </SBoardContent>\r\n      <SBoardComment>\r\n        <SBoardCommentCountDiv>\r\n          <label>댓글 {board && board.Comments.length}개</label>\r\n        </SBoardCommentCountDiv>\r\n\r\n        {board &&\r\n          board.Comments.map(comment => {\r\n            return <CommnetCard key={+comment.id} comment={comment} />;\r\n          })}\r\n      </SBoardComment>\r\n      {myId && (\r\n        <CommentDiv>\r\n          {editorLoded ? (\r\n            <CKEditor\r\n              key={'comment'}\r\n              editor={ClassicEditor}\r\n              data={userComment}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setUserComment(data);\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>Editor Loding</p>\r\n          )}\r\n          <CommentButton onClick={onCreateComment}>\r\n            {isAddingComment ? (\r\n              <LoadingImg src=\"/static/icons/loading_blue.gif\" />\r\n            ) : (\r\n              `댓글쓰기`\r\n            )}\r\n          </CommentButton>\r\n        </CommentDiv>\r\n      )}\r\n    </SBoard>\r\n  );\r\n};\r\n\r\nDetailBoard.getInitialProps = context => {\r\n  const id = parseInt(context.query.id, 10);\r\n  context.store.dispatch({\r\n    type: LOAD_BOARD_REQUEST,\r\n    boardId: id,\r\n  });\r\n};\r\n\r\nexport default DetailBoard;\r\n","import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  boards: [],\r\n  hasMoreBoards: false,\r\n  board: null,\r\n  isAddingBoard: false,\r\n  boardAdded: false,\r\n  boardDeleted: false,\r\n  isUpdatingBoard: false,\r\n  isAddingComment: false,\r\n  commentAdded: false,\r\n  isUpdatingComment: false,\r\n};\r\n\r\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\r\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\r\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\r\n\r\nexport const LOAD_BOARD_REQUEST = `LOAD_BOARD_REQUEST`;\r\nexport const LOAD_BOARD_SUCCESS = `LOAD_BOARD_SUCCESS`;\r\nexport const LOAD_BOARD_FAILURE = `LOAD_BOARD_FAILURE`;\r\n\r\nexport const ADD_BOARD_REQUEST = `ADD_BOARD_REQUEST`;\r\nexport const ADD_BOARD_SUCCESS = `ADD_BOARD_SUCCESS`;\r\nexport const ADD_BOARD_FAILURE = `ADD_BOARD_FAILURE`;\r\n\r\nexport const UPDATE_BOARD_REQUEST = `UPDATE_BOARD_REQUEST`;\r\nexport const UPDATE_BOARD_SUCCESS = `UPDATE_BOARD_SUCCESS`;\r\nexport const UPDATE_BOARD_FAILURE = `UPDATE_BOARD_FAILURE`;\r\n\r\nexport const DELETE_BOARD_REQUEST = `DELETE_BOARD_REQUEST`;\r\nexport const DELETE_BOARD_SUCCESS = `DELETE_BOARD_SUCCESS`;\r\nexport const DELETE_BOARD_FAILURE = `DELETE_BOARD_FAILURE`;\r\n\r\nexport const ADD_COMMENT_REQUEST = `ADD_COMMENT_REQUEST`;\r\nexport const ADD_COMMENT_SUCCESS = `ADD_COMMENT_SUCCESS`;\r\nexport const ADD_COMMENT_FAILURE = `ADD_COMMENT_FAILURE`;\r\n\r\nexport const UPDATE_COMMENT_REQUEST = `UPDATE_COMMENT_REQUEST`;\r\nexport const UPDATE_COMMENT_SUCCESS = `UPDATE_COMMENT_SUCCESS`;\r\nexport const UPDATE_COMMENT_FAILURE = `UPDATE_COMMENT_FAILURE`;\r\n\r\nexport const DELETE_COMMENT_REQUEST = `DELETE_COMMENT_REQUEST`;\r\nexport const DELETE_COMMENT_SUCCESS = `DELETE_COMMENT_SUCCESS`;\r\nexport const DELETE_COMMENT_FAILURE = `DELETE_COMMENT_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      // 전체 게시글 조회\r\n      case LOAD_BOARDS_REQUEST: {\r\n        draft.boards = !action.lastId ? [] : draft.boards;\r\n        if (draft.hasMoreBoards) {\r\n          draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : false;\r\n        }\r\n        break;\r\n      }\r\n      case LOAD_BOARDS_SUCCESS: {\r\n        draft.boards = draft.boards.concat(action.data);\r\n        draft.hasMoreBoards = action.data.length === 30;\r\n        break;\r\n      }\r\n      case LOAD_BOARDS_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 조회\r\n      case LOAD_BOARD_REQUEST: {\r\n        draft.boardDeleted = false;\r\n        draft.board = null;\r\n        break;\r\n      }\r\n      case LOAD_BOARD_SUCCESS: {\r\n        draft.board = action.data;\r\n        break;\r\n      }\r\n      case LOAD_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 작성\r\n      case ADD_BOARD_REQUEST: {\r\n        draft.isAddingBoard = true;\r\n        draft.boardAdded = false;\r\n        break;\r\n      }\r\n      case ADD_BOARD_SUCCESS: {\r\n        draft.isAddingBoard = false;\r\n        draft.boardAdded = true;\r\n        draft.boards.unshift(action.data);\r\n        break;\r\n      }\r\n      case ADD_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 수정\r\n      case UPDATE_BOARD_REQUEST: {\r\n        draft.isUpdatingBoard = true;\r\n        break;\r\n      }\r\n      case UPDATE_BOARD_SUCCESS: {\r\n        draft.isUpdatingBoard = false;\r\n        draft.board.content = action.data;\r\n        break;\r\n      }\r\n      case UPDATE_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 삭제\r\n      case DELETE_BOARD_REQUEST: {\r\n        draft.boardDeleted = false;\r\n        break;\r\n      }\r\n      case DELETE_BOARD_SUCCESS: {\r\n        const boardIndex = draft.boards.findIndex(v => v.id === action.data);\r\n        draft.boards.splice(boardIndex, 1);\r\n        draft.boardDeleted = true;\r\n        break;\r\n      }\r\n      case DELETE_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 작성\r\n      case ADD_COMMENT_REQUEST: {\r\n        draft.isAddingComment = true;\r\n        draft.commentAdded = false;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_SUCCESS: {\r\n        draft.isAddingComment = false;\r\n        draft.commentAdded = true;\r\n        draft.board.Comments.push(action.data);\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 수정\r\n      case UPDATE_COMMENT_REQUEST: {\r\n        draft.isUpdatingBoard = true;\r\n        break;\r\n      }\r\n      case UPDATE_COMMENT_SUCCESS: {\r\n        draft.isUpdatingBoard = false;\r\n        const commentIndex = draft.board.Comments.findIndex(\r\n          v => v.id === action.data.id,\r\n        );\r\n        draft.board.Comments[commentIndex].content = action.data.content;\r\n        break;\r\n      }\r\n      case UPDATE_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 삭제\r\n      case DELETE_COMMENT_REQUEST: {\r\n        break;\r\n      }\r\n      case DELETE_COMMENT_SUCCESS: {\r\n        const commentIndex = draft.board.Comments.findIndex(\r\n          v => v.id === action.data,\r\n        );\r\n        draft.board.Comments.splice(commentIndex, 1);\r\n        // draft.board.Comments = draft.board.Comments.filter(c => c.id !== action.data);\r\n        break;\r\n      }\r\n      case DELETE_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n","module.exports = require(\"@ckeditor/ckeditor5-build-classic\");","module.exports = require(\"@ckeditor/ckeditor5-react\");","module.exports = require(\"immer\");","module.exports = require(\"moment\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-helmet\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AAAA;AASA;AAAA;AAEA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;AC/JA;AACA;AAEA;AAAA;AAAA;AAAA;AAgBA;AACA;AAGA;AACA;AAGA;AACA;AASA;AACA;AASA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAGA;AAIA;AAAA;;;AAAA;AAqBA;AAAA;AAEA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;AC9RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaxHA;AA0HA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9KA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}