{"version":3,"file":"static\\development\\pages\\profile.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/designs/Button.js","webpack:///./pages/profile.js","webpack:///external \"axios\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-block;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n\r\n  height: 2.25rem;\r\n  width: 6rem;\r\n  font-size: 1rem;\r\n\r\n  ${props => {\r\n    if (props.size === 'large') {\r\n      return css`\r\n        width: 100%;\r\n      `;\r\n    } else if (props.size === 'middle') {\r\n      return css`\r\n        width: 33%;\r\n      `;\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.color === 'blue') {\r\n      return css`\r\n        background: #148cff;\r\n        &:hover {\r\n          background: #1e96ff;\r\n        }\r\n        &:active {\r\n          background: #0a82ff;\r\n        }\r\n      `;\r\n    } else if (props.color === 'pink') {\r\n      return css`\r\n        background: #ff7493;\r\n        &:hover {\r\n          background: #ff7e9d;\r\n        }\r\n        &:active {\r\n          background: #ff6a89;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n  /* \r\n    blue: '#228be6 #339af0 #1c7ed6',\r\n    gray: '#495057',\r\n    pink: '#f06595 #FF8E99 #FF7493' \r\n  */\r\n \r\n  \r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, ...rest }) => {\r\n  return <StyledButton {...rest}>{children}</StyledButton>;\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'blue',\r\n  size: 'small',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Button from '../components/designs/Button';\r\n\r\nconst SProfileDiv = styled.div`\r\n  width: 98%;\r\n  margin-top: 10px;\r\n`;\r\nconst ProfileTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\nconst InfoCardWrap = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1.5rem;\r\n  border: solid 1px #495057;\r\n  border-radius: 6px;\r\n  width: 70%;\r\n`;\r\nconst InfoCardDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem;\r\n  height: 4rem;\r\n`;\r\nconst InfoLeftDiv = styled.div`\r\n  flex: 1;\r\n`;\r\nconst InfoRightDiv = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  & > input {\r\n    width: 100%;\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    line-height: 2rem;\r\n    padding-left: 10px;\r\n\r\n    border: solid 2px #495057;\r\n    border-radius: 4px;\r\n\r\n    transition: 0.55s ease;\r\n\r\n    & :hover {\r\n      border: solid 2px #148cff;\r\n    }\r\n    & :focus {\r\n      border: solid 2px #148cff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckButton = styled(Button)`\r\n  width: 8rem;\r\n  height: 2rem;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst ButtonDiv = styled.div`\r\n  margin: 1rem;\r\n  height: 4rem;\r\n`;\r\n\r\nconst SButton = styled(Button)`\r\n  display: block;\r\n  width: 8rem;\r\n  margin-top: 1rem;\r\n\r\n  float: right;\r\n`;\r\n\r\nconst Profile = ({ id }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  const [inputs, setInputs] = useState({\r\n    userId: '',\r\n    userNickname: '',\r\n    userPassword: '',\r\n    newUserPassword: '',\r\n    newUserPasswordCheck: '',\r\n  });\r\n  const [checkUserId, setCheckUserId] = useState(false);\r\n  const [checkUserNickname, setCheckUserNickname] = useState(false);\r\n  const [checkUserPassword, setCheckUserPassword] = useState(false);\r\n  const [passwordErrorReason, setPasswordErrorReason] = useState('');\r\n  const {\r\n    userId,\r\n    userPassword,\r\n    userNickname,\r\n    newUserPassword,\r\n    newUserPasswordCheck,\r\n  } = inputs;\r\n\r\n  const router = useRouter();\r\n\r\n  const onChangeInputs = useCallback(\r\n    e => {\r\n      if (e.target.name === 'newUserPasswordCheck') {\r\n        if (e.target.value !== newUserPassword) {\r\n          setPasswordErrorReason('비밀번호가 일치하지 않습니다.');\r\n        } else {\r\n          setPasswordErrorReason('');\r\n        }\r\n      }\r\n      setInputs({\r\n        ...inputs,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n    [inputs],\r\n  );\r\n\r\n  useEffect(\r\n    e => {\r\n      if (!(me && me.id)) {\r\n        alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\r\n        router.push('/');\r\n        return;\r\n      }\r\n      if ((me && me.userId) !== id) {\r\n        alert('잘 못된 접근입니다.');\r\n        router.push('/');\r\n        return;\r\n      }\r\n    },\r\n    [me && me.userId, id],\r\n  );\r\n\r\n  const onCheck = useCallback(\r\n    async e => {\r\n      if (e.target.name === 'checkUserId') {\r\n        if (!userId.trim()) {\r\n          alert('수정 사항이 없습니다.');\r\n          return;\r\n        }\r\n        const result = await axios.post(`/user/check`, {\r\n          type: 'userId',\r\n          userId,\r\n        });\r\n        if (result.data) {\r\n          setCheckUserId(true);\r\n          alert('사용 가능한 아이디입니다.');\r\n        } else {\r\n          alert('이미 사용중인 아이디입니다.');\r\n        }\r\n      } else if (e.target.name === 'checkUserNickname') {\r\n        if (!userNickname.trim()) {\r\n          alert('수정 사항이 없습니다.');\r\n        }\r\n        const result = await axios.post(`/user/check`, {\r\n          type: 'userNickname',\r\n          userNickname,\r\n        });\r\n        if (result.data) {\r\n          setCheckUserNickname(true);\r\n          alert('사용 가능한 닉네임입니다.');\r\n        } else {\r\n          alert('이미 사용중인 닉네임입니다.');\r\n        }\r\n      }\r\n    },\r\n    [userId, userNickname],\r\n  );\r\n\r\n  const onUpdatePassword = useCallback(\r\n    e => {\r\n      if (!checkUserPassword) {\r\n        setCheckUserPassword(true);\r\n      }\r\n    },\r\n    [checkUserPassword],\r\n  );\r\n\r\n  const onUpdateProfile = useCallback(\r\n    e => {\r\n      if (!(userId || userPassword || userNickname)) {\r\n        alert('수정 사항이 없습니다.');\r\n        return;\r\n      }\r\n      if (passwordErrorReason !== '') {\r\n        alert('패스워드가 일치하지 않습니다.');\r\n      }\r\n      if (userId && !checkUserId) {\r\n        alert('아이디 중복확인을 해주세요.');\r\n      }\r\n      if (userNickname && !checkUserNickname) {\r\n        alert('닉네임 중복확인을 해주세요.');\r\n      }\r\n    },\r\n    [\r\n      userId,\r\n      userPassword,\r\n      userNickname,\r\n      passwordErrorReason,\r\n      checkUserId,\r\n      checkUserNickname,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <SProfileDiv>\r\n      <ProfileTitle>{me && me.nickname} 님 프로필 수정</ProfileTitle>\r\n      <InfoCardWrap>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>\r\n            <label>아이디</label>\r\n          </InfoLeftDiv>\r\n          <InfoRightDiv>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              value={userId}\r\n              placeholder={me && me.userId}\r\n              onChange={onChangeInputs}\r\n            />\r\n            {checkUserId || (\r\n              <CheckButton name=\"checkUserId\" onClick={onCheck}>\r\n                중복확인\r\n              </CheckButton>\r\n            )}\r\n          </InfoRightDiv>\r\n        </InfoCardDiv>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>\r\n            <label>비밀번호</label>\r\n          </InfoLeftDiv>\r\n          {checkUserPassword ? (\r\n            <InfoRightDiv>\r\n              <input\r\n                type=\"password\"\r\n                name=\"userPassword\"\r\n                value={userPassword}\r\n                placeholder=\"Current Password\"\r\n                onChange={onChangeInputs}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"newUserPassword\"\r\n                value={newUserPassword}\r\n                placeholder=\"New Password\"\r\n                onChange={onChangeInputs}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"newUserPasswordCheck\"\r\n                value={newUserPasswordCheck}\r\n                placeholder=\"Repeat New Password\"\r\n                onChange={onChangeInputs}\r\n              />\r\n            </InfoRightDiv>\r\n          ) : (\r\n            <InfoRightDiv>\r\n              <Button size={'middle'} onClick={onUpdatePassword}>\r\n                비밀번호 변경\r\n              </Button>\r\n            </InfoRightDiv>\r\n          )}\r\n        </InfoCardDiv>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>\r\n            <label>닉네임</label>\r\n          </InfoLeftDiv>\r\n          <InfoRightDiv>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userNickname\"\r\n              value={userNickname}\r\n              placeholder={me && me.nickname}\r\n              onChange={onChangeInputs}\r\n            />\r\n            {checkUserNickname || (\r\n              <CheckButton name=\"checkUserNickname\" onClick={onCheck}>\r\n                중복확인\r\n              </CheckButton>\r\n            )}\r\n          </InfoRightDiv>\r\n        </InfoCardDiv>\r\n        <ButtonDiv>\r\n          <SButton onClick={onUpdateProfile}>수정하기</SButton>\r\n        </ButtonDiv>\r\n      </InfoCardWrap>\r\n    </SProfileDiv>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  return { id };\r\n};\r\n\r\nexport default Profile;\r\n","module.exports = require(\"axios\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AAAA;AAAA;AAAA;AAgBA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AASA;AACA;AASA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAWA;AAUA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7SA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}