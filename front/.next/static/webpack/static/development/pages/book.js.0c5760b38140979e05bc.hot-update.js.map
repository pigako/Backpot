{"version":3,"file":"static/webpack/static\\development\\pages\\book.js.0c5760b38140979e05bc.hot-update.js","sources":["webpack:///./pages/book.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Link from 'next/link';\r\n\r\nimport { LOAD_BOOK_REQUEST } from '../reducers/book';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SBookDiv = styled.div`\r\n  width: 98%;\r\n  margin: 30px 0px 0px 10px;\r\n`;\r\n\r\nconst BookTopDiv = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 15rem;\r\n\r\n  border-bottom: solid 2px #495057;\r\n`;\r\nconst BookTopLeftDiv = styled.div`\r\n  width: 15%;\r\n  float: left;\r\n`;\r\nconst BookTopRightDiv = styled.div`\r\n  width: 85%;\r\n  float: right;\r\n\r\n  border: solid 2px #495057;\r\n\r\n  & > label {\r\n    font-size: 1rem;\r\n    display: block;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`;\r\nconst Thumbnail = styled.img`\r\n  height: 13rem;\r\n  display: block;\r\n  margin: 1rem auto;\r\n`;\r\nconst BookTitle = styled.h1`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst BookSummaryDiv = styled.div`\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  padding-left: 1.5rem;\r\n  padding-right: 1.5rem;\r\n  height: 7rem;\r\n  width: 100%;\r\n  border-bottom: solid 2px #495057;\r\n`;\r\n\r\nconst Book = () => {\r\n  const { book } = useSelector(state => state.book);\r\n\r\n  return (\r\n    <SBookDiv>\r\n      <BookTopDiv>\r\n        <BookTopLeftDiv>\r\n          <Thumbnail src={`http://localhost:5000/${book && book.thumbnail}`} />\r\n        </BookTopLeftDiv>\r\n        <BookTopRightDiv>\r\n          <BookTitle>{book && book.name}</BookTitle>\r\n          <label>{book && book.BookGenre[0].name}</label>\r\n          <label>작가 {book && book.User.nickname}</label>\r\n          <label>\r\n            작품등록일{' '}\r\n            {book && moment(book.createdAt).format('YY.MM.DD HH시 mm분')}\r\n          </label>\r\n          <label>\r\n            최근등록일{' '}\r\n            {book &&\r\n              (book.Episodes[book.Episodes.length - 1]\r\n                ? moment(\r\n                    book.Episodes[book.Episodes.length - 1].createdAt,\r\n                  ).format('YY.MM.DD HH시 mm분')\r\n                : moment(book.createdAt).format('YY.MM.DD HH시 mm분'))}\r\n          </label>\r\n          <label>연재수 {book && book.Episodes.length} 화</label>\r\n          <label>조회수</label>\r\n          <label>추천수</label>\r\n          <label>선호작수 {book && book.likersCount}</label>\r\n        </BookTopRightDiv>\r\n      </BookTopDiv>\r\n      <BookSummaryDiv>{book && book.summary}</BookSummaryDiv>\r\n    </SBookDiv>\r\n  );\r\n};\r\n\r\nBook.getInitialProps = async context => {\r\n  const bookId = context.query.bookid;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_BOOK_REQUEST,\r\n    id: bookId,\r\n  });\r\n};\r\n\r\nexport default Book;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAIA;AAAA;AA4BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}