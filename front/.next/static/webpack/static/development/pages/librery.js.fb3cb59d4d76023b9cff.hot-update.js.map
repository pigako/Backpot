{"version":3,"file":"static/webpack/static\\development\\pages\\librery.js.fb3cb59d4d76023b9cff.hot-update.js","sources":["webpack:///./pages/librery.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport LOAD_USER_REQUEST from '../reducers/user';\r\nimport BookCard from '../components/BookCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst NovelList = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst MyBoard = styled.div``;\r\n\r\nconst Librery = () => {\r\n  const user =\r\n    useSelector(state => state.user.otherUserInfo).length === 0\r\n      ? useSelector(state => state.user.me)\r\n      : useSelector(state => state.user.otherUserInfo);\r\n  return (\r\n    <div>\r\n      <h1>{user.nickname} 님의 서재입니다.</h1>\r\n      <NovelList>\r\n        연재작품\r\n        {user.Books.map(book => {\r\n          return (\r\n            <BookCard key={+book.id} book={book} nickname={user.nickname} />\r\n          );\r\n        })}\r\n      </NovelList>\r\n      <MyBoard> </MyBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nLibrery.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  if (!id) {\r\n    alert('잘못된 접근입니다.');\r\n    Router.push('/');\r\n  }\r\n  const state = context.store.getState();\r\n  if (id !== (state.user.me && state.user.me.id)) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Librery;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;;;;A","sourceRoot":""}