{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.928bbd20b748073b2a9c.hot-update.js","sources":["webpack:///./sagas/episode.js"],"sourcesContent":["import { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_EPISODE_REQUEST,\r\n  LOAD_EPISODE_SUCCESS,\r\n  LOAD_EPISODE_FAILURE,\r\n  ADD_EPISODE_REQUEST,\r\n  ADD_EPISODE_SUCCESS,\r\n  ADD_EPISODE_FAILURE,\r\n  ADD_RECOMMEND_REQUEST,\r\n  ADD_RECOMMEND_SUCCESS,\r\n  ADD_RECOMMEND_FAILURE,\r\n  UPDATE_EPISODE_REQUEST,\r\n  UPDATE_EPISODE_SUCCESS,\r\n  UPDATE_EPISODE_FAILURE,\r\n  DELETE_EPISODE_REQUEST,\r\n  DELETE_EPISODE_SUCCESS,\r\n  DELETE_EPISODE_FAILURE,\r\n} from '../reducers/episode';\r\n\r\n// 글 조회\r\nfunction* watchLoadEpisode() {\r\n  yield takeLatest(LOAD_EPISODE_REQUEST, function*(action) {\r\n    try {\r\n      const result = yield call(episodeId => {\r\n        return axios.get(`/episode/${episodeId}`);\r\n      }, action.id);\r\n      yield put({\r\n        type: LOAD_EPISODE_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: LOAD_EPISODE_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 글 작성\r\nfunction* watchAddEpisode() {\r\n  yield takeLatest(ADD_EPISODE_REQUEST, function*(action) {\r\n    try {\r\n      const result = yield call(episodeData => {\r\n        return axios.post(`/episode`, episodeData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: ADD_EPISODE_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: ADD_EPISODE_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 추천\r\nfunction* watchAddRecommend() {\r\n  yield takeLatest(ADD_RECOMMEND_REQUEST, function*(action) {\r\n    try {\r\n      const result = yield call(episodeId => {\r\n        return axios.post(\r\n          `/episode/${episodeId}`,\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        );\r\n      }, action.id);\r\n      yield put({\r\n        type: ADD_RECOMMEND_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: ADD_RECOMMEND_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 수정\r\nfunction* watchUpdateEpisode() {\r\n  yield takeLatest(UPDATE_EPISODE_REQUEST, function*(action) {\r\n    try {\r\n      yield call(updateData => {\r\n        return axios.patch(`/episode/${updateData.id}`, updateData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: UPDATE_EPISODE_SUCCESS,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: UPDATE_EPISODE_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 삭제\r\nfunction* watchDeleteEpisode() {}\r\nexport default function* episodeSaga() {\r\n  yield all([\r\n    fork(watchLoadEpisode),\r\n    fork(watchAddEpisode),\r\n    fork(watchAddRecommend),\r\n    fork(watchUpdateEpisode),\r\n    fork(watchDeleteEpisode),\r\n  ]);\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA;;;AAoBA;;;AAsBA;;;AA0BA;;;AAqBA;;;AACA;AACA;AAhHA;AACA;AACA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AALA;AAEA;AAFA;AAKA;AACA;AACA;AAFA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AAWA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAEA;AAFA;AAOA;AACA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AAZA;AAaA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AADA;AAIA;AACA;AAXA;AAEA;AAFA;AAWA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AAhBA;AAiBA;AACA;AACA;AAFA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAAA;AAOA;AACA;AADA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AAXA;AAYA;AACA;AACA;AAFA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}