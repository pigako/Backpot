{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport LOAD_USER_REQUEST from '../reducers/user';\nimport BookCard from '../components/BookCard';\nimport { useSelector } from 'react-redux';\nvar NovelList = styled.div.withConfig({\n  displayName: \"librery__NovelList\",\n  componentId: \"sc-1ufjrpz-0\"\n})([\"\"]);\nvar MyBoard = styled.div.withConfig({\n  displayName: \"librery__MyBoard\",\n  componentId: \"sc-1ufjrpz-1\"\n})([\"\"]);\n\nvar Librery = function Librery() {\n  var user = useSelector(function (state) {\n    return state.user.otherUserInfo;\n  }) || useSelector(function (state) {\n    return state.user.me;\n  });\n  console.log(user);\n  return __jsx(\"div\", null, __jsx(NovelList, null), __jsx(MyBoard, null, \" \"));\n};\n\nLibrery.getInitialProps = function _callee(context) {\n  var id, state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n\n          if (!id) {\n            alert('잘못된 접근입니다.');\n            Router.push('/');\n          }\n\n          state = context.store.getState();\n\n          if (id !== (state.user.me && state.user.me.id)) {\n            context.store.dispatch({\n              type: LOAD_USER_REQUEST,\n              data: id\n            });\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Librery;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/librery.js"],"names":["React","styled","Router","LOAD_USER_REQUEST","BookCard","useSelector","NovelList","div","MyBoard","Librery","user","state","otherUserInfo","me","console","log","getInitialProps","context","id","query","alert","push","store","getState","dispatch","type","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,QAAf;AAEA,IAAMC,OAAO,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,QAAb;;AAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,IAAI,GACRL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWE,aAAf;AAAA,GAAN,CAAX,IACAP,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWG,EAAf;AAAA,GAAN,CAFb;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,SACE,mBACE,MAAC,SAAD,OADF,EAEE,MAAC,OAAD,YAFF,CADF;AAMD,CAXD;;AAaAD,OAAO,CAACO,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,EADkB,GACbD,OAAO,CAACE,KAAR,CAAcD,EADD;;AAExB,cAAI,CAACA,EAAL,EAAS;AACPE,YAAAA,KAAK,CAAC,YAAD,CAAL;AACAlB,YAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACD;;AACKV,UAAAA,KANkB,GAMVM,OAAO,CAACK,KAAR,CAAcC,QAAd,EANU;;AAOxB,cAAIL,EAAE,MAAMP,KAAK,CAACD,IAAN,CAAWG,EAAX,IAAiBF,KAAK,CAACD,IAAN,CAAWG,EAAX,CAAcK,EAArC,CAAN,EAAgD;AAC9CD,YAAAA,OAAO,CAACK,KAAR,CAAcE,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEtB,iBADe;AAErBuB,cAAAA,IAAI,EAAER;AAFe,aAAvB;AAID;;AAZuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAeA,eAAeT,OAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport LOAD_USER_REQUEST from '../reducers/user';\r\nimport BookCard from '../components/BookCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst NovelList = styled.div``;\r\n\r\nconst MyBoard = styled.div``;\r\n\r\nconst Librery = () => {\r\n  const user =\r\n    useSelector(state => state.user.otherUserInfo) ||\r\n    useSelector(state => state.user.me);\r\n  console.log(user);\r\n  return (\r\n    <div>\r\n      <NovelList></NovelList>\r\n      <MyBoard> </MyBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nLibrery.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  if (!id) {\r\n    alert('잘못된 접근입니다.');\r\n    Router.push('/');\r\n  }\r\n  const state = context.store.getState();\r\n  if (id !== (state.user.me && state.user.me.id)) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Librery;\r\n"]},"metadata":{},"sourceType":"module"}