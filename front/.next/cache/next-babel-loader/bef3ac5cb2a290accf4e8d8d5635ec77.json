{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport LOAD_USER_REQUEST from '../reducers/user';\nimport BookCard from '../components/BookCard';\nimport { useSelector } from 'react-redux';\nconst NovelList = styled.div.withConfig({\n  displayName: \"librery__NovelList\",\n  componentId: \"sc-1ufjrpz-0\"\n})([\"\"]);\nconst MyBoard = styled.div.withConfig({\n  displayName: \"librery__MyBoard\",\n  componentId: \"sc-1ufjrpz-1\"\n})([\"\"]);\n\nconst Librery = () => {\n  const user = useSelector(state => state.user.otherUserInfo).length === 0 ? useSelector(state => state.user.me) : useSelector(state => state.user.otherUserInfo);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, user.nickname, \" \\uB2D8\\uC758 \\uC11C\\uC7AC\\uC785\\uB2C8\\uB2E4.\"), __jsx(NovelList, null, user.Books.map(book => {\n    return __jsx(BookCard, {\n      key: +book.id,\n      bookId: +book.id\n    });\n  })), __jsx(MyBoard, null, \" \"));\n};\n\nLibrery.getInitialProps = async context => {\n  const id = context.query.id;\n\n  if (!id) {\n    alert('잘못된 접근입니다.');\n    Router.push('/');\n  }\n\n  const state = context.store.getState();\n\n  if (id !== (state.user.me && state.user.me.id)) {\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n  }\n};\n\nexport default Librery;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/librery.js"],"names":["React","styled","Router","LOAD_USER_REQUEST","BookCard","useSelector","NovelList","div","MyBoard","Librery","user","state","otherUserInfo","length","me","nickname","Books","map","book","id","getInitialProps","context","query","alert","push","store","getState","dispatch","type","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,QAAf;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,QAAb;;AAEA,MAAME,OAAO,GAAG,MAAM;AACpB,QAAMC,IAAI,GACRL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWE,aAArB,CAAX,CAA+CC,MAA/C,KAA0D,CAA1D,GACIR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWI,EAArB,CADf,GAEIT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWE,aAArB,CAHjB;AAIA,SACE,mBACE,kBAAKF,IAAI,CAACK,QAAV,kDADF,EAEE,MAAC,SAAD,QACGL,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACtB,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,IAAI,CAACC,EAArB;AAAyB,MAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAAvC,MAAP;AACD,GAFA,CADH,CAFF,EAOE,MAAC,OAAD,YAPF,CADF;AAWD,CAhBD;;AAkBAV,OAAO,CAACW,eAAR,GAA0B,MAAMC,OAAN,IAAiB;AACzC,QAAMF,EAAE,GAAGE,OAAO,CAACC,KAAR,CAAcH,EAAzB;;AACA,MAAI,CAACA,EAAL,EAAS;AACPI,IAAAA,KAAK,CAAC,YAAD,CAAL;AACArB,IAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACD;;AACD,QAAMb,KAAK,GAAGU,OAAO,CAACI,KAAR,CAAcC,QAAd,EAAd;;AACA,MAAIP,EAAE,MAAMR,KAAK,CAACD,IAAN,CAAWI,EAAX,IAAiBH,KAAK,CAACD,IAAN,CAAWI,EAAX,CAAcK,EAArC,CAAN,EAAgD;AAC9CE,IAAAA,OAAO,CAACI,KAAR,CAAcE,QAAd,CAAuB;AACrBC,MAAAA,IAAI,EAAEzB,iBADe;AAErB0B,MAAAA,IAAI,EAAEV;AAFe,KAAvB;AAID;AACF,CAbD;;AAeA,eAAeV,OAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport LOAD_USER_REQUEST from '../reducers/user';\r\nimport BookCard from '../components/BookCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst NovelList = styled.div``;\r\n\r\nconst MyBoard = styled.div``;\r\n\r\nconst Librery = () => {\r\n  const user =\r\n    useSelector(state => state.user.otherUserInfo).length === 0\r\n      ? useSelector(state => state.user.me)\r\n      : useSelector(state => state.user.otherUserInfo);\r\n  return (\r\n    <div>\r\n      <h1>{user.nickname} 님의 서재입니다.</h1>\r\n      <NovelList>\r\n        {user.Books.map(book => {\r\n          return <BookCard key={+book.id} bookId={+book.id} />;\r\n        })}\r\n      </NovelList>\r\n      <MyBoard> </MyBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nLibrery.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  if (!id) {\r\n    alert('잘못된 접근입니다.');\r\n    Router.push('/');\r\n  }\r\n  const state = context.store.getState();\r\n  if (id !== (state.user.me && state.user.me.id)) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Librery;\r\n"]},"metadata":{},"sourceType":"module"}