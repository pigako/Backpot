{"ast":null,"code":"import { all, fork, takeEvery, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpData => {\n      return axios.post('/signup', {\n        signUpData\n      });\n    }, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result\n    });\n  } catch {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/user.js"],"names":["all","fork","takeEvery","takeLatest","call","put","axios","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","signUp","action","result","signUpData","post","data","type","console","log","e","error","watchSignUp","userSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,GANF,QAOO,oBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,eAHF,QAIO,kBAJP;;AAMA,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACS,UAAU,IAAI;AACtC,aAAOP,KAAK,CAACQ,IAAN,CAAW,SAAX,EAAsB;AAAED,QAAAA;AAAF,OAAtB,CAAP;AACD,KAFwB,EAEtBF,MAAM,CAACI,IAFe,CAAzB;AAGA,UAAMV,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEP,eADE;AAERM,MAAAA,IAAI,EAAEH;AAFE,KAAD,CAAT;AAID,GARD,CAQE,MAAM;AACNK,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACA,UAAMd,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAER,eADE;AAERY,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,WAAV,GAAwB;AACtB,QAAMlB,UAAU,CAACI,eAAD,EAAkBG,MAAlB,CAAhB;AACD;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACC,IAAI,CAACoB,WAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  takeEvery,\r\n  takeLatest,\r\n  call,\r\n  put,\r\n} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpData => {\r\n      return axios.post('/signup', { signUpData });\r\n    }, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result,\r\n    });\r\n  } catch {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchSignUp)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}