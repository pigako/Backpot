{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(episodeSaga);\n\nimport { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\nexport default function episodeSaga() {\n  return _regeneratorRuntime.wrap(function episodeSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/episode.js"],"names":["episodeSaga","all","call","fork","throttle","takeLatest","put","axios"],"mappings":";;;;yBAGyBA,W;;AAHzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,GAAhD,QAA2D,oBAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAAUP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,EAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nexport default function* episodeSaga() {\r\n  yield all([]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}