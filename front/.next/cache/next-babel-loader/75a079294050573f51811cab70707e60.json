{"ast":null,"code":"import produce from 'immer';\nexport const initalState = {\n  boards: []\n};\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\n\nconst reducer = (state = initalState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_BOARDS_REQUEST:\n        draft.boards = !action.lastId ? [] : draft.boards;\n        draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : true;\n        break;\n\n      case LOAD_BOARDS_SUCCESS:\n        draft.boards = draft.boards.concat(action.data);\n        draft.hasMoreBoards = action.data.length === 30;\n        break;\n\n      case LOAD_BOARDS_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/board.js"],"names":["produce","initalState","boards","LOAD_BOARDS_REQUEST","LOAD_BOARDS_SUCCESS","LOAD_BOARDS_FAILURE","reducer","state","action","draft","type","lastId","hasMoreBoards","concat","data","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAApB;AAIP,OAAO,MAAMC,mBAAmB,GAAI,qBAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAI,qBAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAI,qBAA7B;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,WAAT,EAAsBO,MAAtB,KAAiC;AAC/C,SAAOR,OAAO,CAACO,KAAD,EAAQE,KAAK,IAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKP,mBAAL;AACEM,QAAAA,KAAK,CAACP,MAAN,GAAe,CAACM,MAAM,CAACG,MAAR,GAAiB,EAAjB,GAAsBF,KAAK,CAACP,MAA3C;AACAO,QAAAA,KAAK,CAACG,aAAN,GAAsBJ,MAAM,CAACG,MAAP,GAAgBF,KAAK,CAACG,aAAtB,GAAsC,IAA5D;AACA;;AACF,WAAKR,mBAAL;AACEK,QAAAA,KAAK,CAACP,MAAN,GAAeO,KAAK,CAACP,MAAN,CAAaW,MAAb,CAAoBL,MAAM,CAACM,IAA3B,CAAf;AACAL,QAAAA,KAAK,CAACG,aAAN,GAAsBJ,MAAM,CAACM,IAAP,CAAYC,MAAZ,KAAuB,EAA7C;AACA;;AACF,WAAKV,mBAAL;AACE;;AACF;AACE;AAZJ;AAcD,GAfa,CAAd;AAgBD,CAjBD;;AAmBA,eAAeC,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  boards: [],\r\n};\r\n\r\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\r\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\r\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case LOAD_BOARDS_REQUEST:\r\n        draft.boards = !action.lastId ? [] : draft.boards;\r\n        draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : true;\r\n        break;\r\n      case LOAD_BOARDS_SUCCESS:\r\n        draft.boards = draft.boards.concat(action.data);\r\n        draft.hasMoreBoards = action.data.length === 30;\r\n        break;\r\n      case LOAD_BOARDS_FAILURE:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}