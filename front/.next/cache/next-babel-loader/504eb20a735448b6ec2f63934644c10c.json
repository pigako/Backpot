{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport moment from 'moment';\nconst LikingList = styled.li.withConfig({\n  displayName: \"LikingBook__LikingList\",\n  componentId: \"sc-1befqkz-0\"\n})([\"display:block;width:100%;height:2rem;text-align:left;border-radius:4px;border-bottom:solid 2px #495057;&:nth-child(2n){background:#495057;}&:hover{background:#148cff;}& + &{margin-top:10px;}\"]);\nconst Writer = styled.label.withConfig({\n  displayName: \"LikingBook__Writer\",\n  componentId: \"sc-1befqkz-1\"\n})([\"display:block;width:35%;line-height:2rem;float:left;cursor:pointer;margin-left:5px;\"]);\nconst Bookname = styled.label.withConfig({\n  displayName: \"LikingBook__Bookname\",\n  componentId: \"sc-1befqkz-2\"\n})([\"display:block;width:calc(50% -5px);line-height:2rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;cursor:pointer;& > p{color:red;display:contents;}\"]);\n\nconst LikedBook = ({\n  book\n}) => {\n  return __jsx(LikingList, null, __jsx(Link, {\n    href: {\n      pathname: 'librery',\n      query: {\n        id: book.User.userId\n      }\n    },\n    as: `/librery/${book.User.userId}`\n  }, __jsx(\"a\", null, __jsx(Writer, null, book.User.nickname))), __jsx(Link, {\n    href: {\n      pathname: '/book',\n      query: {\n        bookid: book.id\n      }\n    },\n    as: `/book/${book.id}`\n  }, __jsx(\"a\", null, __jsx(Bookname, null, moment.duration(moment(book.recentDay, 'YYYY-MM-DD HH:mm').diff(moment().format('YYYY-MM-DD HH:mm'))).asHours() > -24 ? __jsx(\"p\", null, \"New\") : null, book.name))));\n};\n\n// {moment\n//   .duration(\n//     moment('2020-03-17T02:26:58.000Z', 'YYYY-MM-DD HH:mm').diff(\n//       moment().format('YYYY-MM-DD HH:mm'),\n//     ),\n//   )\n//   .asHours()}\nexport default LikedBook;","map":{"version":3,"sources":["C:/Document/Backpot/front/components/LikingBook.js"],"names":["React","styled","Link","moment","LikingList","li","Writer","label","Bookname","LikedBook","book","pathname","query","id","User","userId","nickname","bookid","duration","recentDay","diff","format","asHours","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,UAAU,GAAGH,MAAM,CAACI,EAAV;AAAA;AAAA;AAAA,sMAAhB;AAoBA,MAAMC,MAAM,GAAGL,MAAM,CAACM,KAAV;AAAA;AAAA;AAAA,2FAAZ;AASA,MAAMC,QAAQ,GAAGP,MAAM,CAACM,KAAV;AAAA;AAAA;AAAA,uKAAd;;AAeA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,SACE,MAAC,UAAD,QACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEH,IAAI,CAACI,IAAL,CAAUC;AAAhB;AAA9B,KADR;AAEE,IAAA,EAAE,EAAG,YAAWL,IAAI,CAACI,IAAL,CAAUC,MAAO;AAFnC,KAIE,iBACE,MAAC,MAAD,QAASL,IAAI,CAACI,IAAL,CAAUE,QAAnB,CADF,CAJF,CADF,EAUE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE;AAAEL,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAEP,IAAI,CAACG;AAAf;AAA5B,KADR;AAEE,IAAA,EAAE,EAAG,SAAQH,IAAI,CAACG,EAAG;AAFvB,KAIE,iBACE,MAAC,QAAD,QACGV,MAAM,CACJe,QADF,CAEGf,MAAM,CAACO,IAAI,CAACS,SAAN,EAAiB,kBAAjB,CAAN,CAA2CC,IAA3C,CACEjB,MAAM,GAAGkB,MAAT,CAAgB,kBAAhB,CADF,CAFH,EAMEC,OANF,KAMc,CAAC,EANf,GAOC,uBAPD,GAQG,IATN,EAUGZ,IAAI,CAACa,IAVR,CADF,CAJF,CAVF,CADF;AAgCD,CAjCD;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAed,SAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport moment from 'moment';\r\n\r\nconst LikingList = styled.li`\r\n  display: block;\r\n  width: 100%;\r\n  height: 2rem;\r\n  text-align: left;\r\n  border-radius: 4px;\r\n  border-bottom: solid 2px #495057;\r\n  &:nth-child(2n) {\r\n    background: #495057;\r\n  }\r\n\r\n  &:hover {\r\n    background: #148cff;\r\n  }\r\n\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Writer = styled.label`\r\n  display: block;\r\n  width: 35%;\r\n  line-height: 2rem;\r\n  float: left;\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst Bookname = styled.label`\r\n  display: block;\r\n  width: calc(50% -5px);\r\n  line-height: 2rem;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  cursor: pointer;\r\n\r\n  & > p {\r\n    color: red;\r\n    display: contents;\r\n  }\r\n`;\r\n\r\nconst LikedBook = ({ book }) => {\r\n  return (\r\n    <LikingList>\r\n      <Link\r\n        href={{ pathname: 'librery', query: { id: book.User.userId } }}\r\n        as={`/librery/${book.User.userId}`}\r\n      >\r\n        <a>\r\n          <Writer>{book.User.nickname}</Writer>\r\n        </a>\r\n      </Link>\r\n\r\n      <Link\r\n        href={{ pathname: '/book', query: { bookid: book.id } }}\r\n        as={`/book/${book.id}`}\r\n      >\r\n        <a>\r\n          <Bookname>\r\n            {moment\r\n              .duration(\r\n                moment(book.recentDay, 'YYYY-MM-DD HH:mm').diff(\r\n                  moment().format('YYYY-MM-DD HH:mm'),\r\n                ),\r\n              )\r\n              .asHours() > -24 ? (\r\n              <p>New</p>\r\n            ) : null}\r\n            {book.name}\r\n          </Bookname>\r\n        </a>\r\n      </Link>\r\n    </LikingList>\r\n  );\r\n};\r\n\r\nLikedBook.propTypes = {\r\n  book: PropTypes.object,\r\n};\r\n\r\n// {moment\r\n//   .duration(\r\n//     moment('2020-03-17T02:26:58.000Z', 'YYYY-MM-DD HH:mm').diff(\r\n//       moment().format('YYYY-MM-DD HH:mm'),\r\n//     ),\r\n//   )\r\n//   .asHours()}\r\n\r\nexport default LikedBook;\r\n"]},"metadata":{},"sourceType":"module"}