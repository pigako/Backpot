{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\n\nconst Profile = ({\n  id\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(e => {\n    if (!(me && me.id)) {\n      alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\n      Router.push('/');\n      return;\n    }\n\n    if ((me && me.nickname) !== id) {\n      alert('잘 못된 접근입니다.');\n      Router.push('/');\n      return;\n    }\n  }, [me && me.id, id]);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Profile / \", id));\n};\n\nProfile.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nProfile.getInitialProps = async context => {\n  const id = context.query.id;\n  return {\n    id\n  };\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/profile.js"],"names":["React","useEffect","PropTypes","LOAD_USER_REQUEST","useSelector","Router","Profile","id","me","state","user","e","alert","push","nickname","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AAEAT,EAAAA,SAAS,CACPU,CAAC,IAAI;AACH,QAAI,EAAEH,EAAE,IAAIA,EAAE,CAACD,EAAX,CAAJ,EAAoB;AAClBK,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA;AACD;;AACD,QAAI,CAACL,EAAE,IAAIA,EAAE,CAACM,QAAV,MAAwBP,EAA5B,EAAgC;AAC9BK,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA;AACD;AACF,GAZM,EAaP,CAACL,EAAE,IAAIA,EAAE,CAACD,EAAV,EAAcA,EAAd,CAbO,CAAT;AAeA,SACE,mBACE,gCAAeA,EAAf,CADF,CADF;AAKD,CAvBD;;AAyBAD,OAAO,CAACS,SAAR,GAAoB;AAClBR,EAAAA,EAAE,EAAEL,SAAS,CAACc,MAAV,CAAiBC;AADH,CAApB;;AAIAX,OAAO,CAACY,eAAR,GAA0B,MAAMC,OAAN,IAAiB;AACzC,QAAMZ,EAAE,GAAGY,OAAO,CAACC,KAAR,CAAcb,EAAzB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nconst Profile = ({ id }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  useEffect(\r\n    e => {\r\n      if (!(me && me.id)) {\r\n        alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n      if ((me && me.nickname) !== id) {\r\n        alert('잘 못된 접근입니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n    },\r\n    [me && me.id, id],\r\n  );\r\n  return (\r\n    <div>\r\n      <h1>Profile / {id}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  return { id };\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}