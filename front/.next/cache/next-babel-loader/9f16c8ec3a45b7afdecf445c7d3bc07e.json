{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nvar Card = styled.div.withConfig({\n  displayName: \"BookCard__Card\",\n  componentId: \"lzuq87-0\"\n})([\"\"]);\nvar Thumbnail = styled.div.withConfig({\n  displayName: \"BookCard__Thumbnail\",\n  componentId: \"lzuq87-1\"\n})([\"\"]);\nvar CardContent = styled.div.withConfig({\n  displayName: \"BookCard__CardContent\",\n  componentId: \"lzuq87-2\"\n})([\"\"]);\nvar Title = styled.label.withConfig({\n  displayName: \"BookCard__Title\",\n  componentId: \"lzuq87-3\"\n})([\"\"]);\nvar Genre = styled.label.withConfig({\n  displayName: \"BookCard__Genre\",\n  componentId: \"lzuq87-4\"\n})([\"\"]);\nvar Writer = styled.label.withConfig({\n  displayName: \"BookCard__Writer\",\n  componentId: \"lzuq87-5\"\n})([\"\"]);\nvar CreatedDate = styled.label.withConfig({\n  displayName: \"BookCard__CreatedDate\",\n  componentId: \"lzuq87-6\"\n})([\"\"]);\n\nvar BookCard = function BookCard(_ref) {\n  var book = _ref.book,\n      nickname = _ref.nickname;\n  var dispatch = useDispatch();\n  return __jsx(Card, null, __jsx(Thumbnail, null, book.thumbnail), __jsx(CardContent, null, __jsx(Title, null, book.name), book.BookGenre[0].name, book.BookGenre.map(function (genre, i) {\n    __jsx(Genre, {\n      key: i\n    }, genre.name);\n  }), __jsx(Writer, null, nickname), __jsx(CreatedDate, null, book.createdAt)));\n};\n\nBookCard.propTypes = {\n  book: PropTypes.object.isRequired,\n  nickname: PropTypes.string.isRequired\n};\nexport default BookCard;","map":{"version":3,"sources":["C:/Document/Backpot/front/components/BookCard.js"],"names":["React","useEffect","PropTypes","styled","useDispatch","Card","div","Thumbnail","CardContent","Title","label","Genre","Writer","CreatedDate","BookCard","book","nickname","dispatch","thumbnail","name","BookGenre","map","genre","i","createdAt","propTypes","object","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,IAAI,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,QAAV;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,QAAf;AAEA,IAAME,WAAW,GAAGL,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,QAAjB;AAEA,IAAMG,KAAK,GAAGN,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,QAAX;AAEA,IAAMC,KAAK,GAAGR,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,QAAX;AAEA,IAAME,MAAM,GAAGT,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,QAAZ;AAEA,IAAMG,WAAW,GAAGV,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,QAAjB;;AAEA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvC,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,SACE,MAAC,IAAD,QACE,MAAC,SAAD,QAAYW,IAAI,CAACG,SAAjB,CADF,EAEE,MAAC,WAAD,QACE,MAAC,KAAD,QAAQH,IAAI,CAACI,IAAb,CADF,EAEGJ,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBD,IAFrB,EAGGJ,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAChC,UAAC,KAAD;AAAO,MAAA,GAAG,EAAEA;AAAZ,OAAgBD,KAAK,CAACH,IAAtB;AACD,GAFA,CAHH,EAME,MAAC,MAAD,QAASH,QAAT,CANF,EAOE,MAAC,WAAD,QAAcD,IAAI,CAACS,SAAnB,CAPF,CAFF,CADF;AAcD,CAjBD;;AAmBAV,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,IAAI,EAAEb,SAAS,CAACwB,MAAV,CAAiBC,UADJ;AAEnBX,EAAAA,QAAQ,EAAEd,SAAS,CAAC0B,MAAV,CAAiBD;AAFR,CAArB;AAKA,eAAeb,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Card = styled.div``;\r\n\r\nconst Thumbnail = styled.div``;\r\n\r\nconst CardContent = styled.div``;\r\n\r\nconst Title = styled.label``;\r\n\r\nconst Genre = styled.label``;\r\n\r\nconst Writer = styled.label``;\r\n\r\nconst CreatedDate = styled.label``;\r\n\r\nconst BookCard = ({ book, nickname }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card>\r\n      <Thumbnail>{book.thumbnail}</Thumbnail>\r\n      <CardContent>\r\n        <Title>{book.name}</Title>\r\n        {book.BookGenre[0].name}\r\n        {book.BookGenre.map((genre, i) => {\r\n          <Genre key={i}>{genre.name}</Genre>;\r\n        })}\r\n        <Writer>{nickname}</Writer>\r\n        <CreatedDate>{book.createdAt}</CreatedDate>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBookCard.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BookCard;\r\n"]},"metadata":{},"sourceType":"module"}