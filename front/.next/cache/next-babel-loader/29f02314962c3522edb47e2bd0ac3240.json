{"ast":null,"code":"import { all, fork, takeEvery, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user'; // 회원가입\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, function* signUp(action) {\n    try {\n      const result = yield call(signUpData => {\n        return axios.post('/user/signup', {\n          signUpData\n        });\n      }, action.data);\n      yield put({\n        type: SIGN_UP_SUCCESS,\n        data: result\n      });\n    } catch (e) {\n      console.log(e);\n      yield put({\n        type: SIGN_UP_FAILURE,\n        error: e\n      });\n    }\n  });\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/user.js"],"names":["all","fork","takeEvery","takeLatest","call","put","axios","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","watchSignUp","signUp","action","result","signUpData","post","data","type","e","console","log","error","userSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,GANF,QAOO,oBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,eAHF,QAIO,kBAJP,C,CAMA;;AACA,UAAUC,WAAV,GAAwB;AACtB,QAAMP,UAAU,CAACI,eAAD,EAAkB,UAAUI,MAAV,CAAiBC,MAAjB,EAAyB;AACzD,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMT,IAAI,CAACU,UAAU,IAAI;AACtC,eAAOR,KAAK,CAACS,IAAN,CAAW,cAAX,EAA2B;AAAED,UAAAA;AAAF,SAA3B,CAAP;AACD,OAFwB,EAEtBF,MAAM,CAACI,IAFe,CAAzB;AAGA,YAAMX,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAER,eADE;AAERO,QAAAA,IAAI,EAAEH;AAFE,OAAD,CAAT;AAID,KARD,CAQE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,YAAMb,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAET,eADE;AAERa,QAAAA,KAAK,EAAEH;AAFC,OAAD,CAAT;AAID;AACF,GAhBe,CAAhB;AAiBD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACC,IAAI,CAACS,WAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  takeEvery,\r\n  takeLatest,\r\n  call,\r\n  put,\r\n} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n// 회원가입\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, function* signUp(action) {\r\n    try {\r\n      const result = yield call(signUpData => {\r\n        return axios.post('/user/signup', { signUpData });\r\n      }, action.data);\r\n      yield put({\r\n        type: SIGN_UP_SUCCESS,\r\n        data: result,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: SIGN_UP_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchSignUp)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}