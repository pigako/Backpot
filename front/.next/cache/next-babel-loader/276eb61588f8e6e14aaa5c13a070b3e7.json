{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Helmet from 'react-helmet';\nimport Router from 'next/router';\nimport { LOAD_EPISODE_REQUEST } from '../reducers/episode';\nimport CommnetCard from '../components/CommentCard';\nimport Button from '../components/designs/Button';\nconst EpisodeDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeDiv\",\n  componentId: \"sc-8ty8pk-0\"\n})([\"width:98%;margin:1rem 0rem 0rem 1rem;\"]);\nconst EpisodeTopDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeTopDiv\",\n  componentId: \"sc-8ty8pk-1\"\n})([\"border-bottom:solid 2px #495057;position:relative;\"]);\nconst BookTitle = styled.h1.withConfig({\n  displayName: \"episode__BookTitle\",\n  componentId: \"sc-8ty8pk-2\"\n})([\"font-weight:bold;font-size:1rem;margin-bottom:1rem;\"]);\nconst EpisodeTitle = styled.h1.withConfig({\n  displayName: \"episode__EpisodeTitle\",\n  componentId: \"sc-8ty8pk-3\"\n})([\"font-weight:bold;font-size:2rem;margin-bottom:1rem;\"]);\nconst TopButtonDiv = styled.div.withConfig({\n  displayName: \"episode__TopButtonDiv\",\n  componentId: \"sc-8ty8pk-4\"\n})([\"position:absolute;top:5%;right:1%;\"]);\nconst EpisodeSummaryDataDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeSummaryDataDiv\",\n  componentId: \"sc-8ty8pk-5\"\n})([\"border-bottom:solid 2px #495057;display:flex;align-items:center;justify-content:flex-end;\"]);\nconst EpisodeSummaryContentDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeSummaryContentDiv\",\n  componentId: \"sc-8ty8pk-6\"\n})([\"padding:1rem;font-size:1rem;\"]);\nconst LeftLabel = styled.label.withConfig({\n  displayName: \"episode__LeftLabel\",\n  componentId: \"sc-8ty8pk-7\"\n})([\"margin-right:1rem;\"]);\nconst RightLabel = styled.label.withConfig({\n  displayName: \"episode__RightLabel\",\n  componentId: \"sc-8ty8pk-8\"\n})([\"font-weight:bold;\"]);\nconst EpisodeContentDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeContentDiv\",\n  componentId: \"sc-8ty8pk-9\"\n})([\"margin:1.5rem;font-size:1rem;line-height:1.5rem;\"]);\nconst EpisodeComment = styled.div.withConfig({\n  displayName: \"episode__EpisodeComment\",\n  componentId: \"sc-8ty8pk-10\"\n})([\"border-top:solid 3px #495057;margin-bottom:2rem;\"]);\nconst EpisodeCommentCountDiv = styled.div.withConfig({\n  displayName: \"episode__EpisodeCommentCountDiv\",\n  componentId: \"sc-8ty8pk-11\"\n})([\"height:2rem;background:#e7e7e7;display:flex;align-items:center;border-bottom:solid 3px #495057;& > label{font-size:1rem;font-weight:bold;margin-left:1rem;}\"]);\n\nconst Episode = () => {\n  const {\n    episode\n  } = useSelector(state => state.episode);\n  return __jsx(EpisodeDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, episode && episode.Book.name), __jsx(\"style\", {\n    type: \"text/css\"\n  }, `\n            .ck-editor__editable { height: 200px;}\n            .ck.ck-reset.ck-editor.ck-rounded-corners {margin: 1.5rem;}\n          `)), __jsx(EpisodeTopDiv, null, __jsx(BookTitle, null, episode && episode.Book.name), __jsx(EpisodeTitle, null, episode && episode.title), __jsx(TopButtonDiv, null, __jsx(Button, {\n    onClick: Router.push('#comment')\n  }, \"\\uBAA9\\uB85D\"), __jsx(Button, null, __jsx(\"a\", {\n    href: \"#comment\"\n  }, \"\\uB313\\uAE00\")))), __jsx(EpisodeSummaryDataDiv, null, __jsx(EpisodeSummaryContentDiv, null, __jsx(LeftLabel, null, \"\\uC791\\uC131\"), __jsx(RightLabel, null, episode && moment(episode.createdAt).format('YY.MM.DD HH:mm'))), __jsx(EpisodeSummaryContentDiv, null, __jsx(LeftLabel, null, \"\\uC870\\uD68C\"), __jsx(RightLabel, null, episode && episode.views)), __jsx(EpisodeSummaryContentDiv, null, __jsx(LeftLabel, null, \"\\uCD94\\uCC9C\"), __jsx(RightLabel, null, episode && episode.recommends)), __jsx(EpisodeSummaryContentDiv, null, __jsx(LeftLabel, null, \"\\uC791\\uAC00\"), __jsx(RightLabel, null, episode && episode.Book.User.nickname), ' 님')), __jsx(EpisodeContentDiv, {\n    dangerouslySetInnerHTML: {\n      __html: episode && episode.content\n    }\n  }), __jsx(EpisodeComment, {\n    id: \"comment\"\n  }, __jsx(EpisodeCommentCountDiv, null, __jsx(\"label\", null, \"\\uB313\\uAE00 \", episode && episode.Episode_Comments.length, \"\\uAC1C\")), episode && episode.Episode_Comments.map(comment => {\n    return __jsx(CommnetCard, {\n      key: +comment.id,\n      comment: comment\n    });\n  })));\n};\n\nEpisode.getInitialProps = async context => {\n  const id = context.query.id;\n  context.store.dispatch({\n    type: LOAD_EPISODE_REQUEST,\n    id\n  });\n};\n\nexport default Episode;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/episode.js"],"names":["React","styled","useSelector","moment","Helmet","Router","LOAD_EPISODE_REQUEST","CommnetCard","Button","EpisodeDiv","div","EpisodeTopDiv","BookTitle","h1","EpisodeTitle","TopButtonDiv","EpisodeSummaryDataDiv","EpisodeSummaryContentDiv","LeftLabel","label","RightLabel","EpisodeContentDiv","EpisodeComment","EpisodeCommentCountDiv","Episode","episode","state","Book","name","title","push","createdAt","format","views","recommends","User","nickname","__html","content","Episode_Comments","length","map","comment","id","getInitialProps","context","query","store","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Helmet from 'react-helmet';\r\nimport Router from 'next/router';\r\n\r\nimport { LOAD_EPISODE_REQUEST } from '../reducers/episode';\r\nimport CommnetCard from '../components/CommentCard';\r\nimport Button from '../components/designs/Button';\r\n\r\nconst EpisodeDiv = styled.div`\r\n  width: 98%;\r\n  margin: 1rem 0rem 0rem 1rem;\r\n`;\r\nconst EpisodeTopDiv = styled.div`\r\n  border-bottom: solid 2px #495057;\r\n  position: relative;\r\n`;\r\nconst BookTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst EpisodeTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst TopButtonDiv = styled.div`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 1%;\r\n`;\r\nconst EpisodeSummaryDataDiv = styled.div`\r\n  border-bottom: solid 2px #495057;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst EpisodeSummaryContentDiv = styled.div`\r\n  padding: 1rem;\r\n  font-size: 1rem;\r\n`;\r\nconst LeftLabel = styled.label`\r\n  margin-right: 1rem;\r\n`;\r\nconst RightLabel = styled.label`\r\n  font-weight: bold;\r\n`;\r\nconst EpisodeContentDiv = styled.div`\r\n  margin: 1.5rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5rem;\r\n`;\r\nconst EpisodeComment = styled.div`\r\n  border-top: solid 3px #495057;\r\n  margin-bottom: 2rem;\r\n`;\r\nconst EpisodeCommentCountDiv = styled.div`\r\n  height: 2rem;\r\n  background: #e7e7e7;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: solid 3px #495057;\r\n  & > label {\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Episode = () => {\r\n  const { episode } = useSelector(state => state.episode);\r\n\r\n  return (\r\n    <EpisodeDiv>\r\n      <Helmet>\r\n        <title>{episode && episode.Book.name}</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable { height: 200px;}\r\n            .ck.ck-reset.ck-editor.ck-rounded-corners {margin: 1.5rem;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <EpisodeTopDiv>\r\n        <BookTitle>{episode && episode.Book.name}</BookTitle>\r\n        <EpisodeTitle>{episode && episode.title}</EpisodeTitle>\r\n        <TopButtonDiv>\r\n          <Button onClick={Router.push('#comment')}>목록</Button>\r\n          <Button>\r\n            <a href=\"#comment\">댓글</a>\r\n          </Button>\r\n        </TopButtonDiv>\r\n      </EpisodeTopDiv>\r\n      <EpisodeSummaryDataDiv>\r\n        <EpisodeSummaryContentDiv>\r\n          <LeftLabel>작성</LeftLabel>\r\n          <RightLabel>\r\n            {episode && moment(episode.createdAt).format('YY.MM.DD HH:mm')}\r\n          </RightLabel>\r\n        </EpisodeSummaryContentDiv>\r\n        <EpisodeSummaryContentDiv>\r\n          <LeftLabel>조회</LeftLabel>\r\n          <RightLabel>{episode && episode.views}</RightLabel>\r\n        </EpisodeSummaryContentDiv>\r\n        <EpisodeSummaryContentDiv>\r\n          <LeftLabel>추천</LeftLabel>\r\n          <RightLabel>{episode && episode.recommends}</RightLabel>\r\n        </EpisodeSummaryContentDiv>\r\n        <EpisodeSummaryContentDiv>\r\n          <LeftLabel>작가</LeftLabel>\r\n          <RightLabel>{episode && episode.Book.User.nickname}</RightLabel>\r\n          {' 님'}\r\n        </EpisodeSummaryContentDiv>\r\n      </EpisodeSummaryDataDiv>\r\n      <EpisodeContentDiv\r\n        dangerouslySetInnerHTML={{ __html: episode && episode.content }}\r\n      />\r\n      <EpisodeComment id=\"comment\">\r\n        <EpisodeCommentCountDiv>\r\n          <label>댓글 {episode && episode.Episode_Comments.length}개</label>\r\n        </EpisodeCommentCountDiv>\r\n\r\n        {episode &&\r\n          episode.Episode_Comments.map(comment => {\r\n            return <CommnetCard key={+comment.id} comment={comment} />;\r\n          })}\r\n      </EpisodeComment>\r\n    </EpisodeDiv>\r\n  );\r\n};\r\n\r\nEpisode.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_EPISODE_REQUEST,\r\n    id,\r\n  });\r\n};\r\n\r\nexport default Episode;\r\n"]},"metadata":{},"sourceType":"module"}