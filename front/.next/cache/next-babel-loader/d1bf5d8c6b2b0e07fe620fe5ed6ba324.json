{"ast":null,"code":"import produce from 'immer';\nexport const initalState = {\n  boards: [],\n  board: null,\n  isAddingBoard: false,\n  boardAdded: false,\n  boardDeleted: false,\n  isUpdatingBoard: false,\n  isAddingComment: false\n};\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\nexport const LOAD_BOARD_REQUEST = `LOAD_BOARD_REQUEST`;\nexport const LOAD_BOARD_SUCCESS = `LOAD_BOARD_SUCCESS`;\nexport const LOAD_BOARD_FAILURE = `LOAD_BOARD_FAILURE`;\nexport const ADD_BOARD_REQUEST = `ADD_BOARD_REQUEST`;\nexport const ADD_BOARD_SUCCESS = `ADD_BOARD_SUCCESS`;\nexport const ADD_BOARD_FAILURE = `ADD_BOARD_FAILURE`;\nexport const UPDATE_BOARD_REQUEST = `UPDATE_BOARD_REQUEST`;\nexport const UPDATE_BOARD_SUCCESS = `UPDATE_BOARD_SUCCESS`;\nexport const UPDATE_BOARD_FAILURE = `UPDATE_BOARD_FAILURE`;\nexport const DELETE_BOARD_REQUEST = `DELETE_BOARD_REQUEST`;\nexport const DELETE_BOARD_SUCCESS = `DELETE_BOARD_SUCCESS`;\nexport const DELETE_BOARD_FAILURE = `DELETE_BOARD_FAILURE`;\nexport const ADD_COMMENT_REQUEST = `ADD_COMMENT_REQUEST`;\nexport const ADD_COMMENT_SUCCESS = `ADD_COMMENT_SUCCESS`;\nexport const ADD_COMMENT_FAILURE = `ADD_COMMENT_FAILURE`;\nexport const UPDATE_COMMENT_REQUEST = `UPDATE_COMMENT_REQUEST`;\nexport const UPDATE_COMMENT_SUCCESS = `UPDATE_COMMENT_SUCCESS`;\nexport const UPDATE_COMMENT_FAILURE = `UPDATE_COMMENT_FAILURE`;\nexport const DELETE_COMMENT_REQUEST = `DELETE_COMMENT_REQUEST`;\nexport const DELETE_COMMENT_SUCCESS = `DELETE_COMMENT_SUCCESS`;\nexport const DELETE_COMMENT_FAILURE = `DELETE_COMMENT_FAILURE`;\n\nconst reducer = (state = initalState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      // 전체 게시글 조회\n      case LOAD_BOARDS_REQUEST:\n        draft.boards = !action.lastId ? [] : draft.boards;\n        draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : true;\n        break;\n\n      case LOAD_BOARDS_SUCCESS:\n        draft.boards = draft.boards.concat(action.data);\n        draft.hasMoreBoards = action.data.length === 30;\n        break;\n\n      case LOAD_BOARDS_FAILURE:\n        break;\n      // 게시글 조회\n\n      case LOAD_BOARD_REQUEST:\n        draft.boardDeleted = false;\n        draft.board = null;\n        break;\n\n      case LOAD_BOARD_SUCCESS:\n        draft.board = action.data;\n        break;\n\n      case LOAD_BOARD_FAILURE:\n        break;\n      // 게시글 작성\n\n      case ADD_BOARD_REQUEST:\n        draft.isAddingBoard = true;\n        draft.boardAdded = false;\n        break;\n\n      case ADD_BOARD_SUCCESS:\n        draft.isAddingBoard = false;\n        draft.boardAdded = true;\n        draft.boards.unshift(action.data);\n        break;\n\n      case ADD_BOARD_FAILURE:\n        break;\n      // 게시글 수정\n\n      case UPDATE_BOARD_REQUEST:\n        draft.isUpdatingBoard = true;\n        break;\n\n      case UPDATE_BOARD_SUCCESS:\n        draft.isUpdatingBoard = false;\n        draft.board.content = action.data;\n        break;\n\n      case UPDATE_BOARD_FAILURE:\n        break;\n      // 게시글 삭제\n\n      case DELETE_BOARD_REQUEST:\n        draft.boardDeleted = false;\n        break;\n\n      case DELETE_BOARD_SUCCESS:\n        const boardIndex = draft.boards.findIndex(v => v.id === action.data);\n        draft.boards.splice(boardIndex, 1);\n        draft.boardDeleted = true;\n        break;\n\n      case DELETE_BOARD_FAILURE:\n        break;\n      // 댓글 작성\n\n      case ADD_COMMENT_REQUEST:\n        draft.isAddingComment = true;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.isAddingComment = false;\n        draft.board.Comments.concat(action.data);\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        break;\n      // 댓글 수정\n\n      case UPDATE_COMMENT_REQUEST:\n        break;\n\n      case UPDATE_COMMENT_SUCCESS:\n        break;\n\n      case UPDATE_COMMENT_FAILURE:\n        break;\n      // 댓글 삭제\n\n      case DELETE_COMMENT_REQUEST:\n        break;\n\n      case DELETE_COMMENT_SUCCESS:\n        const commentIndex = draft.board.Comments.findIndex(v => v.id === action.data);\n        draft.board.Comments.splice(commentIndex, 1); // draft.board.Comments = draft.board.Comments.filter(c => c.id !== action.data);\n\n        break;\n\n      case DELETE_COMMENT_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/board.js"],"names":["produce","initalState","boards","board","isAddingBoard","boardAdded","boardDeleted","isUpdatingBoard","isAddingComment","LOAD_BOARDS_REQUEST","LOAD_BOARDS_SUCCESS","LOAD_BOARDS_FAILURE","LOAD_BOARD_REQUEST","LOAD_BOARD_SUCCESS","LOAD_BOARD_FAILURE","ADD_BOARD_REQUEST","ADD_BOARD_SUCCESS","ADD_BOARD_FAILURE","UPDATE_BOARD_REQUEST","UPDATE_BOARD_SUCCESS","UPDATE_BOARD_FAILURE","DELETE_BOARD_REQUEST","DELETE_BOARD_SUCCESS","DELETE_BOARD_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","UPDATE_COMMENT_REQUEST","UPDATE_COMMENT_SUCCESS","UPDATE_COMMENT_FAILURE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","reducer","state","action","draft","type","lastId","hasMoreBoards","concat","data","length","unshift","content","boardIndex","findIndex","v","id","splice","Comments","commentIndex"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  boards: [],\r\n  board: null,\r\n  isAddingBoard: false,\r\n  boardAdded: false,\r\n  boardDeleted: false,\r\n  isUpdatingBoard: false,\r\n  isAddingComment: false,\r\n};\r\n\r\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\r\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\r\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\r\n\r\nexport const LOAD_BOARD_REQUEST = `LOAD_BOARD_REQUEST`;\r\nexport const LOAD_BOARD_SUCCESS = `LOAD_BOARD_SUCCESS`;\r\nexport const LOAD_BOARD_FAILURE = `LOAD_BOARD_FAILURE`;\r\n\r\nexport const ADD_BOARD_REQUEST = `ADD_BOARD_REQUEST`;\r\nexport const ADD_BOARD_SUCCESS = `ADD_BOARD_SUCCESS`;\r\nexport const ADD_BOARD_FAILURE = `ADD_BOARD_FAILURE`;\r\n\r\nexport const UPDATE_BOARD_REQUEST = `UPDATE_BOARD_REQUEST`;\r\nexport const UPDATE_BOARD_SUCCESS = `UPDATE_BOARD_SUCCESS`;\r\nexport const UPDATE_BOARD_FAILURE = `UPDATE_BOARD_FAILURE`;\r\n\r\nexport const DELETE_BOARD_REQUEST = `DELETE_BOARD_REQUEST`;\r\nexport const DELETE_BOARD_SUCCESS = `DELETE_BOARD_SUCCESS`;\r\nexport const DELETE_BOARD_FAILURE = `DELETE_BOARD_FAILURE`;\r\n\r\nexport const ADD_COMMENT_REQUEST = `ADD_COMMENT_REQUEST`;\r\nexport const ADD_COMMENT_SUCCESS = `ADD_COMMENT_SUCCESS`;\r\nexport const ADD_COMMENT_FAILURE = `ADD_COMMENT_FAILURE`;\r\n\r\nexport const UPDATE_COMMENT_REQUEST = `UPDATE_COMMENT_REQUEST`;\r\nexport const UPDATE_COMMENT_SUCCESS = `UPDATE_COMMENT_SUCCESS`;\r\nexport const UPDATE_COMMENT_FAILURE = `UPDATE_COMMENT_FAILURE`;\r\n\r\nexport const DELETE_COMMENT_REQUEST = `DELETE_COMMENT_REQUEST`;\r\nexport const DELETE_COMMENT_SUCCESS = `DELETE_COMMENT_SUCCESS`;\r\nexport const DELETE_COMMENT_FAILURE = `DELETE_COMMENT_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      // 전체 게시글 조회\r\n      case LOAD_BOARDS_REQUEST:\r\n        draft.boards = !action.lastId ? [] : draft.boards;\r\n        draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : true;\r\n        break;\r\n      case LOAD_BOARDS_SUCCESS:\r\n        draft.boards = draft.boards.concat(action.data);\r\n        draft.hasMoreBoards = action.data.length === 30;\r\n        break;\r\n      case LOAD_BOARDS_FAILURE:\r\n        break;\r\n      // 게시글 조회\r\n      case LOAD_BOARD_REQUEST:\r\n        draft.boardDeleted = false;\r\n        draft.board = null;\r\n        break;\r\n      case LOAD_BOARD_SUCCESS:\r\n        draft.board = action.data;\r\n        break;\r\n      case LOAD_BOARD_FAILURE:\r\n        break;\r\n      // 게시글 작성\r\n      case ADD_BOARD_REQUEST:\r\n        draft.isAddingBoard = true;\r\n        draft.boardAdded = false;\r\n        break;\r\n      case ADD_BOARD_SUCCESS:\r\n        draft.isAddingBoard = false;\r\n        draft.boardAdded = true;\r\n        draft.boards.unshift(action.data);\r\n        break;\r\n      case ADD_BOARD_FAILURE:\r\n        break;\r\n      // 게시글 수정\r\n      case UPDATE_BOARD_REQUEST:\r\n        draft.isUpdatingBoard = true;\r\n        break;\r\n      case UPDATE_BOARD_SUCCESS:\r\n        draft.isUpdatingBoard = false;\r\n        draft.board.content = action.data;\r\n        break;\r\n      case UPDATE_BOARD_FAILURE:\r\n        break;\r\n      // 게시글 삭제\r\n      case DELETE_BOARD_REQUEST:\r\n        draft.boardDeleted = false;\r\n        break;\r\n      case DELETE_BOARD_SUCCESS:\r\n        const boardIndex = draft.boards.findIndex(v => v.id === action.data);\r\n        draft.boards.splice(boardIndex, 1);\r\n        draft.boardDeleted = true;\r\n        break;\r\n      case DELETE_BOARD_FAILURE:\r\n        break;\r\n      // 댓글 작성\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.isAddingComment = true;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        draft.isAddingComment = false;\r\n        draft.board.Comments.concat(action.data);\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        break;\r\n      // 댓글 수정\r\n      case UPDATE_COMMENT_REQUEST:\r\n        break;\r\n      case UPDATE_COMMENT_SUCCESS:\r\n        break;\r\n      case UPDATE_COMMENT_FAILURE:\r\n        break;\r\n      // 댓글 삭제\r\n      case DELETE_COMMENT_REQUEST:\r\n        break;\r\n      case DELETE_COMMENT_SUCCESS:\r\n        const commentIndex = draft.board.Comments.findIndex(\r\n          v => v.id === action.data,\r\n        );\r\n        draft.board.Comments.splice(commentIndex, 1);\r\n        // draft.board.Comments = draft.board.Comments.filter(c => c.id !== action.data);\r\n        break;\r\n      case DELETE_COMMENT_FAILURE:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}