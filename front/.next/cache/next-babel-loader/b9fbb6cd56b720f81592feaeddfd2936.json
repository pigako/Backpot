{"ast":null,"code":"import produce from 'immer';\nexport const initalState = {\n  isLoggingIn: false,\n  isLoggedIn: false,\n  loginErrorReason: '',\n  isLoggingOut: false,\n  isSignedUp: false,\n  isSigningUp: false,\n  signUpErrorReason: '',\n  me: null,\n  LikedBookList: [],\n  LikedWriterList: [],\n  otherUserInfo: null\n};\nexport const LOG_IN_REQUEST = `LOG_IN_REQUEST`;\nexport const LOG_IN_SUCCESS = `LOG_IN_SUCCESS`;\nexport const LOG_IN_FAILURE = `LOG_IN_FAILURE`;\nexport const LOG_OUT_REQUEST = `LOG_OUT_REQUEST`;\nexport const LOG_OUT_SUCCESS = `LOG_OUT_SUCCESS`;\nexport const LOG_OUT_FAILURE = `LOG_OUT_FAILURE`;\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\nexport const LOAD_USER_REQUEST = `LOAD_USER_REQUEST`;\nexport const LOAD_USER_SUCCESS = `LOAD_USER_SUCCESS`;\nexport const LOAD_USER_FAILURE = `LOAD_USER_FAILURE`;\n\nconst reducer = (state = initalState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      // 로그인\n      case LOG_IN_REQUEST:\n        draft.isLoggingIn = true;\n        draft.isLoggedIn = false;\n        draft.loginErrorReason = '';\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.isLoggingIn = false;\n        draft.isLoggedIn = true;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.isLoggingIn = false;\n        draft.loginErrorReason = action.error;\n        break;\n      // 로그아웃\n\n      case LOG_OUT_REQUEST:\n        draft.isLoggingOut = true;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.isLoggingOut = false;\n        draft.isLoggedIn = false;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.isLoggingOut = false;\n        break;\n      // 회원가입\n\n      case SIGN_UP_REQUEST:\n        draft.isSigningUp = true;\n        draft.signUpErrorReason = '';\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.isSigningUp = false;\n        draft.isSignedUp = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.isSigningUp = false;\n        draft.signUpErrorReason = action.error;\n        break;\n      // 유저 정보 불러오기\n\n      case LOAD_USER_REQUEST:\n        if (action.data) {\n          draft.otherUserInfo = null;\n        }\n\n        break;\n\n      case LOAD_USER_SUCCESS:\n        if (action.me) {\n          draft.me = action.data;\n        }\n\n        if (!action.me) {\n          draft.otherUserInfo = action.data;\n        }\n\n        break;\n\n      case LOAD_USER_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/user.js"],"names":["produce","initalState","isLoggingIn","isLoggedIn","loginErrorReason","isLoggingOut","isSignedUp","isSigningUp","signUpErrorReason","me","LikedBookList","LikedWriterList","otherUserInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","reducer","state","action","draft","type","data","error"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  isLoggingIn: false,\r\n  isLoggedIn: false,\r\n  loginErrorReason: '',\r\n  isLoggingOut: false,\r\n  isSignedUp: false,\r\n  isSigningUp: false,\r\n  signUpErrorReason: '',\r\n  me: null,\r\n  LikedBookList: [],\r\n  LikedWriterList: [],\r\n  otherUserInfo: null,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = `LOG_IN_REQUEST`;\r\nexport const LOG_IN_SUCCESS = `LOG_IN_SUCCESS`;\r\nexport const LOG_IN_FAILURE = `LOG_IN_FAILURE`;\r\n\r\nexport const LOG_OUT_REQUEST = `LOG_OUT_REQUEST`;\r\nexport const LOG_OUT_SUCCESS = `LOG_OUT_SUCCESS`;\r\nexport const LOG_OUT_FAILURE = `LOG_OUT_FAILURE`;\r\n\r\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\r\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\r\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\r\n\r\nexport const LOAD_USER_REQUEST = `LOAD_USER_REQUEST`;\r\nexport const LOAD_USER_SUCCESS = `LOAD_USER_SUCCESS`;\r\nexport const LOAD_USER_FAILURE = `LOAD_USER_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      // 로그인\r\n      case LOG_IN_REQUEST:\r\n        draft.isLoggingIn = true;\r\n        draft.isLoggedIn = false;\r\n        draft.loginErrorReason = '';\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.isLoggingIn = false;\r\n        draft.isLoggedIn = true;\r\n        draft.me = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.isLoggingIn = false;\r\n        draft.loginErrorReason = action.error;\r\n        break;\r\n      // 로그아웃\r\n      case LOG_OUT_REQUEST:\r\n        draft.isLoggingOut = true;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.isLoggingOut = false;\r\n        draft.isLoggedIn = false;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.isLoggingOut = false;\r\n        break;\r\n      // 회원가입\r\n      case SIGN_UP_REQUEST:\r\n        draft.isSigningUp = true;\r\n        draft.signUpErrorReason = '';\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.isSigningUp = false;\r\n        draft.isSignedUp = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.isSigningUp = false;\r\n        draft.signUpErrorReason = action.error;\r\n        break;\r\n      // 유저 정보 불러오기\r\n      case LOAD_USER_REQUEST:\r\n        if (action.data) {\r\n          draft.otherUserInfo = null;\r\n        }\r\n        break;\r\n      case LOAD_USER_SUCCESS:\r\n        if (action.me) {\r\n          draft.me = action.data;\r\n        }\r\n        if (!action.me) {\r\n          draft.otherUserInfo = action.data;\r\n        }\r\n        break;\r\n      case LOAD_USER_FAILURE:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}