{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// HTML의 역할을 한다.\nimport React from 'react';\nimport Document, { Main, NextScript } from 'next/document';\nimport Helmet from 'react-helmet';\nimport Proptypes from 'prop-types';\nimport { ServerStyleSheet } from 'styled-components';\n\nclass MyDocument extends Document {\n  static getInitialProps(context) {\n    const sheet = new ServerStyleSheet();\n    const page = context.renderPage(App => props => sheet.collectStyles(__jsx(App, props)));\n    const styleTages = sheet.getStyleElement();\n    return _objectSpread({}, page, {\n      helmet: Helmet.renderStatic(),\n      styleTages\n    });\n  }\n\n  render() {\n    const _this$props$helmet = this.props.helmet,\n          {\n      htmlAttributes,\n      bodyAttributes\n    } = _this$props$helmet,\n          helmet = _objectWithoutProperties(_this$props$helmet, [\"htmlAttributes\", \"bodyAttributes\"]);\n\n    const htmlAttrs = htmlAttributes.toComponent();\n    const bodyAttrs = bodyAttributes.toComponent();\n    return __jsx(\"html\", htmlAttrs, __jsx(\"head\", null, this.props.styleTages, Object.values(helmet).map(el => el.toComponent())), __jsx(\"body\", bodyAttrs, __jsx(Main, null), true && __jsx(\"script\", {\n      src: \"https://polyfill.io/v3/polyfill.min.js?features=es6,es7,es8,es9,NodeList.prototype.forEach&flags=gated\"\n    }), __jsx(NextScript, null)));\n  }\n\n}\n\nMyDocument.propTypes = {\n  helmet: Proptypes.object.isRequired,\n  styleTags: Proptypes.object.isRequired\n};\nexport default MyDocument;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/_documnets.js"],"names":["React","Document","Main","NextScript","Helmet","Proptypes","ServerStyleSheet","MyDocument","getInitialProps","context","sheet","page","renderPage","App","props","collectStyles","styleTages","getStyleElement","helmet","renderStatic","render","htmlAttributes","bodyAttributes","htmlAttrs","toComponent","bodyAttrs","Object","values","map","el","propTypes","object","isRequired","styleTags"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChC,SAAOO,eAAP,CAAuBC,OAAvB,EAAgC;AAC9B,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,IAAI,GAAGF,OAAO,CAACG,UAAR,CAAoBC,GAAD,IAAUC,KAAD,IACvCJ,KAAK,CAACK,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB,CADW,CAAb;AAGA,UAAME,UAAU,GAAGN,KAAK,CAACO,eAAN,EAAnB;AACA,6BAAYN,IAAZ;AAAkBO,MAAAA,MAAM,EAAEd,MAAM,CAACe,YAAP,EAA1B;AAAiDH,MAAAA;AAAjD;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,+BAAsD,KAAKN,KAAL,CAAWI,MAAjE;AAAA,UAAM;AAAEG,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAN;AAAA,UAA2CJ,MAA3C;;AACA,UAAMK,SAAS,GAAGF,cAAc,CAACG,WAAf,EAAlB;AACA,UAAMC,SAAS,GAAGH,cAAc,CAACE,WAAf,EAAlB;AACA,WACE,cAAUD,SAAV,EACE,oBACG,KAAKT,KAAL,CAAWE,UADd,EAEGU,MAAM,CAACC,MAAP,CAAcT,MAAd,EAAsBU,GAAtB,CAA2BC,EAAD,IAAQA,EAAE,CAACL,WAAH,EAAlC,CAFH,CADF,EAKE,cAAUC,SAAV,EACE,MAAC,IAAD,OADF,EAEG,QACC;AAAQ,MAAA,GAAG,EAAC;AAAZ,MAHJ,EAKE,MAAC,UAAD,OALF,CALF,CADF;AAeD;;AA7B+B;;AAgClClB,UAAU,CAACuB,SAAX,GAAuB;AACrBZ,EAAAA,MAAM,EAAEb,SAAS,CAAC0B,MAAV,CAAiBC,UADJ;AAErBC,EAAAA,SAAS,EAAE5B,SAAS,CAAC0B,MAAV,CAAiBC;AAFP,CAAvB;AAKA,eAAezB,UAAf","sourcesContent":["// HTML의 역할을 한다.\r\nimport React from 'react';\r\nimport Document, { Main, NextScript } from 'next/document';\r\nimport Helmet from 'react-helmet';\r\nimport Proptypes from 'prop-types';\r\nimport { ServerStyleSheet } from 'styled-components';\r\n\r\nclass MyDocument extends Document {\r\n  static getInitialProps(context) {\r\n    const sheet = new ServerStyleSheet();\r\n    const page = context.renderPage((App) => (props) =>\r\n      sheet.collectStyles(<App {...props} />),\r\n    );\r\n    const styleTages = sheet.getStyleElement();\r\n    return { ...page, helmet: Helmet.renderStatic(), styleTages };\r\n  }\r\n\r\n  render() {\r\n    const { htmlAttributes, bodyAttributes, ...helmet } = this.props.helmet;\r\n    const htmlAttrs = htmlAttributes.toComponent();\r\n    const bodyAttrs = bodyAttributes.toComponent();\r\n    return (\r\n      <html {...htmlAttrs}>\r\n        <head>\r\n          {this.props.styleTages}\r\n          {Object.values(helmet).map((el) => el.toComponent())}\r\n        </head>\r\n        <body {...bodyAttrs}>\r\n          <Main />\r\n          {process.env.NODE_ENV === 'production' && (\r\n            <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6,es7,es8,es9,NodeList.prototype.forEach&flags=gated\" />\r\n          )}\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nMyDocument.propTypes = {\r\n  helmet: Proptypes.object.isRequired,\r\n  styleTags: Proptypes.object.isRequired,\r\n};\r\n\r\nexport default MyDocument;\r\n"]},"metadata":{},"sourceType":"module"}