{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DELETE_COMMENT_REQUEST } from '../reducers/board';\nvar SCommentCard = styled.div.withConfig({\n  displayName: \"CommentCard__SCommentCard\",\n  componentId: \"sc-1fhrn1i-0\"\n})([\"margin:1.5rem;\"]);\nvar CommentCardTop = styled.div.withConfig({\n  displayName: \"CommentCard__CommentCardTop\",\n  componentId: \"sc-1fhrn1i-1\"\n})([\"height:2rem;background:#f7f7f7;border-bottom:solid 1px #6441a5;display:inline-block;width:100%;font-size:1rem;& > label{line-height:2rem;}\"]);\nvar CommentCardNickname = styled.label.withConfig({\n  displayName: \"CommentCard__CommentCardNickname\",\n  componentId: \"sc-1fhrn1i-2\"\n})([\"font-weight:bold;margin-left:1rem;\"]);\nvar CommentCardCreateLabel = styled.label.withConfig({\n  displayName: \"CommentCard__CommentCardCreateLabel\",\n  componentId: \"sc-1fhrn1i-3\"\n})([\"display:block;float:right;\"]);\nvar CommentUpDelButtonDiv = styled.div.withConfig({\n  displayName: \"CommentCard__CommentUpDelButtonDiv\",\n  componentId: \"sc-1fhrn1i-4\"\n})([\"font-size:1rem;display:inline-block;float:right;margin-right:1rem;line-height:2rem;& > a{margin-left:10px;margin-right:10px;cursor:pointer;&:hover{color:#148cff;}}\"]);\nvar CommentCardContent = styled.div.withConfig({\n  displayName: \"CommentCard__CommentCardContent\",\n  componentId: \"sc-1fhrn1i-5\"\n})([\"margin:1.5rem;& > div{font-size:1rem;line-height:1.5rem;}\"]);\n\nvar CommentCard = function CommentCard(_ref) {\n  var comment = _ref.comment;\n\n  var _ref2 = useSelector(function (state) {\n    return state.user.me;\n  }) || false,\n      myId = _ref2.id;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      isUpdatingComment = _useState[0],\n      setIsUpdatingComment = _useState[1];\n\n  var _useState2 = useState(''),\n      updateCommentText = _useState2[0],\n      setUpdateCommentText = _useState2[1];\n\n  var onUpdateComment = useCallback(function (e) {\n    if (isUpdatingComment) {} else {\n      setIsUpdatingComment(true);\n    }\n  }, [isUpdatingComment]);\n  var onUpdateCommentCancle = useCallback(function (e) {\n    setIsUpdatingComment(false);\n    setUpdateCommentText(comment.content);\n  }, [comment && comment.content]);\n  var onDeleteComment = useCallback(function (e) {\n    console.log('CommentCard', comment.id);\n    dispatch({\n      type: DELETE_COMMENT_REQUEST,\n      commentId: comment.id\n    });\n  }, [comment && comment.id]);\n  return __jsx(SCommentCard, {\n    key: +comment.id\n  }, __jsx(CommentCardTop, null, __jsx(CommentCardNickname, null, comment.User.nickname), __jsx(CommentCardCreateLabel, null, moment(comment.createdAt).format('YY.MM.DD HH시 mm분')), myId === comment.User.id ? __jsx(CommentUpDelButtonDiv, null, isUpdatingComment ? __jsx(\"a\", {\n    onClick: onUpdateCommentCancle\n  }, \"\\uCDE8\\uC18C\") : null, __jsx(\"a\", {\n    onClick: onUpdateComment\n  }, \"\\uC218\\uC815\"), __jsx(\"a\", {\n    onClick: onDeleteComment\n  }, \"\\uC0AD\\uC81C\")) : null), __jsx(CommentCardContent, null, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: comment.content\n    }\n  })));\n};\n\nCommentCard.propTypes = {\n  comment: PropTypes.object.isRequired\n};\nexport default CommentCard;","map":{"version":3,"sources":["C:/Document/Backpot/front/components/CommentCard.js"],"names":["React","useCallback","useState","PropTypes","styled","moment","useSelector","useDispatch","DELETE_COMMENT_REQUEST","SCommentCard","div","CommentCardTop","CommentCardNickname","label","CommentCardCreateLabel","CommentUpDelButtonDiv","CommentCardContent","CommentCard","comment","state","user","me","myId","id","dispatch","isUpdatingComment","setIsUpdatingComment","updateCommentText","setUpdateCommentText","onUpdateComment","e","onUpdateCommentCancle","content","onDeleteComment","console","log","type","commentId","User","nickname","createdAt","format","__html","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { DELETE_COMMENT_REQUEST } from '../reducers/board';\r\n\r\nconst SCommentCard = styled.div`\r\n  margin: 1.5rem;\r\n`;\r\nconst CommentCardTop = styled.div`\r\n  height: 2rem;\r\n  background: #f7f7f7;\r\n  border-bottom: solid 1px #6441a5;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n\r\n  & > label {\r\n    line-height: 2rem;\r\n  }\r\n`;\r\nconst CommentCardNickname = styled.label`\r\n  font-weight: bold;\r\n  margin-left: 1rem;\r\n`;\r\nconst CommentCardCreateLabel = styled.label`\r\n  display: block;\r\n  float: right;\r\n`;\r\nconst CommentUpDelButtonDiv = styled.div`\r\n  font-size: 1rem;\r\n  display: inline-block;\r\n  float: right;\r\n  margin-right: 1rem;\r\n  line-height: 2rem;\r\n\r\n  & > a {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #148cff;\r\n    }\r\n  }\r\n`;\r\nconst CommentCardContent = styled.div`\r\n  margin: 1.5rem;\r\n  & > div {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst CommentCard = ({ comment }) => {\r\n  const { id: myId } = useSelector(state => state.user.me) || false;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isUpdatingComment, setIsUpdatingComment] = useState(false);\r\n  const [updateCommentText, setUpdateCommentText] = useState('');\r\n\r\n  const onUpdateComment = useCallback(\r\n    e => {\r\n      if (isUpdatingComment) {\r\n      } else {\r\n        setIsUpdatingComment(true);\r\n      }\r\n    },\r\n    [isUpdatingComment],\r\n  );\r\n\r\n  const onUpdateCommentCancle = useCallback(\r\n    e => {\r\n      setIsUpdatingComment(false);\r\n      setUpdateCommentText(comment.content);\r\n    },\r\n    [comment && comment.content],\r\n  );\r\n\r\n  const onDeleteComment = useCallback(\r\n    e => {\r\n      console.log('CommentCard', comment.id);\r\n      dispatch({\r\n        type: DELETE_COMMENT_REQUEST,\r\n        commentId: comment.id,\r\n      });\r\n    },\r\n    [comment && comment.id],\r\n  );\r\n\r\n  return (\r\n    <SCommentCard key={+comment.id}>\r\n      <CommentCardTop>\r\n        <CommentCardNickname>{comment.User.nickname}</CommentCardNickname>\r\n        <CommentCardCreateLabel>\r\n          {moment(comment.createdAt).format('YY.MM.DD HH시 mm분')}\r\n        </CommentCardCreateLabel>\r\n        {myId === comment.User.id ? (\r\n          <CommentUpDelButtonDiv>\r\n            {isUpdatingComment ? (\r\n              <a onClick={onUpdateCommentCancle}>취소</a>\r\n            ) : null}\r\n            <a onClick={onUpdateComment}>수정</a>\r\n            <a onClick={onDeleteComment}>삭제</a>\r\n          </CommentUpDelButtonDiv>\r\n        ) : null}\r\n      </CommentCardTop>\r\n      <CommentCardContent>\r\n        <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n      </CommentCardContent>\r\n    </SCommentCard>\r\n  );\r\n};\r\n\r\nCommentCard.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentCard;\r\n"]},"metadata":{},"sourceType":"module"}