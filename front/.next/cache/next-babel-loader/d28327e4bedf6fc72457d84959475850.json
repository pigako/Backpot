{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport LOAD_USER_REQUEST from '../reducers/user';\nimport BookCard from '../components/BookCard';\nvar NovelList = styled.div.withConfig({\n  displayName: \"librery__NovelList\",\n  componentId: \"sc-1ufjrpz-0\"\n})([\"\"]);\nvar MyBoard = styled.div.withConfig({\n  displayName: \"librery__MyBoard\",\n  componentId: \"sc-1ufjrpz-1\"\n})([\"\"]);\n\nvar Librery = function Librery(_ref) {\n  var user = _ref.user;\n  return __jsx(\"div\", null, __jsx(NovelList, null), __jsx(MyBoard, null, \" \"));\n};\n\nLibrery.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nLibrery.getInitialProps = function _callee(context) {\n  var id, state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n\n          if (!id) {\n            alert('잘못된 접근입니다.');\n            Router.push('/');\n          }\n\n          state = context.store.getState();\n\n          if (!(id !== (state.user.me && state.user.me.id))) {\n            _context.next = 6;\n            break;\n          }\n\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          return _context.abrupt(\"return\", state.user.otherUserInfo);\n\n        case 6:\n          return _context.abrupt(\"return\", state.user.me);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Librery;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/librery.js"],"names":["React","PropTypes","styled","Router","LOAD_USER_REQUEST","BookCard","NovelList","div","MyBoard","Librery","user","propTypes","object","isRequired","getInitialProps","context","id","query","alert","push","state","store","getState","me","dispatch","type","data","otherUserInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,QAAf;AAEA,IAAMC,OAAO,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,QAAb;;AAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC5B,SACE,mBACE,MAAC,SAAD,OADF,EAEE,MAAC,OAAD,YAFF,CADF;AAMD,CAPD;;AASAD,OAAO,CAACE,SAAR,GAAoB;AAClBD,EAAAA,IAAI,EAAET,SAAS,CAACW,MAAV,CAAiBC;AADL,CAApB;;AAIAJ,OAAO,CAACK,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,EADkB,GACbD,OAAO,CAACE,KAAR,CAAcD,EADD;;AAExB,cAAI,CAACA,EAAL,EAAS;AACPE,YAAAA,KAAK,CAAC,YAAD,CAAL;AACAf,YAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;AACD;;AACKC,UAAAA,KANkB,GAMVL,OAAO,CAACM,KAAR,CAAcC,QAAd,EANU;;AAAA,gBAOpBN,EAAE,MAAMI,KAAK,CAACV,IAAN,CAAWa,EAAX,IAAiBH,KAAK,CAACV,IAAN,CAAWa,EAAX,CAAcP,EAArC,CAPkB;AAAA;AAAA;AAAA;;AAQtBD,UAAAA,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuB;AACrBC,YAAAA,IAAI,EAAErB,iBADe;AAErBsB,YAAAA,IAAI,EAAEV;AAFe,WAAvB;AARsB,2CAYfI,KAAK,CAACV,IAAN,CAAWiB,aAZI;;AAAA;AAAA,2CAcjBP,KAAK,CAACV,IAAN,CAAWa,EAdM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAiBA,eAAed,OAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport LOAD_USER_REQUEST from '../reducers/user';\r\nimport BookCard from '../components/BookCard';\r\n\r\nconst NovelList = styled.div``;\r\n\r\nconst MyBoard = styled.div``;\r\n\r\nconst Librery = ({ user }) => {\r\n  return (\r\n    <div>\r\n      <NovelList></NovelList>\r\n      <MyBoard> </MyBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nLibrery.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nLibrery.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  if (!id) {\r\n    alert('잘못된 접근입니다.');\r\n    Router.push('/');\r\n  }\r\n  const state = context.store.getState();\r\n  if (id !== (state.user.me && state.user.me.id)) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n    return state.user.otherUserInfo;\r\n  }\r\n  return state.user.me;\r\n};\r\n\r\nexport default Librery;\r\n"]},"metadata":{},"sourceType":"module"}