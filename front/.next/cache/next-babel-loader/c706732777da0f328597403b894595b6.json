{"ast":null,"code":"import produce from 'immer';\nexport var initalState = {\n  boards: [],\n  hasMoreBoards: false,\n  keyword: '',\n  board: null,\n  isAddingBoard: false,\n  boardAdded: false,\n  boardDeleted: false,\n  isUpdatingBoard: false,\n  isAddingComment: false,\n  commentAdded: false,\n  isUpdatingComment: false\n};\nexport var LOAD_BOARDS_REQUEST = \"LOAD_BOARDS_REQUEST\";\nexport var LOAD_BOARDS_SUCCESS = \"LOAD_BOARDS_SUCCESS\";\nexport var LOAD_BOARDS_FAILURE = \"LOAD_BOARDS_FAILURE\";\nexport var LOAD_BOARD_REQUEST = \"LOAD_BOARD_REQUEST\";\nexport var LOAD_BOARD_SUCCESS = \"LOAD_BOARD_SUCCESS\";\nexport var LOAD_BOARD_FAILURE = \"LOAD_BOARD_FAILURE\";\nexport var ADD_BOARD_REQUEST = \"ADD_BOARD_REQUEST\";\nexport var ADD_BOARD_SUCCESS = \"ADD_BOARD_SUCCESS\";\nexport var ADD_BOARD_FAILURE = \"ADD_BOARD_FAILURE\";\nexport var UPDATE_BOARD_REQUEST = \"UPDATE_BOARD_REQUEST\";\nexport var UPDATE_BOARD_SUCCESS = \"UPDATE_BOARD_SUCCESS\";\nexport var UPDATE_BOARD_FAILURE = \"UPDATE_BOARD_FAILURE\";\nexport var DELETE_BOARD_REQUEST = \"DELETE_BOARD_REQUEST\";\nexport var DELETE_BOARD_SUCCESS = \"DELETE_BOARD_SUCCESS\";\nexport var DELETE_BOARD_FAILURE = \"DELETE_BOARD_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var UPDATE_COMMENT_REQUEST = \"UPDATE_COMMENT_REQUEST\";\nexport var UPDATE_COMMENT_SUCCESS = \"UPDATE_COMMENT_SUCCESS\";\nexport var UPDATE_COMMENT_FAILURE = \"UPDATE_COMMENT_FAILURE\";\nexport var DELETE_COMMENT_REQUEST = \"DELETE_COMMENT_REQUEST\";\nexport var DELETE_COMMENT_SUCCESS = \"DELETE_COMMENT_SUCCESS\";\nexport var DELETE_COMMENT_FAILURE = \"DELETE_COMMENT_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      // 전체 게시글 조회\n      case LOAD_BOARDS_REQUEST:\n        {\n          draft.boards = !action.lastId ? [] : draft.boards;\n\n          if (draft.hasMoreBoards) {\n            draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : false;\n          }\n\n          break;\n        }\n\n      case LOAD_BOARDS_SUCCESS:\n        {\n          draft.boards = draft.boards.concat(action.data);\n          draft.hasMoreBoards = action.data.length === 30;\n          break;\n        }\n\n      case LOAD_BOARDS_FAILURE:\n        {\n          break;\n        }\n      // 게시글 조회\n\n      case LOAD_BOARD_REQUEST:\n        {\n          draft.boardDeleted = false;\n          draft.board = null;\n          break;\n        }\n\n      case LOAD_BOARD_SUCCESS:\n        {\n          draft.board = action.data;\n          break;\n        }\n\n      case LOAD_BOARD_FAILURE:\n        {\n          break;\n        }\n      // 게시글 작성\n\n      case ADD_BOARD_REQUEST:\n        {\n          draft.isAddingBoard = true;\n          draft.boardAdded = false;\n          break;\n        }\n\n      case ADD_BOARD_SUCCESS:\n        {\n          draft.isAddingBoard = false;\n          draft.boardAdded = true;\n          draft.boards.unshift(action.data);\n          break;\n        }\n\n      case ADD_BOARD_FAILURE:\n        {\n          break;\n        }\n      // 게시글 수정\n\n      case UPDATE_BOARD_REQUEST:\n        {\n          draft.isUpdatingBoard = true;\n          break;\n        }\n\n      case UPDATE_BOARD_SUCCESS:\n        {\n          draft.isUpdatingBoard = false;\n          draft.board.content = action.data;\n          break;\n        }\n\n      case UPDATE_BOARD_FAILURE:\n        {\n          break;\n        }\n      // 게시글 삭제\n\n      case DELETE_BOARD_REQUEST:\n        {\n          draft.boardDeleted = false;\n          break;\n        }\n\n      case DELETE_BOARD_SUCCESS:\n        {\n          var boardIndex = draft.boards.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.boards.splice(boardIndex, 1);\n          draft.boardDeleted = true;\n          break;\n        }\n\n      case DELETE_BOARD_FAILURE:\n        {\n          break;\n        }\n      // 댓글 작성\n\n      case ADD_COMMENT_REQUEST:\n        {\n          draft.isAddingComment = true;\n          draft.commentAdded = false;\n          break;\n        }\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          draft.isAddingComment = false;\n          draft.commentAdded = true;\n          draft.board.Comments.push(action.data);\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        {\n          break;\n        }\n      // 댓글 수정\n\n      case UPDATE_COMMENT_REQUEST:\n        {\n          draft.isUpdatingBoard = true;\n          break;\n        }\n\n      case UPDATE_COMMENT_SUCCESS:\n        {\n          draft.isUpdatingBoard = false;\n          var commentIndex = draft.board.Comments.findIndex(function (v) {\n            return v.id === action.data.id;\n          });\n          draft.board.Comments[commentIndex].content = action.data.content;\n          break;\n        }\n\n      case UPDATE_COMMENT_FAILURE:\n        {\n          break;\n        }\n      // 댓글 삭제\n\n      case DELETE_COMMENT_REQUEST:\n        {\n          break;\n        }\n\n      case DELETE_COMMENT_SUCCESS:\n        {\n          var _commentIndex = draft.board.Comments.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.board.Comments.splice(_commentIndex, 1); // draft.board.Comments = draft.board.Comments.filter(c => c.id !== action.data);\n\n          break;\n        }\n\n      case DELETE_COMMENT_FAILURE:\n        {\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/board.js"],"names":["produce","initalState","boards","hasMoreBoards","keyword","board","isAddingBoard","boardAdded","boardDeleted","isUpdatingBoard","isAddingComment","commentAdded","isUpdatingComment","LOAD_BOARDS_REQUEST","LOAD_BOARDS_SUCCESS","LOAD_BOARDS_FAILURE","LOAD_BOARD_REQUEST","LOAD_BOARD_SUCCESS","LOAD_BOARD_FAILURE","ADD_BOARD_REQUEST","ADD_BOARD_SUCCESS","ADD_BOARD_FAILURE","UPDATE_BOARD_REQUEST","UPDATE_BOARD_SUCCESS","UPDATE_BOARD_FAILURE","DELETE_BOARD_REQUEST","DELETE_BOARD_SUCCESS","DELETE_BOARD_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","UPDATE_COMMENT_REQUEST","UPDATE_COMMENT_SUCCESS","UPDATE_COMMENT_FAILURE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","reducer","state","action","draft","type","lastId","concat","data","length","unshift","content","boardIndex","findIndex","v","id","splice","Comments","push","commentIndex"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  boards: [],\r\n  hasMoreBoards: false,\r\n  keyword: '',\r\n  board: null,\r\n  isAddingBoard: false,\r\n  boardAdded: false,\r\n  boardDeleted: false,\r\n  isUpdatingBoard: false,\r\n  isAddingComment: false,\r\n  commentAdded: false,\r\n  isUpdatingComment: false,\r\n};\r\n\r\nexport const LOAD_BOARDS_REQUEST = `LOAD_BOARDS_REQUEST`;\r\nexport const LOAD_BOARDS_SUCCESS = `LOAD_BOARDS_SUCCESS`;\r\nexport const LOAD_BOARDS_FAILURE = `LOAD_BOARDS_FAILURE`;\r\n\r\nexport const LOAD_BOARD_REQUEST = `LOAD_BOARD_REQUEST`;\r\nexport const LOAD_BOARD_SUCCESS = `LOAD_BOARD_SUCCESS`;\r\nexport const LOAD_BOARD_FAILURE = `LOAD_BOARD_FAILURE`;\r\n\r\nexport const ADD_BOARD_REQUEST = `ADD_BOARD_REQUEST`;\r\nexport const ADD_BOARD_SUCCESS = `ADD_BOARD_SUCCESS`;\r\nexport const ADD_BOARD_FAILURE = `ADD_BOARD_FAILURE`;\r\n\r\nexport const UPDATE_BOARD_REQUEST = `UPDATE_BOARD_REQUEST`;\r\nexport const UPDATE_BOARD_SUCCESS = `UPDATE_BOARD_SUCCESS`;\r\nexport const UPDATE_BOARD_FAILURE = `UPDATE_BOARD_FAILURE`;\r\n\r\nexport const DELETE_BOARD_REQUEST = `DELETE_BOARD_REQUEST`;\r\nexport const DELETE_BOARD_SUCCESS = `DELETE_BOARD_SUCCESS`;\r\nexport const DELETE_BOARD_FAILURE = `DELETE_BOARD_FAILURE`;\r\n\r\nexport const ADD_COMMENT_REQUEST = `ADD_COMMENT_REQUEST`;\r\nexport const ADD_COMMENT_SUCCESS = `ADD_COMMENT_SUCCESS`;\r\nexport const ADD_COMMENT_FAILURE = `ADD_COMMENT_FAILURE`;\r\n\r\nexport const UPDATE_COMMENT_REQUEST = `UPDATE_COMMENT_REQUEST`;\r\nexport const UPDATE_COMMENT_SUCCESS = `UPDATE_COMMENT_SUCCESS`;\r\nexport const UPDATE_COMMENT_FAILURE = `UPDATE_COMMENT_FAILURE`;\r\n\r\nexport const DELETE_COMMENT_REQUEST = `DELETE_COMMENT_REQUEST`;\r\nexport const DELETE_COMMENT_SUCCESS = `DELETE_COMMENT_SUCCESS`;\r\nexport const DELETE_COMMENT_FAILURE = `DELETE_COMMENT_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      // 전체 게시글 조회\r\n      case LOAD_BOARDS_REQUEST: {\r\n        draft.boards = !action.lastId ? [] : draft.boards;\r\n        if (draft.hasMoreBoards) {\r\n          draft.hasMoreBoards = action.lastId ? draft.hasMoreBoards : false;\r\n        }\r\n        break;\r\n      }\r\n      case LOAD_BOARDS_SUCCESS: {\r\n        draft.boards = draft.boards.concat(action.data);\r\n        draft.hasMoreBoards = action.data.length === 30;\r\n        break;\r\n      }\r\n      case LOAD_BOARDS_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 조회\r\n      case LOAD_BOARD_REQUEST: {\r\n        draft.boardDeleted = false;\r\n        draft.board = null;\r\n        break;\r\n      }\r\n      case LOAD_BOARD_SUCCESS: {\r\n        draft.board = action.data;\r\n        break;\r\n      }\r\n      case LOAD_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 작성\r\n      case ADD_BOARD_REQUEST: {\r\n        draft.isAddingBoard = true;\r\n        draft.boardAdded = false;\r\n        break;\r\n      }\r\n      case ADD_BOARD_SUCCESS: {\r\n        draft.isAddingBoard = false;\r\n        draft.boardAdded = true;\r\n        draft.boards.unshift(action.data);\r\n        break;\r\n      }\r\n      case ADD_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 수정\r\n      case UPDATE_BOARD_REQUEST: {\r\n        draft.isUpdatingBoard = true;\r\n        break;\r\n      }\r\n      case UPDATE_BOARD_SUCCESS: {\r\n        draft.isUpdatingBoard = false;\r\n        draft.board.content = action.data;\r\n        break;\r\n      }\r\n      case UPDATE_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 게시글 삭제\r\n      case DELETE_BOARD_REQUEST: {\r\n        draft.boardDeleted = false;\r\n        break;\r\n      }\r\n      case DELETE_BOARD_SUCCESS: {\r\n        const boardIndex = draft.boards.findIndex(v => v.id === action.data);\r\n        draft.boards.splice(boardIndex, 1);\r\n        draft.boardDeleted = true;\r\n        break;\r\n      }\r\n      case DELETE_BOARD_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 작성\r\n      case ADD_COMMENT_REQUEST: {\r\n        draft.isAddingComment = true;\r\n        draft.commentAdded = false;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_SUCCESS: {\r\n        draft.isAddingComment = false;\r\n        draft.commentAdded = true;\r\n        draft.board.Comments.push(action.data);\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 수정\r\n      case UPDATE_COMMENT_REQUEST: {\r\n        draft.isUpdatingBoard = true;\r\n        break;\r\n      }\r\n      case UPDATE_COMMENT_SUCCESS: {\r\n        draft.isUpdatingBoard = false;\r\n        const commentIndex = draft.board.Comments.findIndex(\r\n          v => v.id === action.data.id,\r\n        );\r\n        draft.board.Comments[commentIndex].content = action.data.content;\r\n        break;\r\n      }\r\n      case UPDATE_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      // 댓글 삭제\r\n      case DELETE_COMMENT_REQUEST: {\r\n        break;\r\n      }\r\n      case DELETE_COMMENT_SUCCESS: {\r\n        const commentIndex = draft.board.Comments.findIndex(\r\n          v => v.id === action.data,\r\n        );\r\n        draft.board.Comments.splice(commentIndex, 1);\r\n        // draft.board.Comments = draft.board.Comments.filter(c => c.id !== action.data);\r\n        break;\r\n      }\r\n      case DELETE_COMMENT_FAILURE: {\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}