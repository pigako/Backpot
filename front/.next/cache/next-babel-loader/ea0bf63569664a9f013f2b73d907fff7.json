{"ast":null,"code":"import produce from 'immer';\nexport var initalState = {\n  isLoggingIn: false,\n  loginErrorReason: '',\n  isSignedUp: false,\n  isSigningUp: false,\n  signUpErrorReason: '',\n  me: [],\n  LikedBookList: [],\n  LikedWriterList: [],\n  otherUserInfo: []\n};\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.isLoggingIn = true;\n        draft.loginErrorReason = '';\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.isLoggingIn = false;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.isLoggingIn = false;\n        draft.loginErrorReason = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.isSigningUp = true;\n        draft.signUpErrorReason = '';\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.isSigningUp = false;\n        draft.isSignedUp = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.isSigningUp = false;\n        draft.signUpErrorReason = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/user.js"],"names":["produce","initalState","isLoggingIn","loginErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","LikedBookList","LikedWriterList","otherUserInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","reducer","state","action","draft","type","data","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,WAAW,EAAE,KADY;AAEzBC,EAAAA,gBAAgB,EAAE,EAFO;AAGzBC,EAAAA,UAAU,EAAE,KAHa;AAIzBC,EAAAA,WAAW,EAAE,KAJY;AAKzBC,EAAAA,iBAAiB,EAAE,EALM;AAMzBC,EAAAA,EAAE,EAAE,EANqB;AAOzBC,EAAAA,aAAa,EAAE,EAPU;AAQzBC,EAAAA,eAAe,EAAE,EARQ;AASzBC,EAAAA,aAAa,EAAE;AATU,CAApB;AAYP,OAAO,IAAMC,cAAc,mBAApB;AACP,OAAO,IAAMC,cAAc,mBAApB;AACP,OAAO,IAAMC,cAAc,mBAApB;AAEP,OAAO,IAAMC,eAAe,oBAArB;AACP,OAAO,IAAMC,eAAe,oBAArB;AACP,OAAO,IAAMC,eAAe,oBAArB;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBjB,WAAwB;AAAA,MAAXkB,MAAW;AAC/C,SAAOnB,OAAO,CAACkB,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKV,cAAL;AACES,QAAAA,KAAK,CAAClB,WAAN,GAAoB,IAApB;AACAkB,QAAAA,KAAK,CAACjB,gBAAN,GAAyB,EAAzB;AACA;;AACF,WAAKS,cAAL;AACEQ,QAAAA,KAAK,CAAClB,WAAN,GAAoB,KAApB;AACAkB,QAAAA,KAAK,CAACb,EAAN,GAAWY,MAAM,CAACG,IAAlB;AACA;;AACF,WAAKT,cAAL;AACEO,QAAAA,KAAK,CAAClB,WAAN,GAAoB,KAApB;AACAkB,QAAAA,KAAK,CAACjB,gBAAN,GAAyBgB,MAAM,CAACI,KAAhC;AACA;;AACF,WAAKT,eAAL;AACEM,QAAAA,KAAK,CAACf,WAAN,GAAoB,IAApB;AACAe,QAAAA,KAAK,CAACd,iBAAN,GAA0B,EAA1B;AACA;;AACF,WAAKS,eAAL;AACEK,QAAAA,KAAK,CAACf,WAAN,GAAoB,KAApB;AACAe,QAAAA,KAAK,CAAChB,UAAN,GAAmB,IAAnB;AACA;;AACF,WAAKY,eAAL;AACEI,QAAAA,KAAK,CAACf,WAAN,GAAoB,KAApB;AACAe,QAAAA,KAAK,CAACd,iBAAN,GAA0Ba,MAAM,CAACI,KAAjC;AACA;;AACF;AACE;AA1BJ;AA4BD,GA7Ba,CAAd;AA8BD,CA/BD;;AAgCA,eAAeN,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  isLoggingIn: false,\r\n  loginErrorReason: '',\r\n  isSignedUp: false,\r\n  isSigningUp: false,\r\n  signUpErrorReason: '',\r\n  me: [],\r\n  LikedBookList: [],\r\n  LikedWriterList: [],\r\n  otherUserInfo: [],\r\n};\r\n\r\nexport const LOG_IN_REQUEST = `LOG_IN_REQUEST`;\r\nexport const LOG_IN_SUCCESS = `LOG_IN_SUCCESS`;\r\nexport const LOG_IN_FAILURE = `LOG_IN_FAILURE`;\r\n\r\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\r\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\r\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST:\r\n        draft.isLoggingIn = true;\r\n        draft.loginErrorReason = '';\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.isLoggingIn = false;\r\n        draft.me = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.isLoggingIn = false;\r\n        draft.loginErrorReason = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.isSigningUp = true;\r\n        draft.signUpErrorReason = '';\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.isSigningUp = false;\r\n        draft.isSignedUp = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.isSigningUp = false;\r\n        draft.signUpErrorReason = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}