{"ast":null,"code":"import produce from 'immer';\nexport const initalState = {\n  isLoggingIn: false,\n  loginErrorReason: '',\n  isSigningUp: false,\n  signUpErrorReason: '',\n  me: [],\n  LikedBookList: [],\n  LikedWriterList: [],\n  otherUserInfo: []\n};\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\n\nconst reducer = (state = initalState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case SIGN_UP_REQUEST:\n        draft.isSigningUp = true;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        break;\n\n      case SIGN_UP_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/user.js"],"names":["produce","initalState","isLoggingIn","loginErrorReason","isSigningUp","signUpErrorReason","me","LikedBookList","LikedWriterList","otherUserInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","reducer","state","action","draft","type"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,WAAW,EAAE,KADY;AAEzBC,EAAAA,gBAAgB,EAAE,EAFO;AAGzBC,EAAAA,WAAW,EAAE,KAHY;AAIzBC,EAAAA,iBAAiB,EAAE,EAJM;AAKzBC,EAAAA,EAAE,EAAE,EALqB;AAMzBC,EAAAA,aAAa,EAAE,EANU;AAOzBC,EAAAA,eAAe,EAAE,EAPQ;AAQzBC,EAAAA,aAAa,EAAE;AARU,CAApB;AAWP,OAAO,MAAMC,eAAe,GAAI,iBAAzB;AACP,OAAO,MAAMC,eAAe,GAAI,iBAAzB;AACP,OAAO,MAAMC,eAAe,GAAI,iBAAzB;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,WAAT,EAAsBc,MAAtB,KAAiC;AAC/C,SAAOf,OAAO,CAACc,KAAD,EAAQE,KAAK,IAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKP,eAAL;AACEM,QAAAA,KAAK,CAACZ,WAAN,GAAoB,IAApB;AACA;;AACF,WAAKO,eAAL;AACE;;AACF,WAAKC,eAAL;AACE;;AACF;AACE;AATJ;AAWD,GAZa,CAAd;AAaD,CAdD;;AAeA,eAAeC,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  isLoggingIn: false,\r\n  loginErrorReason: '',\r\n  isSigningUp: false,\r\n  signUpErrorReason: '',\r\n  me: [],\r\n  LikedBookList: [],\r\n  LikedWriterList: [],\r\n  otherUserInfo: [],\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\r\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\r\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case SIGN_UP_REQUEST:\r\n        draft.isSigningUp = true;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}