{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DELETE_COMMENT_REQUEST, UPDATE_COMMENT_REQUEST } from '../reducers/board';\nvar SCommentCard = styled.div.withConfig({\n  displayName: \"CommentCard__SCommentCard\",\n  componentId: \"sc-1fhrn1i-0\"\n})([\"margin:1.5rem;\"]);\nvar CommentCardTop = styled.div.withConfig({\n  displayName: \"CommentCard__CommentCardTop\",\n  componentId: \"sc-1fhrn1i-1\"\n})([\"height:2rem;background:#f7f7f7;border-bottom:solid 1px #6441a5;display:inline-block;width:100%;font-size:1rem;& > label{line-height:2rem;}\"]);\nvar CommentCardNickname = styled.label.withConfig({\n  displayName: \"CommentCard__CommentCardNickname\",\n  componentId: \"sc-1fhrn1i-2\"\n})([\"font-weight:bold;margin-left:1rem;\"]);\nvar CommentCardCreateLabel = styled.label.withConfig({\n  displayName: \"CommentCard__CommentCardCreateLabel\",\n  componentId: \"sc-1fhrn1i-3\"\n})([\"display:block;float:right;\"]);\nvar CommentUpDelButtonDiv = styled.div.withConfig({\n  displayName: \"CommentCard__CommentUpDelButtonDiv\",\n  componentId: \"sc-1fhrn1i-4\"\n})([\"font-size:1rem;display:inline-block;float:right;margin-right:1rem;line-height:2rem;& > a{margin-left:10px;margin-right:10px;cursor:pointer;&:hover{color:#148cff;}}\"]);\nvar CommentCardContent = styled.div.withConfig({\n  displayName: \"CommentCard__CommentCardContent\",\n  componentId: \"sc-1fhrn1i-5\"\n})([\"margin:1.5rem;& > div{font-size:1rem;line-height:1.5rem;}\"]);\n\nvar CommentCard = function CommentCard(_ref) {\n  var comment = _ref.comment,\n      type = _ref.type;\n\n  var _ref2 = useSelector(function (state) {\n    return state.user.me;\n  }) || false,\n      myId = _ref2.id;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      isUpdatingComment = _useState[0],\n      setIsUpdatingComment = _useState[1];\n\n  var _useState2 = useState(''),\n      updateCommentText = _useState2[0],\n      setUpdateCommentText = _useState2[1];\n\n  var editorRef = useRef();\n\n  var _ref3 = editorRef.current || {},\n      CKEditor = _ref3.CKEditor,\n      ClassicEditor = _ref3.ClassicEditor;\n\n  var _useState3 = useState(false),\n      editorLoded = _useState3[0],\n      setEditorLoded = _useState3[1];\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  var onUpdateComment = useCallback(function (e) {\n    if (isUpdatingComment) {\n      dispatch({\n        type: UPDATE_COMMENT_REQUEST,\n        data: {\n          id: comment.id,\n          content: updateCommentText\n        }\n      });\n      setIsUpdatingComment(false);\n    } else {\n      setIsUpdatingComment(true);\n    }\n  }, [isUpdatingComment, comment && comment.id, updateCommentText]);\n  var onUpdateCommentCancle = useCallback(function (e) {\n    setIsUpdatingComment(false);\n    setUpdateCommentText(comment.content);\n  }, [comment && comment.content]);\n  var onDeleteComment = useCallback(function (e) {\n    console.log('CommentCard', comment.id);\n    dispatch({\n      type: DELETE_COMMENT_REQUEST,\n      commentId: comment.id\n    });\n  }, [comment && comment.id]);\n  return __jsx(SCommentCard, {\n    key: +comment.id\n  }, __jsx(CommentCardTop, null, __jsx(CommentCardNickname, null, comment.User.nickname), __jsx(CommentCardCreateLabel, null, moment(comment.createdAt).format('YY.MM.DD HH시 mm분')), myId === comment.User.id ? __jsx(CommentUpDelButtonDiv, null, isUpdatingComment ? __jsx(\"a\", {\n    onClick: onUpdateCommentCancle\n  }, \"\\uCDE8\\uC18C\") : null, __jsx(\"a\", {\n    onClick: onUpdateComment\n  }, \"\\uC218\\uC815\"), __jsx(\"a\", {\n    onClick: onDeleteComment\n  }, \"\\uC0AD\\uC81C\")) : null), __jsx(CommentCardContent, null, isUpdatingComment ? editorLoded ? __jsx(CKEditor, {\n    key: 'board',\n    editor: ClassicEditor,\n    data: comment && comment.content,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setUpdateCommentText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\") : __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: comment.content\n    }\n  })));\n};\n\nCommentCard.propTypes = {\n  comment: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default CommentCard;","map":{"version":3,"sources":["C:/Document/Backpot/front/components/CommentCard.js"],"names":["React","useCallback","useState","useRef","useEffect","PropTypes","styled","moment","useSelector","useDispatch","DELETE_COMMENT_REQUEST","UPDATE_COMMENT_REQUEST","SCommentCard","div","CommentCardTop","CommentCardNickname","label","CommentCardCreateLabel","CommentUpDelButtonDiv","CommentCardContent","CommentCard","comment","type","state","user","me","myId","id","dispatch","isUpdatingComment","setIsUpdatingComment","updateCommentText","setUpdateCommentText","editorRef","current","CKEditor","ClassicEditor","editorLoded","setEditorLoded","require","onUpdateComment","e","data","content","onUpdateCommentCancle","onDeleteComment","console","log","commentId","User","nickname","createdAt","format","event","editor","getData","__html","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  DELETE_COMMENT_REQUEST,\r\n  UPDATE_COMMENT_REQUEST,\r\n} from '../reducers/board';\r\n\r\nconst SCommentCard = styled.div`\r\n  margin: 1.5rem;\r\n`;\r\nconst CommentCardTop = styled.div`\r\n  height: 2rem;\r\n  background: #f7f7f7;\r\n  border-bottom: solid 1px #6441a5;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n\r\n  & > label {\r\n    line-height: 2rem;\r\n  }\r\n`;\r\nconst CommentCardNickname = styled.label`\r\n  font-weight: bold;\r\n  margin-left: 1rem;\r\n`;\r\nconst CommentCardCreateLabel = styled.label`\r\n  display: block;\r\n  float: right;\r\n`;\r\nconst CommentUpDelButtonDiv = styled.div`\r\n  font-size: 1rem;\r\n  display: inline-block;\r\n  float: right;\r\n  margin-right: 1rem;\r\n  line-height: 2rem;\r\n\r\n  & > a {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #148cff;\r\n    }\r\n  }\r\n`;\r\nconst CommentCardContent = styled.div`\r\n  margin: 1.5rem;\r\n  & > div {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst CommentCard = ({ comment, type }) => {\r\n  const { id: myId } = useSelector(state => state.user.me) || false;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isUpdatingComment, setIsUpdatingComment] = useState(false);\r\n  const [updateCommentText, setUpdateCommentText] = useState('');\r\n\r\n  const editorRef = useRef();\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const onUpdateComment = useCallback(\r\n    e => {\r\n      if (isUpdatingComment) {\r\n        dispatch({\r\n          type: UPDATE_COMMENT_REQUEST,\r\n          data: {\r\n            id: comment.id,\r\n            content: updateCommentText,\r\n          },\r\n        });\r\n        setIsUpdatingComment(false);\r\n      } else {\r\n        setIsUpdatingComment(true);\r\n      }\r\n    },\r\n    [isUpdatingComment, comment && comment.id, updateCommentText],\r\n  );\r\n\r\n  const onUpdateCommentCancle = useCallback(\r\n    e => {\r\n      setIsUpdatingComment(false);\r\n      setUpdateCommentText(comment.content);\r\n    },\r\n    [comment && comment.content],\r\n  );\r\n\r\n  const onDeleteComment = useCallback(\r\n    e => {\r\n      console.log('CommentCard', comment.id);\r\n      dispatch({\r\n        type: DELETE_COMMENT_REQUEST,\r\n        commentId: comment.id,\r\n      });\r\n    },\r\n    [comment && comment.id],\r\n  );\r\n\r\n  return (\r\n    <SCommentCard key={+comment.id}>\r\n      <CommentCardTop>\r\n        <CommentCardNickname>{comment.User.nickname}</CommentCardNickname>\r\n        <CommentCardCreateLabel>\r\n          {moment(comment.createdAt).format('YY.MM.DD HH시 mm분')}\r\n        </CommentCardCreateLabel>\r\n        {myId === comment.User.id ? (\r\n          <CommentUpDelButtonDiv>\r\n            {isUpdatingComment ? (\r\n              <a onClick={onUpdateCommentCancle}>취소</a>\r\n            ) : null}\r\n            <a onClick={onUpdateComment}>수정</a>\r\n            <a onClick={onDeleteComment}>삭제</a>\r\n          </CommentUpDelButtonDiv>\r\n        ) : null}\r\n      </CommentCardTop>\r\n      <CommentCardContent>\r\n        {isUpdatingComment ? (\r\n          editorLoded ? (\r\n            <CKEditor\r\n              key={'board'}\r\n              editor={ClassicEditor}\r\n              data={comment && comment.content}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setUpdateCommentText(data);\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>Editor Loding</p>\r\n          )\r\n        ) : (\r\n          <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n        )}\r\n      </CommentCardContent>\r\n    </SCommentCard>\r\n  );\r\n};\r\n\r\nCommentCard.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CommentCard;\r\n"]},"metadata":{},"sourceType":"module"}