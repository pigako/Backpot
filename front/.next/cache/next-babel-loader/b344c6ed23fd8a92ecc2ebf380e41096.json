{"ast":null,"code":"import produce from 'immer';\nexport var initalState = {\n  episode: null,\n  isAddingEpisode: false,\n  isAddedEpisode: false,\n  isRecommending: false,\n  isUpdatingEpisode: false,\n  isUpdatedEpisode: false,\n  isDeletingEpisode: false,\n  isDeletedEpisode: false\n};\nexport var LOAD_EPISODE_REQUEST = \"LOAD_EPISODE_REQUEST\";\nexport var LOAD_EPISODE_SUCCESS = \"LOAD_EPISODE_SUCCESS\";\nexport var LOAD_EPISODE_FAILURE = \"LOAD_EPISODE_FAILURE\";\nexport var ADD_EPISODE_REQUEST = \"ADD_EPISODE_REQUEST\";\nexport var ADD_EPISODE_SUCCESS = \"ADD_EPISODE_SUCCESS\";\nexport var ADD_EPISODE_FAILURE = \"ADD_EPISODE_FAILURE\";\nexport var CHANGE_ADDEDEPISODE = \"CHANGE_ADDEDEPISODE\";\nexport var ADD_RECOMMEND_REQUEST = \"ADD_RECOMMEND_REQUEST\";\nexport var ADD_RECOMMEND_SUCCESS = \"ADD_RECOMMEND_SUCCESS\";\nexport var ADD_RECOMMEND_FAILURE = \"ADD_RECOMMEND_FAILURE\";\nexport var UPDATE_EPISODE_REQUEST = \"UPDATE_EPISODE_REQUEST\";\nexport var UPDATE_EPISODE_SUCCESS = \"UPDATE_EPISODE_SUCCESS\";\nexport var UPDATE_EPISODE_FAILURE = \"UPDATE_EPISODE_FAILURE\";\nexport var CHANGE_UPDATEDEPISODE = \"CHANGE_UPDATEDEPISODE\";\nexport var DELETE_EPISODE_REQUEST = \"DELETE_EPISODE_REQUEST\";\nexport var DELETE_EPISODE_SUCCESS = \"DELETE_EPISODE_SUCCESS\";\nexport var DELETE_EPISODE_FAILURE = \"DELETE_EPISODE_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_EPISODE_REQUEST:\n        {\n          draft.episode = null;\n          break;\n        }\n\n      case LOAD_EPISODE_SUCCESS:\n        {\n          draft.episode = action.data;\n          break;\n        }\n\n      case LOAD_EPISODE_FAILURE:\n        {\n          break;\n        }\n\n      case ADD_EPISODE_REQUEST:\n        {\n          draft.isAddingEpisode = true;\n          draft.isAddedEpisode = false;\n          break;\n        }\n\n      case ADD_EPISODE_SUCCESS:\n        {\n          draft.isAddingEpisode = false;\n          draft.isAddedEpisode = true;\n          break;\n        }\n\n      case ADD_EPISODE_FAILURE:\n        {\n          break;\n        }\n\n      case CHANGE_ADDEDEPISODE:\n        {\n          draft.isAddedEpisode = false;\n          break;\n        }\n\n      case ADD_RECOMMEND_REQUEST:\n        {\n          draft.isRecommending = true;\n          break;\n        }\n\n      case ADD_RECOMMEND_SUCCESS:\n        {\n          draft.isRecommending = false;\n          draft.episode.recommends = action.data;\n          break;\n        }\n\n      case ADD_RECOMMEND_FAILURE:\n        {\n          break;\n        }\n\n      case UPDATE_EPISODE_REQUEST:\n        {\n          draft.isUpdatedEpisode = false;\n          draft.isUpdatingEpisode = true;\n          break;\n        }\n\n      case UPDATE_EPISODE_SUCCESS:\n        {\n          draft.isUpdatedEpisode = true;\n          draft.isUpdatingEpisode = false;\n          break;\n        }\n\n      case UPDATE_EPISODE_FAILURE:\n        {\n          break;\n        }\n\n      case CHANGE_UPDATEDEPISODE:\n        {\n          draft.isUpdatedEpisode = false;\n          break;\n        }\n\n      case DELETE_EPISODE_REQUEST:\n        {\n          draft.isDeletingEpisode = true;\n          break;\n        }\n\n      case DELETE_EPISODE_REQUEST:\n        {\n          draft.isDeletingEpisode = false;\n          break;\n        }\n\n      case DELETE_EPISODE_REQUEST:\n        {\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/episode.js"],"names":["produce","initalState","episode","isAddingEpisode","isAddedEpisode","isRecommending","isUpdatingEpisode","isUpdatedEpisode","isDeletingEpisode","isDeletedEpisode","LOAD_EPISODE_REQUEST","LOAD_EPISODE_SUCCESS","LOAD_EPISODE_FAILURE","ADD_EPISODE_REQUEST","ADD_EPISODE_SUCCESS","ADD_EPISODE_FAILURE","CHANGE_ADDEDEPISODE","ADD_RECOMMEND_REQUEST","ADD_RECOMMEND_SUCCESS","ADD_RECOMMEND_FAILURE","UPDATE_EPISODE_REQUEST","UPDATE_EPISODE_SUCCESS","UPDATE_EPISODE_FAILURE","CHANGE_UPDATEDEPISODE","DELETE_EPISODE_REQUEST","DELETE_EPISODE_SUCCESS","DELETE_EPISODE_FAILURE","reducer","state","action","draft","type","data","recommends"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  episode: null,\r\n  isAddingEpisode: false,\r\n  isAddedEpisode: false,\r\n  isRecommending: false,\r\n  isUpdatingEpisode: false,\r\n  isUpdatedEpisode: false,\r\n  isDeletingEpisode: false,\r\n  isDeletedEpisode: false,\r\n};\r\n\r\nexport const LOAD_EPISODE_REQUEST = `LOAD_EPISODE_REQUEST`;\r\nexport const LOAD_EPISODE_SUCCESS = `LOAD_EPISODE_SUCCESS`;\r\nexport const LOAD_EPISODE_FAILURE = `LOAD_EPISODE_FAILURE`;\r\n\r\nexport const ADD_EPISODE_REQUEST = `ADD_EPISODE_REQUEST`;\r\nexport const ADD_EPISODE_SUCCESS = `ADD_EPISODE_SUCCESS`;\r\nexport const ADD_EPISODE_FAILURE = `ADD_EPISODE_FAILURE`;\r\n\r\nexport const CHANGE_ADDEDEPISODE = `CHANGE_ADDEDEPISODE`;\r\n\r\nexport const ADD_RECOMMEND_REQUEST = `ADD_RECOMMEND_REQUEST`;\r\nexport const ADD_RECOMMEND_SUCCESS = `ADD_RECOMMEND_SUCCESS`;\r\nexport const ADD_RECOMMEND_FAILURE = `ADD_RECOMMEND_FAILURE`;\r\n\r\nexport const UPDATE_EPISODE_REQUEST = `UPDATE_EPISODE_REQUEST`;\r\nexport const UPDATE_EPISODE_SUCCESS = `UPDATE_EPISODE_SUCCESS`;\r\nexport const UPDATE_EPISODE_FAILURE = `UPDATE_EPISODE_FAILURE`;\r\n\r\nexport const CHANGE_UPDATEDEPISODE = `CHANGE_UPDATEDEPISODE`;\r\n\r\nexport const DELETE_EPISODE_REQUEST = `DELETE_EPISODE_REQUEST`;\r\nexport const DELETE_EPISODE_SUCCESS = `DELETE_EPISODE_SUCCESS`;\r\nexport const DELETE_EPISODE_FAILURE = `DELETE_EPISODE_FAILURE`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case LOAD_EPISODE_REQUEST: {\r\n        draft.episode = null;\r\n        break;\r\n      }\r\n      case LOAD_EPISODE_SUCCESS: {\r\n        draft.episode = action.data;\r\n        break;\r\n      }\r\n      case LOAD_EPISODE_FAILURE: {\r\n        break;\r\n      }\r\n      case ADD_EPISODE_REQUEST: {\r\n        draft.isAddingEpisode = true;\r\n        draft.isAddedEpisode = false;\r\n        break;\r\n      }\r\n      case ADD_EPISODE_SUCCESS: {\r\n        draft.isAddingEpisode = false;\r\n        draft.isAddedEpisode = true;\r\n        break;\r\n      }\r\n      case ADD_EPISODE_FAILURE: {\r\n        break;\r\n      }\r\n      case CHANGE_ADDEDEPISODE: {\r\n        draft.isAddedEpisode = false;\r\n        break;\r\n      }\r\n      case ADD_RECOMMEND_REQUEST: {\r\n        draft.isRecommending = true;\r\n        break;\r\n      }\r\n      case ADD_RECOMMEND_SUCCESS: {\r\n        draft.isRecommending = false;\r\n        draft.episode.recommends = action.data;\r\n        break;\r\n      }\r\n      case ADD_RECOMMEND_FAILURE: {\r\n        break;\r\n      }\r\n      case UPDATE_EPISODE_REQUEST: {\r\n        draft.isUpdatedEpisode = false;\r\n        draft.isUpdatingEpisode = true;\r\n        break;\r\n      }\r\n      case UPDATE_EPISODE_SUCCESS: {\r\n        draft.isUpdatedEpisode = true;\r\n        draft.isUpdatingEpisode = false;\r\n        break;\r\n      }\r\n      case UPDATE_EPISODE_FAILURE: {\r\n        break;\r\n      }\r\n      case CHANGE_UPDATEDEPISODE: {\r\n        draft.isUpdatedEpisode = false;\r\n        break;\r\n      }\r\n      case DELETE_EPISODE_REQUEST: {\r\n        draft.isDeletingEpisode = true;\r\n        break;\r\n      }\r\n      case DELETE_EPISODE_REQUEST: {\r\n        draft.isDeletingEpisode = false;\r\n        break;\r\n      }\r\n      case DELETE_EPISODE_REQUEST: {\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}