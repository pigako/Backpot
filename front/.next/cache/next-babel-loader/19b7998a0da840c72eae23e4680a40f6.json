{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_BOOKS_REQUEST, LOAD_BOOKS_SUCCESS, LOAD_BOOKS_FAILURE, LOAD_BOOK_REQUEST, LOAD_BOOK_SUCCESS, LOAD_BOOK_FAILURE, ADD_LIKEBOOK_REQUEST, ADD_LIKEBOOK_SUCCESS, ADD_LIKEBOOK_FAILURE, REMOVE_LIKEBOOK_REQUEST, REMOVE_LIKEBOOK_SUCCESS, REMOVE_LIKEBOOK_FAILURE, UPLOAD_IMAGE_REQEUST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE, ADD_BOOK_REQEUST, ADD_BOOK_FAILURE, ADD_BOOK_SUCCESS } from '../reducers/book';\nimport { ADD_LIKEBOOKLIST, REMOVE_LIKEBOOKLIST } from '../reducers/user'; // 전체 연재글 가져오기\n\nfunction* watchLoadBooks() {\n  yield throttle(1000, LOAD_BOOKS_REQUEST, function* loadBooks(action) {\n    try {\n      const result = yield call((lastId = 0, limit = 20) => {\n        return axios.get(`/books?lastId=${lastId}&limit=${limit}`);\n      }, action.lastId);\n      yield put({\n        type: LOAD_BOOKS_SUCCESS,\n        data: result.data\n      });\n    } catch (e) {\n      console.log(e);\n      yield put({\n        type: LOAD_BOOKS_FAILURE,\n        error: e\n      });\n    }\n  });\n} // 게시글 하나 조회\n\n\nfunction* watchLoadBook() {\n  yield takeLatest(LOAD_BOOK_REQUEST, function* loadBook(action) {\n    try {\n      const result = yield call(bookId => {\n        return axios.get(`/book/${bookId}`);\n      }, action.id);\n      yield put({\n        type: LOAD_BOOK_SUCCESS,\n        data: result.data\n      });\n    } catch (e) {\n      console.log(e);\n      put({\n        type: LOAD_BOOK_FAILURE,\n        error: e\n      });\n    }\n  });\n} // 선호작 추가\n\n\nfunction* watchAddLikebook() {\n  yield takeLatest(ADD_LIKEBOOK_REQUEST, function* addLikebook(action) {\n    try {\n      const result = yield call(bookId => {\n        return axios.post(`/book/${bookId}/like`, {}, {\n          withCredentials: true\n        });\n      }, action.bookId);\n      yield put({\n        type: ADD_LIKEBOOK_SUCCESS,\n        data: result.data\n      });\n      yield put({\n        type: ADD_LIKEBOOKLIST,\n        data: _objectSpread({\n          id: result.data\n        }, action.data)\n      });\n    } catch (e) {\n      console.log(e);\n      yield put({\n        type: ADD_LIKEBOOK_FAILURE,\n        error: e\n      });\n    }\n  });\n} // 선호작 해제\n\n\nfunction* watchRemoveLikebook() {\n  yield takeLatest(REMOVE_LIKEBOOK_REQUEST, function* removeLikebook(action) {\n    try {\n      const result = yield call(bookId => {\n        return axios.delete(`/book/${bookId}/unlike`, {\n          withCredentials: true\n        });\n      }, action.bookId);\n      yield put({\n        type: REMOVE_LIKEBOOK_SUCCESS,\n        data: result.data\n      });\n      yield put({\n        type: REMOVE_LIKEBOOKLIST,\n        data: result.data\n      });\n    } catch (e) {\n      console.log(e);\n      put({\n        type: REMOVE_LIKEBOOK_FAILURE,\n        error: e\n      });\n    }\n  });\n} // 썸네일 이미지 업로드\n\n\nfunction* watchUploadImage() {\n  yield takeLatest(UPLOAD_IMAGE_REQEUST, function* uploadImage(action) {\n    try {\n      const result = yield call(formData => {\n        return axios.post('/book/thumbnail', formData, {\n          withCredentials: true\n        });\n      }, action.data);\n      yield put({\n        type: UPLOAD_IMAGE_SUCCESS,\n        data: result.data\n      });\n    } catch (e) {\n      console.log(e);\n      yield put({\n        type: UPLOAD_IMAGE_FAILURE,\n        error: e\n      });\n    }\n  });\n} // 작품 만들기\n\n\nfunction* watchAddBook() {\n  yield takeLatest(ADD_BOOK_REQEUST, function* addBook() {\n    try {\n      const result = yield call(bookData => {\n        return axios.post('/book', bookData, {\n          withCredentials: true\n        });\n      }, action.data);\n      yield put({\n        type: ADD_BOOK_SUCCESS,\n        data: result.data\n      });\n    } catch (e) {\n      console.log(e);\n      yield put({\n        type: ADD_BOOK_FAILURE,\n        error: e\n      });\n    }\n  });\n}\n\nexport default function* bookSaga() {\n  yield all([fork(watchLoadBooks), fork(watchLoadBook), fork(watchAddLikebook), fork(watchRemoveLikebook), fork(watchUploadImage), fork(watchAddBook)]);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/book.js"],"names":["all","call","fork","throttle","takeLatest","put","axios","LOAD_BOOKS_REQUEST","LOAD_BOOKS_SUCCESS","LOAD_BOOKS_FAILURE","LOAD_BOOK_REQUEST","LOAD_BOOK_SUCCESS","LOAD_BOOK_FAILURE","ADD_LIKEBOOK_REQUEST","ADD_LIKEBOOK_SUCCESS","ADD_LIKEBOOK_FAILURE","REMOVE_LIKEBOOK_REQUEST","REMOVE_LIKEBOOK_SUCCESS","REMOVE_LIKEBOOK_FAILURE","UPLOAD_IMAGE_REQEUST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","ADD_BOOK_REQEUST","ADD_BOOK_FAILURE","ADD_BOOK_SUCCESS","ADD_LIKEBOOKLIST","REMOVE_LIKEBOOKLIST","watchLoadBooks","loadBooks","action","result","lastId","limit","get","type","data","e","console","log","error","watchLoadBook","loadBook","bookId","id","watchAddLikebook","addLikebook","post","withCredentials","watchRemoveLikebook","removeLikebook","delete","watchUploadImage","uploadImage","formData","watchAddBook","addBook","bookData","bookSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_BOOKS_REQUEST,\r\n  LOAD_BOOKS_SUCCESS,\r\n  LOAD_BOOKS_FAILURE,\r\n  LOAD_BOOK_REQUEST,\r\n  LOAD_BOOK_SUCCESS,\r\n  LOAD_BOOK_FAILURE,\r\n  ADD_LIKEBOOK_REQUEST,\r\n  ADD_LIKEBOOK_SUCCESS,\r\n  ADD_LIKEBOOK_FAILURE,\r\n  REMOVE_LIKEBOOK_REQUEST,\r\n  REMOVE_LIKEBOOK_SUCCESS,\r\n  REMOVE_LIKEBOOK_FAILURE,\r\n  UPLOAD_IMAGE_REQEUST,\r\n  UPLOAD_IMAGE_SUCCESS,\r\n  UPLOAD_IMAGE_FAILURE,\r\n  ADD_BOOK_REQEUST,\r\n  ADD_BOOK_FAILURE,\r\n  ADD_BOOK_SUCCESS,\r\n} from '../reducers/book';\r\nimport { ADD_LIKEBOOKLIST, REMOVE_LIKEBOOKLIST } from '../reducers/user';\r\n\r\n// 전체 연재글 가져오기\r\nfunction* watchLoadBooks() {\r\n  yield throttle(1000, LOAD_BOOKS_REQUEST, function* loadBooks(action) {\r\n    try {\r\n      const result = yield call((lastId = 0, limit = 20) => {\r\n        return axios.get(`/books?lastId=${lastId}&limit=${limit}`);\r\n      }, action.lastId);\r\n      yield put({\r\n        type: LOAD_BOOKS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: LOAD_BOOKS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 게시글 하나 조회\r\nfunction* watchLoadBook() {\r\n  yield takeLatest(LOAD_BOOK_REQUEST, function* loadBook(action) {\r\n    try {\r\n      const result = yield call(bookId => {\r\n        return axios.get(`/book/${bookId}`);\r\n      }, action.id);\r\n      yield put({\r\n        type: LOAD_BOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      put({\r\n        type: LOAD_BOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 선호작 추가\r\nfunction* watchAddLikebook() {\r\n  yield takeLatest(ADD_LIKEBOOK_REQUEST, function* addLikebook(action) {\r\n    try {\r\n      const result = yield call(bookId => {\r\n        return axios.post(\r\n          `/book/${bookId}/like`,\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        );\r\n      }, action.bookId);\r\n      yield put({\r\n        type: ADD_LIKEBOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n      yield put({\r\n        type: ADD_LIKEBOOKLIST,\r\n        data: {\r\n          id: result.data,\r\n          ...action.data,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: ADD_LIKEBOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 선호작 해제\r\nfunction* watchRemoveLikebook() {\r\n  yield takeLatest(REMOVE_LIKEBOOK_REQUEST, function* removeLikebook(action) {\r\n    try {\r\n      const result = yield call(bookId => {\r\n        return axios.delete(`/book/${bookId}/unlike`, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.bookId);\r\n      yield put({\r\n        type: REMOVE_LIKEBOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n      yield put({\r\n        type: REMOVE_LIKEBOOKLIST,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      put({\r\n        type: REMOVE_LIKEBOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// 썸네일 이미지 업로드\r\nfunction* watchUploadImage() {\r\n  yield takeLatest(UPLOAD_IMAGE_REQEUST, function* uploadImage(action) {\r\n    try {\r\n      const result = yield call(formData => {\r\n        return axios.post('/book/thumbnail', formData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: UPLOAD_IMAGE_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: UPLOAD_IMAGE_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 작품 만들기\r\nfunction* watchAddBook() {\r\n  yield takeLatest(ADD_BOOK_REQEUST, function* addBook() {\r\n    try {\r\n      const result = yield call(bookData => {\r\n        return axios.post('/book', bookData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: ADD_BOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: ADD_BOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport default function* bookSaga() {\r\n  yield all([\r\n    fork(watchLoadBooks),\r\n    fork(watchLoadBook),\r\n    fork(watchAddLikebook),\r\n    fork(watchRemoveLikebook),\r\n    fork(watchUploadImage),\r\n    fork(watchAddBook),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}