{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport LOAD_USER_REQUEST from '../reducers/user';\nimport BookCard from '../components/BookCard';\nimport { useSelector } from 'react-redux';\nvar LibreryTitle = styled.h1.withConfig({\n  displayName: \"librery__LibreryTitle\",\n  componentId: \"sc-1ufjrpz-0\"\n})([\"margin:10px 0px 10px 0px;font-weight:bold;\"]);\nvar NovelList = styled.div.withConfig({\n  displayName: \"librery__NovelList\",\n  componentId: \"sc-1ufjrpz-1\"\n})([\"width:98%;overflow:hidden;border:solid 2px #495057;& p{font-weight:bold;margin:10px 0px 0px 10px;}\"]);\nvar MyBoard = styled.div.withConfig({\n  displayName: \"librery__MyBoard\",\n  componentId: \"sc-1ufjrpz-2\"\n})([\"width:98%;overflow:hidden;border:solid 2px #495057;\"]);\n\nvar Librery = function Librery() {\n  var user = useSelector(function (state) {\n    return state.user.otherUserInfo;\n  }).length === 0 ? useSelector(function (state) {\n    return state.user.me;\n  }) : useSelector(function (state) {\n    return state.user.otherUserInfo;\n  });\n  return __jsx(\"div\", null, __jsx(LibreryTitle, null, user.nickname, \" \\uB2D8\\uC758 \\uC11C\\uC7AC\\uC785\\uB2C8\\uB2E4.\"), __jsx(NovelList, null, __jsx(\"p\", null, \"\\uC5F0\\uC7AC\\uC18C\\uC124\\uBAA9\\uB85D\"), user.Books ? user.Books.map(function (book) {\n    return __jsx(BookCard, {\n      key: +book.id,\n      book: book,\n      nickname: user.nickname\n    });\n  }) : \"\\uC5F0\\uC7AC\\uC911\\uC778 \\uC18C\\uC124\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(MyBoard, null, \" \"));\n};\n\nLibrery.getInitialProps = function _callee(context) {\n  var id, state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n\n          if (!id) {\n            alert('잘못된 접근입니다.');\n            Router.push('/');\n          }\n\n          state = context.store.getState();\n\n          if (id !== (state.user.me && state.user.me.id)) {\n            context.store.dispatch({\n              type: LOAD_USER_REQUEST,\n              data: id\n            });\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Librery;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/librery.js"],"names":["React","styled","Router","LOAD_USER_REQUEST","BookCard","useSelector","LibreryTitle","h1","NovelList","div","MyBoard","Librery","user","state","otherUserInfo","length","me","nickname","Books","map","book","id","getInitialProps","context","query","alert","push","store","getState","dispatch","type","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,YAAY,GAAGL,MAAM,CAACM,EAAV;AAAA;AAAA;AAAA,kDAAlB;AAMA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,0GAAf;AAWA,IAAMC,OAAO,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,2DAAb;;AAMA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,IAAI,GACRP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWE,aAAf;AAAA,GAAN,CAAX,CAA+CC,MAA/C,KAA0D,CAA1D,GACIV,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWI,EAAf;AAAA,GAAN,CADf,GAEIX,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWE,aAAf;AAAA,GAAN,CAHjB;AAIA,SACE,mBACE,MAAC,YAAD,QAAeF,IAAI,CAACK,QAApB,kDADF,EAEE,MAAC,SAAD,QACE,wDADF,EAEGL,IAAI,CAACM,KAAL,GACGN,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,WACE,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,IAAI,CAACC,EAArB;AAAyB,MAAA,IAAI,EAAED,IAA/B;AAAqC,MAAA,QAAQ,EAAER,IAAI,CAACK;AAApD,MADF;AAGD,GAJD,CADH,mGAFH,CAFF,EAYE,MAAC,OAAD,YAZF,CADF;AAgBD,CArBD;;AAuBAN,OAAO,CAACW,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBF,UAAAA,EADkB,GACbE,OAAO,CAACC,KAAR,CAAcH,EADD;;AAExB,cAAI,CAACA,EAAL,EAAS;AACPI,YAAAA,KAAK,CAAC,YAAD,CAAL;AACAvB,YAAAA,MAAM,CAACwB,IAAP,CAAY,GAAZ;AACD;;AACKb,UAAAA,KANkB,GAMVU,OAAO,CAACI,KAAR,CAAcC,QAAd,EANU;;AAOxB,cAAIP,EAAE,MAAMR,KAAK,CAACD,IAAN,CAAWI,EAAX,IAAiBH,KAAK,CAACD,IAAN,CAAWI,EAAX,CAAcK,EAArC,CAAN,EAAgD;AAC9CE,YAAAA,OAAO,CAACI,KAAR,CAAcE,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAE3B,iBADe;AAErB4B,cAAAA,IAAI,EAAEV;AAFe,aAAvB;AAID;;AAZuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAeA,eAAeV,OAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport LOAD_USER_REQUEST from '../reducers/user';\r\nimport BookCard from '../components/BookCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst LibreryTitle = styled.h1`\r\n  margin: 10px 0px 10px 0px;\r\n\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NovelList = styled.div`\r\n  width: 98%;\r\n  overflow: hidden;\r\n  border: solid 2px #495057;\r\n\r\n  & p {\r\n    font-weight: bold;\r\n    margin: 10px 0px 0px 10px;\r\n  }\r\n`;\r\n\r\nconst MyBoard = styled.div`\r\n  width: 98%;\r\n  overflow: hidden;\r\n  border: solid 2px #495057;\r\n`;\r\n\r\nconst Librery = () => {\r\n  const user =\r\n    useSelector(state => state.user.otherUserInfo).length === 0\r\n      ? useSelector(state => state.user.me)\r\n      : useSelector(state => state.user.otherUserInfo);\r\n  return (\r\n    <div>\r\n      <LibreryTitle>{user.nickname} 님의 서재입니다.</LibreryTitle>\r\n      <NovelList>\r\n        <p>연재소설목록</p>\r\n        {user.Books\r\n          ? user.Books.map(book => {\r\n              return (\r\n                <BookCard key={+book.id} book={book} nickname={user.nickname} />\r\n              );\r\n            })\r\n          : `연재중인 소설이 존재하지 않습니다.`}\r\n      </NovelList>\r\n      <MyBoard> </MyBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nLibrery.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  if (!id) {\r\n    alert('잘못된 접근입니다.');\r\n    Router.push('/');\r\n  }\r\n  const state = context.store.getState();\r\n  if (id !== (state.user.me && state.user.me.id)) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Librery;\r\n"]},"metadata":{},"sourceType":"module"}