{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Button from '../components/designs/Button';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nvar WriteDiv = styled.div.withConfig({\n  displayName: \"writeboard__WriteDiv\",\n  componentId: \"sc-3uiybh-0\"\n})([\"margin-top:10px;width:98%;\"]);\nvar WriteBoardDivTop = styled.div.withConfig({\n  displayName: \"writeboard__WriteBoardDivTop\",\n  componentId: \"sc-3uiybh-1\"\n})([\"display:flex;align-items:center;margin-bottom:1rem;\"]);\nvar SWriteBoardTitle = styled.h1.withConfig({\n  displayName: \"writeboard__SWriteBoardTitle\",\n  componentId: \"sc-3uiybh-2\"\n})([\"display:inline-block;font-weight:bold;margin-left:10px;width:100%;\"]);\nvar BoardTitleInput = styled.input.withConfig({\n  displayName: \"writeboard__BoardTitleInput\",\n  componentId: \"sc-3uiybh-3\"\n})([\"margin-right:10px;border:solid 1px #495057;border-radius:4px;padding-left:10px;margin-bottom:1rem;height:2.25rem;width:100%;font-size:1.5rem;transition:0.55s ease;&:hover{border:solid 2px #148cff;}&:focus{border:solid 2px #148cff;}\"]);\nvar LoadingImg = styled.img.withConfig({\n  displayName: \"writeboard__LoadingImg\",\n  componentId: \"sc-3uiybh-4\"\n})([\"margin-top:4px;height:1.5rem;\"]);\n\nvar WriteBoard = function WriteBoard() {\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoded = _useState[0],\n      setEditorLoded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  var _useState2 = useState(''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.board;\n  }),\n      isAddingBoard = _useSelector.isAddingBoard;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  var onCancle = useCallback(function (e) {\n    Router.back();\n  }, []);\n  var onChangeTitle = useCallback(function (e) {\n    setTitle(e.target.value);\n  });\n  var onCreateBoard = useCallback(function (e) {\n    console.log(text);\n  }, [text]);\n  return __jsx(WriteDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(\"style\", {\n    type: \"text/css\"\n  }, \"\\n            .ck-editor__editable { height: 500px;}\\n          \")), __jsx(WriteBoardDivTop, null, __jsx(SWriteBoardTitle, null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(Button, {\n    color: 'pink',\n    onClick: onCancle\n  }, \"\\uCDE8\\uC18C\"), __jsx(Button, {\n    onClick: onCreateBoard\n  }, isAddingBoard ? __jsx(LoadingImg, {\n    src: \"/static/icons/loading_blue.gif\"\n  }) : \"\\uC791\\uC131\")), __jsx(BoardTitleInput, {\n    value: title,\n    onChange: onChangeTitle\n  }), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: text,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\"));\n};\n\nWriteBoard.getInitialProps = function (context) {};\n\nexport default WriteBoard;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/writeboard.js"],"names":["React","useRef","useState","useEffect","useCallback","styled","Helmet","Button","Router","useSelector","WriteDiv","div","WriteBoardDivTop","SWriteBoardTitle","h1","BoardTitleInput","input","LoadingImg","img","WriteBoard","editorRef","editorLoded","setEditorLoded","current","CKEditor","ClassicEditor","text","setText","title","setTitle","state","board","isAddingBoard","require","onCancle","e","back","onChangeTitle","target","value","onCreateBoard","console","log","event","editor","data","getData","getInitialProps","context"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Button from '../components/designs/Button';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WriteDiv = styled.div`\r\n  margin-top: 10px;\r\n  width: 98%;\r\n`;\r\n\r\nconst WriteBoardDivTop = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst SWriteBoardTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst BoardTitleInput = styled.input`\r\n  margin-right: 10px;\r\n  border: solid 1px #495057;\r\n  border-radius: 4px;\r\n  padding-left: 10px;\r\n  margin-bottom: 1rem;\r\n\r\n  height: 2.25rem;\r\n  width: 100%;\r\n  font-size: 1.5rem;\r\n\r\n  transition: 0.55s ease;\r\n\r\n  & :hover {\r\n    border: solid 2px #148cff;\r\n  }\r\n  & :focus {\r\n    border: solid 2px #148cff;\r\n  }\r\n`;\r\n\r\nconst LoadingImg = styled.img`\r\n  margin-top: 4px;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst WriteBoard = () => {\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n  const [text, setText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const { isAddingBoard } = useSelector(state => state.board);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const onCancle = useCallback(e => {\r\n    Router.back();\r\n  }, []);\r\n\r\n  const onChangeTitle = useCallback(e => {\r\n    setTitle(e.target.value);\r\n  });\r\n\r\n  const onCreateBoard = useCallback(\r\n    e => {\r\n      console.log(text);\r\n    },\r\n    [text],\r\n  );\r\n\r\n  return (\r\n    <WriteDiv>\r\n      <Helmet>\r\n        <title>추천게시글 작성</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable { height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <WriteBoardDivTop>\r\n        <SWriteBoardTitle>추천게시글 작성</SWriteBoardTitle>\r\n        <Button color={'pink'} onClick={onCancle}>\r\n          취소\r\n        </Button>\r\n        <Button onClick={onCreateBoard}>\r\n          {isAddingBoard ? (\r\n            <LoadingImg src=\"/static/icons/loading_blue.gif\" />\r\n          ) : (\r\n            `작성`\r\n          )}\r\n        </Button>\r\n      </WriteBoardDivTop>\r\n      <BoardTitleInput value={title} onChange={onChangeTitle} />\r\n      {editorLoded ? (\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={text}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setText(data);\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>Editor Loding</p>\r\n      )}\r\n    </WriteDiv>\r\n  );\r\n};\r\n\r\nWriteBoard.getInitialProps = context => {};\r\n\r\nexport default WriteBoard;\r\n"]},"metadata":{},"sourceType":"module"}