{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport Router from 'next/router';\nimport Button from '../../components/designs/Button';\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\nimport { ADD_EPISODE_REQUEST, CHANGE_ADDEDEPISODE } from '../../reducers/episode';\nvar WriteEpisodeDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeDiv\",\n  componentId: \"sc-1w592s4-0\"\n})([\"width:98%;margin:1rem 0rem 0rem 1rem;\"]);\nvar WriteEpisodeTopDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeTopDiv\",\n  componentId: \"sc-1w592s4-1\"\n})([\"position:relative;margin-bottom:2rem;\"]);\nvar BookTitle = styled.h1.withConfig({\n  displayName: \"write__BookTitle\",\n  componentId: \"sc-1w592s4-2\"\n})([\"font-weight:bold;font-size:1rem;margin-bottom:1rem;\"]);\nvar TopButtonDiv = styled.div.withConfig({\n  displayName: \"write__TopButtonDiv\",\n  componentId: \"sc-1w592s4-3\"\n})([\"display:flex;position:absolute;top:5%;right:1%;\"]);\nvar EpisodeForm = styled.form.withConfig({\n  displayName: \"write__EpisodeForm\",\n  componentId: \"sc-1w592s4-4\"\n})([\"\"]);\nvar WriteEpisodeContentDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeContentDiv\",\n  componentId: \"sc-1w592s4-5\"\n})([\"margin:1.5rem;\"]);\nvar DivCard = styled.div.withConfig({\n  displayName: \"write__DivCard\",\n  componentId: \"sc-1w592s4-6\"\n})([\"display:flex;align-items:center;margin:1rem;width:100%;\"]);\nvar DivCardLeft = styled.div.withConfig({\n  displayName: \"write__DivCardLeft\",\n  componentId: \"sc-1w592s4-7\"\n})([\"flex:1;\"]);\nvar DivCardRight = styled.div.withConfig({\n  displayName: \"write__DivCardRight\",\n  componentId: \"sc-1w592s4-8\"\n})([\"flex:4;display:flex;& > input{width:calc(100% - 2rem);height:2rem;font-size:1rem;line-height:2rem;padding-left:10px;border:solid 2px #495057;border-radius:4px;transition:0.55s ease;&:hover{border:solid 2px #148cff;}&:focus{border:solid 2px #148cff;}}\"]);\nvar CheckBox = styled.input.withConfig({\n  displayName: \"write__CheckBox\",\n  componentId: \"sc-1w592s4-9\"\n})([\"width:1.5rem !important;height:1.5rem !important;\"]);\nvar WriteEditorDiv = styled.div.withConfig({\n  displayName: \"write__WriteEditorDiv\",\n  componentId: \"sc-1w592s4-10\"\n})([\"margin:1rem;& > label{width:100%;display:inline-block;margin-bottom:1rem;padding-bottom:1rem;border-bottom:solid 2px #495057;}\"]);\nvar LoadingImg = styled.img.withConfig({\n  displayName: \"write__LoadingImg\",\n  componentId: \"sc-1w592s4-11\"\n})([\"margin-top:4px;height:1.5rem;\"]);\n\nvar Write = function Write() {\n  var _useSelector = useSelector(function (state) {\n    return state.book;\n  }),\n      book = _useSelector.book;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.episode;\n  }),\n      isAddingEpisode = _useSelector2.isAddingEpisode,\n      isAddedEpisode = _useSelector2.isAddedEpisode;\n\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoded = _useState[0],\n      setEditorLoded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  var dispatch = useDispatch();\n\n  var _useState2 = useState(false),\n      checkNotice = _useState2[0],\n      setCheckNotice = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(''),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(''),\n      writerComment = _useState5[0],\n      setWriterComment = _useState5[1];\n\n  var onChangeCheckNotice = useCallback(function () {\n    setCheckNotice(!checkNotice);\n  }, [checkNotice]);\n  var onChangeTitle = useCallback(function (e) {\n    setTitle(e.target.value);\n  }, []);\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  useEffect(function () {\n    if (isAddedEpisode) {\n      dispatch({\n        type: CHANGE_ADDEDEPISODE\n      });\n      Router.push({\n        pathname: \"/book\",\n        query: {\n          bookid: book.id\n        }\n      }, \"/book/\".concat(book.id));\n    }\n  }, [isAddedEpisode]);\n  var onCancleWrite = useCallback(function () {\n    Router.back();\n  }, []);\n  var onWriteEpisode = useCallback(function (e) {\n    e.preventDefault();\n    var episodeContent = text + '<br/><br/><p><strong>작가의 말</strong><hr><br/>' + writerComment;\n    dispatch({\n      type: ADD_EPISODE_REQUEST,\n      data: {\n        title: title,\n        content: episodeContent,\n        notice: checkNotice ? 1 : 0,\n        bookId: book && book.id\n      }\n    });\n  }, [checkNotice, title, text, writerComment, book && book.id]);\n  return __jsx(WriteEpisodeDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, book && book.name), __jsx(\"style\", {\n    type: \"text/css\"\n  }, \"\\n            .ck.ck-editor {width:100%;}\\n            .ck-editor__editable { height: 500px;}\\n          \")), __jsx(EpisodeForm, {\n    onSubmit: onWriteEpisode\n  }, __jsx(WriteEpisodeTopDiv, null, __jsx(BookTitle, null, book && book.name + '  ' + (book.Episodes.filter(function (v) {\n    return v.isNotice !== 1;\n  }).length + 1) + '번째 글'), __jsx(TopButtonDiv, null, __jsx(Button, {\n    color: \"pink\",\n    type: \"button\",\n    onClick: onCancleWrite\n  }, \"\\uCDE8\\uC18C\"), __jsx(Button, {\n    type: \"submit\"\n  }, isAddingEpisode ? __jsx(LoadingImg, {\n    src: \"/static/icons/loading_blue.gif\"\n  }) : '작성'))), __jsx(WriteEpisodeContentDiv, null, __jsx(DivCard, null, __jsx(DivCardLeft, null, __jsx(\"label\", null, \"\\uC774 \\uAE00\\uC744 \\uACF5\\uC9C0\\uB85C \\uC791\\uC131\")), __jsx(DivCardRight, null, __jsx(CheckBox, {\n    type: \"checkbox\",\n    value: checkNotice,\n    onChange: onChangeCheckNotice\n  }))), __jsx(DivCard, null, __jsx(DivCardLeft, null, __jsx(\"label\", null, \"\\uC81C\\uBAA9\")), __jsx(DivCardRight, null, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: onChangeTitle\n  }))), __jsx(WriteEditorDiv, null, __jsx(\"label\", null, \"\\uBCF8\\uBB38\"), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: text,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\")), __jsx(WriteEditorDiv, null, __jsx(\"label\", null, \"\\uC791\\uAC00\\uC758 \\uB9D0\"), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: writerComment,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setWriterComment(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\")))));\n};\n\nWrite.getInitialProps = function _callee(context) {\n  var bookId;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          bookId = context.query.bookid;\n          context.store.dispatch({\n            type: LOAD_BOOK_REQUEST,\n            id: bookId\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/episode/write.js"],"names":["React","useState","useEffect","useRef","useCallback","styled","useSelector","useDispatch","Helmet","Router","Button","LOAD_BOOK_REQUEST","ADD_EPISODE_REQUEST","CHANGE_ADDEDEPISODE","WriteEpisodeDiv","div","WriteEpisodeTopDiv","BookTitle","h1","TopButtonDiv","EpisodeForm","form","WriteEpisodeContentDiv","DivCard","DivCardLeft","DivCardRight","CheckBox","input","WriteEditorDiv","LoadingImg","img","Write","state","book","episode","isAddingEpisode","isAddedEpisode","editorRef","editorLoded","setEditorLoded","current","CKEditor","ClassicEditor","dispatch","checkNotice","setCheckNotice","title","setTitle","text","setText","writerComment","setWriterComment","onChangeCheckNotice","onChangeTitle","e","target","value","require","type","push","pathname","query","bookid","id","onCancleWrite","back","onWriteEpisode","preventDefault","episodeContent","data","content","notice","bookId","name","Episodes","filter","v","isNotice","length","event","editor","getData","getInitialProps","context","store"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Helmet from 'react-helmet';\r\nimport Router from 'next/router';\r\n\r\nimport Button from '../../components/designs/Button';\r\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\r\nimport {\r\n  ADD_EPISODE_REQUEST,\r\n  CHANGE_ADDEDEPISODE,\r\n} from '../../reducers/episode';\r\n\r\nconst WriteEpisodeDiv = styled.div`\r\n  width: 98%;\r\n  margin: 1rem 0rem 0rem 1rem;\r\n`;\r\n\r\nconst WriteEpisodeTopDiv = styled.div`\r\n  position: relative;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst BookTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst TopButtonDiv = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 1%;\r\n`;\r\n\r\nconst EpisodeForm = styled.form``;\r\n\r\nconst WriteEpisodeContentDiv = styled.div`\r\n  margin: 1.5rem;\r\n`;\r\n\r\nconst DivCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem;\r\n\r\n  width: 100%;\r\n`;\r\nconst DivCardLeft = styled.div`\r\n  flex: 1;\r\n`;\r\nconst DivCardRight = styled.div`\r\n  flex: 4;\r\n  display: flex;\r\n\r\n  & > input {\r\n    width: calc(100% - 2rem);\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    line-height: 2rem;\r\n    padding-left: 10px;\r\n\r\n    border: solid 2px #495057;\r\n    border-radius: 4px;\r\n\r\n    transition: 0.55s ease;\r\n    & :hover {\r\n      border: solid 2px #148cff;\r\n    }\r\n    & :focus {\r\n      border: solid 2px #148cff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n  width: 1.5rem !important;\r\n  height: 1.5rem !important;\r\n`;\r\n\r\nconst WriteEditorDiv = styled.div`\r\n  margin: 1rem;\r\n  & > label {\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-bottom: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: solid 2px #495057;\r\n  }\r\n`;\r\n\r\nconst LoadingImg = styled.img`\r\n  margin-top: 4px;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst Write = () => {\r\n  const { book } = useSelector(state => state.book);\r\n  const { isAddingEpisode, isAddedEpisode } = useSelector(\r\n    state => state.episode,\r\n  );\r\n\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checkNotice, setCheckNotice] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [writerComment, setWriterComment] = useState('');\r\n\r\n  const onChangeCheckNotice = useCallback(() => {\r\n    setCheckNotice(!checkNotice);\r\n  }, [checkNotice]);\r\n\r\n  const onChangeTitle = useCallback(e => {\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAddedEpisode) {\r\n      dispatch({\r\n        type: CHANGE_ADDEDEPISODE,\r\n      });\r\n      Router.push(\r\n        { pathname: `/book`, query: { bookid: book.id } },\r\n        `/book/${book.id}`,\r\n      );\r\n    }\r\n  }, [isAddedEpisode]);\r\n\r\n  const onCancleWrite = useCallback(() => {\r\n    Router.back();\r\n  }, []);\r\n\r\n  const onWriteEpisode = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const episodeContent =\r\n        text +\r\n        '<br/><br/><p><strong>작가의 말</strong><hr><br/>' +\r\n        writerComment;\r\n\r\n      dispatch({\r\n        type: ADD_EPISODE_REQUEST,\r\n        data: {\r\n          title: title,\r\n          content: episodeContent,\r\n          notice: checkNotice ? 1 : 0,\r\n          bookId: book && book.id,\r\n        },\r\n      });\r\n    },\r\n    [checkNotice, title, text, writerComment, book && book.id],\r\n  );\r\n\r\n  return (\r\n    <WriteEpisodeDiv>\r\n      <Helmet>\r\n        <title>{book && book.name}</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck.ck-editor {width:100%;}\r\n            .ck-editor__editable { height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <EpisodeForm onSubmit={onWriteEpisode}>\r\n        <WriteEpisodeTopDiv>\r\n          <BookTitle>\r\n            {book &&\r\n              book.name +\r\n                '  ' +\r\n                (book.Episodes.filter(v => v.isNotice !== 1).length + 1) +\r\n                '번째 글'}\r\n          </BookTitle>\r\n          <TopButtonDiv>\r\n            <Button color=\"pink\" type=\"button\" onClick={onCancleWrite}>\r\n              취소\r\n            </Button>\r\n            <Button type=\"submit\">\r\n              {isAddingEpisode ? (\r\n                <LoadingImg src=\"/static/icons/loading_blue.gif\" />\r\n              ) : (\r\n                '작성'\r\n              )}\r\n            </Button>\r\n          </TopButtonDiv>\r\n        </WriteEpisodeTopDiv>\r\n        <WriteEpisodeContentDiv>\r\n          <DivCard>\r\n            <DivCardLeft>\r\n              <label>이 글을 공지로 작성</label>\r\n            </DivCardLeft>\r\n            <DivCardRight>\r\n              <CheckBox\r\n                type=\"checkbox\"\r\n                value={checkNotice}\r\n                onChange={onChangeCheckNotice}\r\n              />\r\n            </DivCardRight>\r\n          </DivCard>\r\n          <DivCard>\r\n            <DivCardLeft>\r\n              <label>제목</label>\r\n            </DivCardLeft>\r\n            <DivCardRight>\r\n              <input type=\"text\" value={title} onChange={onChangeTitle} />\r\n            </DivCardRight>\r\n          </DivCard>\r\n\r\n          <WriteEditorDiv>\r\n            <label>본문</label>\r\n            {editorLoded ? (\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={text}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setText(data);\r\n                }}\r\n              />\r\n            ) : (\r\n              <p>Editor Loding</p>\r\n            )}\r\n          </WriteEditorDiv>\r\n          <WriteEditorDiv>\r\n            <label>작가의 말</label>\r\n            {editorLoded ? (\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={writerComment}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setWriterComment(data);\r\n                }}\r\n              />\r\n            ) : (\r\n              <p>Editor Loding</p>\r\n            )}\r\n          </WriteEditorDiv>\r\n        </WriteEpisodeContentDiv>\r\n      </EpisodeForm>\r\n    </WriteEpisodeDiv>\r\n  );\r\n};\r\n\r\nWrite.getInitialProps = async context => {\r\n  const bookId = context.query.bookid;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_BOOK_REQUEST,\r\n    id: bookId,\r\n  });\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}