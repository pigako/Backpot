{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\n\nvar Profile = function Profile(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  useEffect(function (e) {\n    if (!(me && me.id)) {\n      alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\n      Router.push('/');\n      return;\n    }\n\n    if ((me && me.id) !== id) {\n      alert('잘 못된 접근입니다.');\n      Router.push('/');\n      return;\n    }\n  }, [me && me.id, id]);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Profile / \", id));\n};\n\nProfile.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nProfile.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/profile.js"],"names":["React","useEffect","PropTypes","LOAD_USER_REQUEST","useSelector","Router","Profile","id","state","user","me","e","alert","push","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACXH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADA;AAAA,MAClBC,EADkB,gBAClBA,EADkB;;AAG1BT,EAAAA,SAAS,CACP,UAAAU,CAAC,EAAI;AACH,QAAI,EAAED,EAAE,IAAIA,EAAE,CAACH,EAAX,CAAJ,EAAoB;AAClBK,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA;AACD;;AACD,QAAI,CAACH,EAAE,IAAIA,EAAE,CAACH,EAAV,MAAkBA,EAAtB,EAA0B;AACxBK,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA;AACD;AACF,GAZM,EAaP,CAACH,EAAE,IAAIA,EAAE,CAACH,EAAV,EAAcA,EAAd,CAbO,CAAT;AAeA,SACE,mBACE,gCAAeA,EAAf,CADF,CADF;AAKD,CAvBD;;AAyBAD,OAAO,CAACQ,SAAR,GAAoB;AAClBP,EAAAA,EAAE,EAAEL,SAAS,CAACa,MAAV,CAAiBC;AADH,CAApB;;AAIAV,OAAO,CAACW,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBX,UAAAA,EADkB,GACbW,OAAO,CAACC,KAAR,CAAcZ,EADD;AAAA,2CAEjB;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nconst Profile = ({ id }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  useEffect(\r\n    e => {\r\n      if (!(me && me.id)) {\r\n        alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n      if ((me && me.id) !== id) {\r\n        alert('잘 못된 접근입니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n    },\r\n    [me && me.id, id],\r\n  );\r\n  return (\r\n    <div>\r\n      <h1>Profile / {id}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  return { id };\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}