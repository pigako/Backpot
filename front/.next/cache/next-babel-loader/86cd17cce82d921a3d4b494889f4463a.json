{"ast":null,"code":"import produce from 'immer';\nexport const initalState = {\n  isLoggingIn: false,\n  isLoggedIn: false,\n  loginErrorReason: '',\n  isLoggingOut: false,\n  isSignedUp: false,\n  isSigningUp: false,\n  signUpErrorReason: '',\n  me: null,\n  LikedBookList: [],\n  LikedWriterList: [],\n  otherUserInfo: null,\n  isUpdating: false,\n  isUpdated: false\n};\nexport const LOG_IN_REQUEST = `LOG_IN_REQUEST`;\nexport const LOG_IN_SUCCESS = `LOG_IN_SUCCESS`;\nexport const LOG_IN_FAILURE = `LOG_IN_FAILURE`;\nexport const LOG_OUT_REQUEST = `LOG_OUT_REQUEST`;\nexport const LOG_OUT_SUCCESS = `LOG_OUT_SUCCESS`;\nexport const LOG_OUT_FAILURE = `LOG_OUT_FAILURE`;\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\nexport const LOAD_USER_REQUEST = `LOAD_USER_REQUEST`;\nexport const LOAD_USER_SUCCESS = `LOAD_USER_SUCCESS`;\nexport const LOAD_USER_FAILURE = `LOAD_USER_FAILURE`;\nexport const UPDATE_USER_REQUEST = `UPDATE_USER_REQUEST`;\nexport const UPDATE_USER_SUCCESS = `UPDATE_USER_SUCCESS`;\nexport const UPDATE_USER_FAILURE = `UPDATE_USER_FAILURE`;\nexport const CHAGNE_UPDATED = `CHANGE_UPDATED`;\nexport const ADD_LIKEBOOKLIST = `ADD_LIKEBOOKLIST`;\nexport const REMOVE_LIKEBOOKLIST = `REMOVE_LIKEBOOKLIST`;\n\nconst reducer = (state = initalState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      // 로그인\n      case LOG_IN_REQUEST:\n        {\n          draft.isLoggingIn = true;\n          draft.isLoggedIn = false;\n          draft.loginErrorReason = '';\n          break;\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLoggingIn = false;\n          draft.isLoggedIn = true;\n          draft.me = action.data;\n          break;\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLoggingIn = false;\n          draft.loginErrorReason = action.error;\n          break;\n        }\n      // 로그아웃\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLoggingOut = true;\n          break;\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLoggingOut = false;\n          draft.isLoggedIn = false;\n          draft.me = null;\n          break;\n        }\n\n      case LOG_OUT_FAILURE:\n        {\n          draft.isLoggingOut = false;\n          break;\n        }\n      // 회원가입\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.isSigningUp = true;\n          draft.signUpErrorReason = '';\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.isSigningUp = false;\n          draft.isSignedUp = true;\n          break;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.isSigningUp = false;\n          draft.signUpErrorReason = action.error;\n          break;\n        }\n      // 유저 정보 불러오기\n\n      case LOAD_USER_REQUEST:\n        {\n          if (action.data) {\n            draft.otherUserInfo = null;\n          }\n\n          break;\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          if (action.me) {\n            draft.me = action.data;\n          }\n\n          if (!action.me) {\n            draft.otherUserInfo = action.data;\n          }\n\n          break;\n        }\n\n      case LOAD_USER_FAILURE:\n        {\n          break;\n        }\n      // 선호작 리스트 추가\n\n      case ADD_LIKEBOOKLIST:\n        {\n          draft.me.LikingBook.push({\n            id: action.data.id,\n            name: action.data.name,\n            recentDay: action.data.recentDay,\n            User: {\n              userId: action.data.userId,\n              nickname: action.data.userNickname\n            }\n          });\n          break;\n        }\n\n      case REMOVE_LIKEBOOKLIST:\n        {\n          const index = draft.me.LikingBook.findIndex(v => v.id === action.data);\n\n          if (index !== -1) {\n            draft.me.LikingBook.splice(index, 1);\n          }\n\n          break;\n        }\n\n      case UPDATE_USER_REQUEST:\n        {\n          draft.isUpdating = true;\n          draft.isUpdated = false;\n          break;\n        }\n\n      case UPDATE_USER_SUCCESS:\n        {\n          draft.isUpdating = false;\n          draft.isUpdated = true;\n\n          if (action.data.userId) {\n            draft.me.userId = action.data.userId;\n          }\n\n          if (action.data.nickname) {\n            draft.me.nickname = action.data.nickname;\n          }\n\n          break;\n        }\n\n      case UPDATE_USER_FAILURE:\n        {\n          break;\n        }\n\n      case CHANGE_UPDATED:\n        {\n          draft.isUpdated = false;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Document/Backpot/front/reducers/user.js"],"names":["produce","initalState","isLoggingIn","isLoggedIn","loginErrorReason","isLoggingOut","isSignedUp","isSigningUp","signUpErrorReason","me","LikedBookList","LikedWriterList","otherUserInfo","isUpdating","isUpdated","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","CHAGNE_UPDATED","ADD_LIKEBOOKLIST","REMOVE_LIKEBOOKLIST","reducer","state","action","draft","type","data","error","LikingBook","push","id","name","recentDay","User","userId","nickname","userNickname","index","findIndex","v","splice","CHANGE_UPDATED"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initalState = {\r\n  isLoggingIn: false,\r\n  isLoggedIn: false,\r\n  loginErrorReason: '',\r\n  isLoggingOut: false,\r\n  isSignedUp: false,\r\n  isSigningUp: false,\r\n  signUpErrorReason: '',\r\n  me: null,\r\n  LikedBookList: [],\r\n  LikedWriterList: [],\r\n  otherUserInfo: null,\r\n  isUpdating: false,\r\n  isUpdated: false,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = `LOG_IN_REQUEST`;\r\nexport const LOG_IN_SUCCESS = `LOG_IN_SUCCESS`;\r\nexport const LOG_IN_FAILURE = `LOG_IN_FAILURE`;\r\n\r\nexport const LOG_OUT_REQUEST = `LOG_OUT_REQUEST`;\r\nexport const LOG_OUT_SUCCESS = `LOG_OUT_SUCCESS`;\r\nexport const LOG_OUT_FAILURE = `LOG_OUT_FAILURE`;\r\n\r\nexport const SIGN_UP_REQUEST = `SIGN_UP_REQUEST`;\r\nexport const SIGN_UP_SUCCESS = `SIGN_UP_SUCCESS`;\r\nexport const SIGN_UP_FAILURE = `SIGN_UP_FAILURE`;\r\n\r\nexport const LOAD_USER_REQUEST = `LOAD_USER_REQUEST`;\r\nexport const LOAD_USER_SUCCESS = `LOAD_USER_SUCCESS`;\r\nexport const LOAD_USER_FAILURE = `LOAD_USER_FAILURE`;\r\n\r\nexport const UPDATE_USER_REQUEST = `UPDATE_USER_REQUEST`;\r\nexport const UPDATE_USER_SUCCESS = `UPDATE_USER_SUCCESS`;\r\nexport const UPDATE_USER_FAILURE = `UPDATE_USER_FAILURE`;\r\n\r\nexport const CHAGNE_UPDATED = `CHANGE_UPDATED`;\r\n\r\nexport const ADD_LIKEBOOKLIST = `ADD_LIKEBOOKLIST`;\r\nexport const REMOVE_LIKEBOOKLIST = `REMOVE_LIKEBOOKLIST`;\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      // 로그인\r\n      case LOG_IN_REQUEST: {\r\n        draft.isLoggingIn = true;\r\n        draft.isLoggedIn = false;\r\n        draft.loginErrorReason = '';\r\n        break;\r\n      }\r\n      case LOG_IN_SUCCESS: {\r\n        draft.isLoggingIn = false;\r\n        draft.isLoggedIn = true;\r\n        draft.me = action.data;\r\n        break;\r\n      }\r\n      case LOG_IN_FAILURE: {\r\n        draft.isLoggingIn = false;\r\n        draft.loginErrorReason = action.error;\r\n        break;\r\n      }\r\n      // 로그아웃\r\n      case LOG_OUT_REQUEST: {\r\n        draft.isLoggingOut = true;\r\n        break;\r\n      }\r\n      case LOG_OUT_SUCCESS: {\r\n        draft.isLoggingOut = false;\r\n        draft.isLoggedIn = false;\r\n        draft.me = null;\r\n        break;\r\n      }\r\n      case LOG_OUT_FAILURE: {\r\n        draft.isLoggingOut = false;\r\n        break;\r\n      }\r\n      // 회원가입\r\n      case SIGN_UP_REQUEST: {\r\n        draft.isSigningUp = true;\r\n        draft.signUpErrorReason = '';\r\n        break;\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        draft.isSigningUp = false;\r\n        draft.isSignedUp = true;\r\n        break;\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        draft.isSigningUp = false;\r\n        draft.signUpErrorReason = action.error;\r\n        break;\r\n      }\r\n      // 유저 정보 불러오기\r\n      case LOAD_USER_REQUEST: {\r\n        if (action.data) {\r\n          draft.otherUserInfo = null;\r\n        }\r\n        break;\r\n      }\r\n      case LOAD_USER_SUCCESS: {\r\n        if (action.me) {\r\n          draft.me = action.data;\r\n        }\r\n        if (!action.me) {\r\n          draft.otherUserInfo = action.data;\r\n        }\r\n        break;\r\n      }\r\n      case LOAD_USER_FAILURE: {\r\n        break;\r\n      }\r\n      // 선호작 리스트 추가\r\n      case ADD_LIKEBOOKLIST: {\r\n        draft.me.LikingBook.push({\r\n          id: action.data.id,\r\n          name: action.data.name,\r\n          recentDay: action.data.recentDay,\r\n          User: {\r\n            userId: action.data.userId,\r\n            nickname: action.data.userNickname,\r\n          },\r\n        });\r\n        break;\r\n      }\r\n      case REMOVE_LIKEBOOKLIST: {\r\n        const index = draft.me.LikingBook.findIndex(v => v.id === action.data);\r\n        if (index !== -1) {\r\n          draft.me.LikingBook.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n      case UPDATE_USER_REQUEST: {\r\n        draft.isUpdating = true;\r\n        draft.isUpdated = false;\r\n        break;\r\n      }\r\n      case UPDATE_USER_SUCCESS: {\r\n        draft.isUpdating = false;\r\n        draft.isUpdated = true;\r\n        if (action.data.userId) {\r\n          draft.me.userId = action.data.userId;\r\n        }\r\n        if (action.data.nickname) {\r\n          draft.me.nickname = action.data.nickname;\r\n        }\r\n        break;\r\n      }\r\n      case UPDATE_USER_FAILURE: {\r\n        break;\r\n      }\r\n      case CHANGE_UPDATED: {\r\n        draft.isUpdated = false;\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}