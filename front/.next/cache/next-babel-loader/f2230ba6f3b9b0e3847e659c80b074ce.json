{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadBooks),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadBook),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddLikebook),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveLikebook),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(bookSaga);\n\nimport { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_BOOKS_REQUEST, LOAD_BOOKS_SUCCESS, LOAD_BOOKS_FAILURE, LOAD_BOOK_REQUEST, LOAD_BOOK_SUCCESS, LOAD_BOOK_FAILURE, ADD_LIKEBOOK_REQUEST, ADD_LIKEBOOK_SUCCESS, ADD_LIKEBOOK_FAILURE, REMOVE_LIKEBOOK_REQUEST, REMOVE_LIKEBOOK_SUCCESS, REMOVE_LIKEBOOK_FAILURE } from '../reducers/book'; // 전체 연재글 가져오기\n\nfunction watchLoadBooks() {\n  return _regeneratorRuntime.wrap(function watchLoadBooks$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return throttle(1000, LOAD_BOOKS_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function loadBooks(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function loadBooks$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(function () {\n                      var lastId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n                      return axios.get(\"/books?lastId=\".concat(lastId, \"&limit=\").concat(limit));\n                    }, action.lastId);\n\n                  case 3:\n                    result = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: LOAD_BOOKS_SUCCESS,\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context.next = 13;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.log(_context.t0);\n                    _context.next = 13;\n                    return put({\n                      type: LOAD_BOOKS_FAILURE,\n                      error: _context.t0\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, loadBooks, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n} // 게시글 하나 조회\n\n\nfunction watchLoadBook() {\n  return _regeneratorRuntime.wrap(function watchLoadBook$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOAD_BOOK_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function loadBook(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function loadBook$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return call(function (bookId) {\n                      return axios.get(\"/book/\".concat(bookId));\n                    }, action.id);\n\n                  case 3:\n                    result = _context3.sent;\n                    _context3.next = 6;\n                    return put({\n                      type: LOAD_BOOK_SUCCESS,\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context3.next = 12;\n                    break;\n\n                  case 8:\n                    _context3.prev = 8;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.log(_context3.t0);\n                    put({\n                      type: LOAD_BOOK_FAILURE,\n                      error: _context3.t0\n                    });\n\n                  case 12:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, loadBook, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n} // 선호작 추가\n\n\nfunction watchAddLikebook() {\n  return _regeneratorRuntime.wrap(function watchAddLikebook$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(ADD_LIKEBOOK_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function addLikebook(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function addLikebook$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return call(function (bookId) {\n                      return axios.post(\"/book/\".concat(bookId, \"/like\"), {}, {\n                        withCredentials: true\n                      });\n                    }, action.bookId);\n\n                  case 3:\n                    result = _context5.sent;\n                    _context5.next = 6;\n                    return put({\n                      type: ADD_LIKEBOOK_SUCCESS,\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context5.next = 13;\n                    break;\n\n                  case 8:\n                    _context5.prev = 8;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.log(_context5.t0);\n                    _context5.next = 13;\n                    return put({\n                      type: ADD_LIKEBOOK_FAILURE,\n                      error: _context5.t0\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, addLikebook, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n} // 선호작 해제\n\n\nfunction watchRemoveLikebook() {\n  return _regeneratorRuntime.wrap(function watchRemoveLikebook$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function bookSaga() {\n  return _regeneratorRuntime.wrap(function bookSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([fork(watchLoadBooks), fork(watchLoadBook), fork(watchAddLikebook), fork(watchRemoveLikebook)]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/book.js"],"names":["watchLoadBooks","watchLoadBook","watchAddLikebook","watchRemoveLikebook","bookSaga","all","call","fork","throttle","takeLatest","put","axios","LOAD_BOOKS_REQUEST","LOAD_BOOKS_SUCCESS","LOAD_BOOKS_FAILURE","LOAD_BOOK_REQUEST","LOAD_BOOK_SUCCESS","LOAD_BOOK_FAILURE","ADD_LIKEBOOK_REQUEST","ADD_LIKEBOOK_SUCCESS","ADD_LIKEBOOK_FAILURE","REMOVE_LIKEBOOK_REQUEST","REMOVE_LIKEBOOK_SUCCESS","REMOVE_LIKEBOOK_FAILURE","loadBooks","action","lastId","limit","get","result","type","data","console","log","error","loadBook","bookId","id","addLikebook","post","withCredentials"],"mappings":"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","sourcesContent":["import { all, call, fork, throttle, takeLatest, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_BOOKS_REQUEST,\r\n  LOAD_BOOKS_SUCCESS,\r\n  LOAD_BOOKS_FAILURE,\r\n  LOAD_BOOK_REQUEST,\r\n  LOAD_BOOK_SUCCESS,\r\n  LOAD_BOOK_FAILURE,\r\n  ADD_LIKEBOOK_REQUEST,\r\n  ADD_LIKEBOOK_SUCCESS,\r\n  ADD_LIKEBOOK_FAILURE,\r\n  REMOVE_LIKEBOOK_REQUEST,\r\n  REMOVE_LIKEBOOK_SUCCESS,\r\n  REMOVE_LIKEBOOK_FAILURE,\r\n} from '../reducers/book';\r\n\r\n// 전체 연재글 가져오기\r\nfunction* watchLoadBooks() {\r\n  yield throttle(1000, LOAD_BOOKS_REQUEST, function* loadBooks(action) {\r\n    try {\r\n      const result = yield call((lastId = 0, limit = 20) => {\r\n        return axios.get(`/books?lastId=${lastId}&limit=${limit}`);\r\n      }, action.lastId);\r\n      yield put({\r\n        type: LOAD_BOOKS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: LOAD_BOOKS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 게시글 하나 조회\r\nfunction* watchLoadBook() {\r\n  yield takeLatest(LOAD_BOOK_REQUEST, function* loadBook(action) {\r\n    try {\r\n      const result = yield call(bookId => {\r\n        return axios.get(`/book/${bookId}`);\r\n      }, action.id);\r\n      yield put({\r\n        type: LOAD_BOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      put({\r\n        type: LOAD_BOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 선호작 추가\r\nfunction* watchAddLikebook() {\r\n  yield takeLatest(ADD_LIKEBOOK_REQUEST, function* addLikebook(action) {\r\n    try {\r\n      const result = yield call(bookId => {\r\n        return axios.post(\r\n          `/book/${bookId}/like`,\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        );\r\n      }, action.bookId);\r\n      yield put({\r\n        type: ADD_LIKEBOOK_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: ADD_LIKEBOOK_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 선호작 해제\r\nfunction* watchRemoveLikebook() {}\r\nexport default function* bookSaga() {\r\n  yield all([\r\n    fork(watchLoadBooks),\r\n    fork(watchLoadBook),\r\n    fork(watchAddLikebook),\r\n    fork(watchRemoveLikebook),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}