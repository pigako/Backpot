{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Profile = ({\n  id\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(e => {\n    if (!(me && me.id)) {\n      alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\n      Router.push('/');\n      return;\n    }\n\n    if ((me && me.userId) !== id) {\n      alert('잘 못된 접근입니다.');\n      Router.push('/');\n      return;\n    }\n  }, [me && me.userId, id]);\n  return __jsx(\"div\", null, __jsx(\"table\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"\\uC544\\uC774\\uB514\"), __jsx(\"td\", null, me && me.userId)), __jsx(\"tr\", null, __jsx(\"td\", null, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"td\", null, me && me.nickname)), __jsx(\"tr\", null, __jsx(\"td\", null, \"\\uC5F0\\uC7AC\\uD55C \\uAE00 \\uC218\"), __jsx(\"td\", null, me && me.Books.length)), __jsx(\"tr\", null, __jsx(\"td\", null, \"\\uC120\\uD638\\uC791 \\uC218\"), __jsx(\"td\", null, me && me.LikingBook.length)), __jsx(\"tr\", null, __jsx(\"td\", null, \"\\uC120\\uD638\\uC791\\uAC00 \\uC218\"), __jsx(\"td\", null, me && me.LikingUser.length))));\n};\n\nProfile.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nProfile.getInitialProps = async context => {\n  const id = context.query.id;\n  return {\n    id\n  };\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/profile.js"],"names":["React","useEffect","PropTypes","styled","Router","useSelector","LOAD_USER_REQUEST","Profile","id","me","state","user","e","alert","push","userId","nickname","Books","length","LikingBook","LikingUser","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AAEAV,EAAAA,SAAS,CACPW,CAAC,IAAI;AACH,QAAI,EAAEH,EAAE,IAAIA,EAAE,CAACD,EAAX,CAAJ,EAAoB;AAClBK,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACA;AACD;;AACD,QAAI,CAACL,EAAE,IAAIA,EAAE,CAACM,MAAV,MAAsBP,EAA1B,EAA8B;AAC5BK,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACA;AACD;AACF,GAZM,EAaP,CAACL,EAAE,IAAIA,EAAE,CAACM,MAAV,EAAkBP,EAAlB,CAbO,CAAT;AAgBA,SACE,mBACE,qBACE,kBACE,uCADF,EAEE,kBAAKC,EAAE,IAAIA,EAAE,CAACM,MAAd,CAFF,CADF,EAKE,kBACE,uCADF,EAEE,kBAAKN,EAAE,IAAIA,EAAE,CAACO,QAAd,CAFF,CALF,EASE,kBACE,qDADF,EAEE,kBAAKP,EAAE,IAAIA,EAAE,CAACQ,KAAH,CAASC,MAApB,CAFF,CATF,EAaE,kBACE,8CADF,EAEE,kBAAKT,EAAE,IAAIA,EAAE,CAACU,UAAH,CAAcD,MAAzB,CAFF,CAbF,EAiBE,kBACE,oDADF,EAEE,kBAAKT,EAAE,IAAIA,EAAE,CAACW,UAAH,CAAcF,MAAzB,CAFF,CAjBF,CADF,CADF;AA0BD,CA7CD;;AA+CAX,OAAO,CAACc,SAAR,GAAoB;AAClBb,EAAAA,EAAE,EAAEN,SAAS,CAACoB,MAAV,CAAiBC;AADH,CAApB;;AAIAhB,OAAO,CAACiB,eAAR,GAA0B,MAAMC,OAAN,IAAiB;AACzC,QAAMjB,EAAE,GAAGiB,OAAO,CAACC,KAAR,CAAclB,EAAzB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n\r\nconst Profile = ({ id }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  useEffect(\r\n    e => {\r\n      if (!(me && me.id)) {\r\n        alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n      if ((me && me.userId) !== id) {\r\n        alert('잘 못된 접근입니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n    },\r\n    [me && me.userId, id],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tr>\r\n          <td>아이디</td>\r\n          <td>{me && me.userId}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>닉네임</td>\r\n          <td>{me && me.nickname}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>연재한 글 수</td>\r\n          <td>{me && me.Books.length}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>선호작 수</td>\r\n          <td>{me && me.LikingBook.length}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>선호작가 수</td>\r\n          <td>{me && me.LikingUser.length}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  return { id };\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}