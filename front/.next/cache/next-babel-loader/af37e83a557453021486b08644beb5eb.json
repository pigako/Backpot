{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Button from '../components/designs/Button';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nconst WriteDiv = styled.div.withConfig({\n  displayName: \"writeboard__WriteDiv\",\n  componentId: \"sc-3uiybh-0\"\n})([\"margin-top:10px;width:98%;\"]);\nconst WriteBoardDivTop = styled.div.withConfig({\n  displayName: \"writeboard__WriteBoardDivTop\",\n  componentId: \"sc-3uiybh-1\"\n})([\"display:flex;align-items:center;margin-bottom:1rem;\"]);\nconst SWriteBoardTitle = styled.h1.withConfig({\n  displayName: \"writeboard__SWriteBoardTitle\",\n  componentId: \"sc-3uiybh-2\"\n})([\"display:inline-block;font-weight:bold;margin-left:10px;width:100%;\"]);\nconst BoardTitleInput = styled.input.withConfig({\n  displayName: \"writeboard__BoardTitleInput\",\n  componentId: \"sc-3uiybh-3\"\n})([\"margin-right:10px;border:solid 1px #495057;border-radius:4px;padding-left:10px;margin-bottom:1rem;height:2.25rem;width:100%;font-size:1.5rem;transition:0.55s ease;&:hover{border:solid 2px #148cff;}&:focus{border:solid 2px #148cff;}\"]);\n\nconst WriteBoard = () => {\n  const editorRef = useRef();\n  const {\n    0: editorLoded,\n    1: setEditorLoded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    isAddingBoard\n  } = useSelector(state => state.board);\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  const onCancle = useCallback(e => {\n    Router.back();\n  }, []);\n  const onChangeTitle = useCallback(e => {\n    setTitle(e.target.value);\n  });\n  const onCreateBoard = useCallback(e => {\n    console.log(text);\n  }, [text]);\n  return __jsx(WriteDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(\"style\", {\n    type: \"text/css\"\n  }, `\n            .ck-editor__editable { height: 500px;}\n          `)), __jsx(WriteBoardDivTop, null, __jsx(SWriteBoardTitle, null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(Button, {\n    color: 'pink',\n    onClick: onCancle\n  }, \"\\uCDE8\\uC18C\"), __jsx(Button, {\n    onClick: onCreateBoard\n  }, \"\\uC791\\uC131\")), __jsx(BoardTitleInput, {\n    value: title,\n    onChange: onChangeTitle\n  }), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: text,\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\"));\n};\n\nWriteBoard.getInitialProps = context => {};\n\nexport default WriteBoard;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/writeboard.js"],"names":["React","useRef","useState","useEffect","useCallback","styled","Helmet","Button","Router","useSelector","WriteDiv","div","WriteBoardDivTop","SWriteBoardTitle","h1","BoardTitleInput","input","WriteBoard","editorRef","editorLoded","setEditorLoded","CKEditor","ClassicEditor","current","text","setText","title","setTitle","isAddingBoard","state","board","require","onCancle","e","back","onChangeTitle","target","value","onCreateBoard","console","log","event","editor","data","getData","getInitialProps","context"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Button from '../components/designs/Button';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WriteDiv = styled.div`\r\n  margin-top: 10px;\r\n  width: 98%;\r\n`;\r\n\r\nconst WriteBoardDivTop = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst SWriteBoardTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst BoardTitleInput = styled.input`\r\n  margin-right: 10px;\r\n  border: solid 1px #495057;\r\n  border-radius: 4px;\r\n  padding-left: 10px;\r\n  margin-bottom: 1rem;\r\n\r\n  height: 2.25rem;\r\n  width: 100%;\r\n  font-size: 1.5rem;\r\n\r\n  transition: 0.55s ease;\r\n\r\n  & :hover {\r\n    border: solid 2px #148cff;\r\n  }\r\n  & :focus {\r\n    border: solid 2px #148cff;\r\n  }\r\n`;\r\n\r\nconst WriteBoard = () => {\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n  const [text, setText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const { isAddingBoard } = useSelector(state => state.board);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const onCancle = useCallback(e => {\r\n    Router.back();\r\n  }, []);\r\n\r\n  const onChangeTitle = useCallback(e => {\r\n    setTitle(e.target.value);\r\n  });\r\n\r\n  const onCreateBoard = useCallback(\r\n    e => {\r\n      console.log(text);\r\n    },\r\n    [text],\r\n  );\r\n\r\n  return (\r\n    <WriteDiv>\r\n      <Helmet>\r\n        <title>추천게시글 작성</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable { height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <WriteBoardDivTop>\r\n        <SWriteBoardTitle>추천게시글 작성</SWriteBoardTitle>\r\n        <Button color={'pink'} onClick={onCancle}>\r\n          취소\r\n        </Button>\r\n        <Button onClick={onCreateBoard}>작성</Button>\r\n      </WriteBoardDivTop>\r\n      <BoardTitleInput value={title} onChange={onChangeTitle} />\r\n      {editorLoded ? (\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data={text}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setText(data);\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>Editor Loding</p>\r\n      )}\r\n    </WriteDiv>\r\n  );\r\n};\r\n\r\nWriteBoard.getInitialProps = context => {};\r\n\r\nexport default WriteBoard;\r\n"]},"metadata":{},"sourceType":"module"}