{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport Button from './designs/Button';\nimport { useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nconst Form = styled.form.withConfig({\n  displayName: \"LoginForm__Form\",\n  componentId: \"sc-1xv52z9-0\"\n})([\"width:100%;margin-top:10px;margin-left:10px;font-size:1rem;\"]);\nconst Label = styled.label.withConfig({\n  displayName: \"LoginForm__Label\",\n  componentId: \"sc-1xv52z9-1\"\n})([\"display:inline-block;margin-bottom:10px;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"LoginForm__Input\",\n  componentId: \"sc-1xv52z9-2\"\n})([\"border-radius:4px;padding-left:10px;margin-bottom:10px;width:90%;font-size:1.2rem;\"]);\nconst LoginFormButtonDiv = styled.div.withConfig({\n  displayName: \"LoginForm__LoginFormButtonDiv\",\n  componentId: \"sc-1xv52z9-3\"\n})([\"display:flex;justify-content:flex-end;align-items:center;width:90%;& button{margin-left:10px;}\"]);\nconst LoadingImg = styled.img.withConfig({\n  displayName: \"LoginForm__LoadingImg\",\n  componentId: \"sc-1xv52z9-4\"\n})([\"margin-top:4px;height:1.5rem;\"]);\n\nconst LoginForm = () => {\n  const {\n    isLoggingIn\n  } = useSelector(state => state.user);\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    userId: '',\n    password: ''\n  });\n  const {\n    userId,\n    password\n  } = inputs;\n  const onChangeInputs = useCallback(e => {\n    setInputs(_objectSpread({}, inputs, {\n      [e.target.name]: e.target.value\n    }));\n  }, [inputs]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        userId,\n        password\n      }\n    });\n  }, [userId, password]);\n  return __jsx(Form, {\n    onSubmit: onSubmitForm\n  }, __jsx(\"div\", null, __jsx(Label, {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    htmlFor: \"user-id\",\n    name: \"userId\",\n    value: userId,\n    onChange: onChangeInputs,\n    required: true\n  })), __jsx(\"div\", null, __jsx(Label, {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    htmlFor: \"user-password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangeInputs,\n    required: true\n  })), __jsx(LoginFormButtonDiv, null, __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, __jsx(Button, {\n    color: \"pink\"\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))), __jsx(Button, {\n    type: \"submit\"\n  }, isLoggingIn ? __jsx(LoadingImg, {\n    src: \"/static/icons/loading_blue.gif\"\n  }) : `로그인`)));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Document/Backpot/front/components/LoginForm.js"],"names":["React","useCallback","useState","styled","Link","Button","useSelector","LOG_IN_REQUEST","Form","form","Label","label","Input","input","LoginFormButtonDiv","div","LoadingImg","img","LoginForm","isLoggingIn","state","user","inputs","setInputs","userId","password","onChangeInputs","e","target","name","value","onSubmitForm","preventDefault","dispatch","type","data"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nimport Button from './designs/Button';\r\nimport { useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  font-size: 1rem;\r\n`;\r\nconst Label = styled.label`\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Input = styled.input`\r\n  /* outline: #339af0;\r\n  border: #339af0; */\r\n  border-radius: 4px;\r\n  padding-left: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  width: 90%;\r\n  font-size: 1.2rem;\r\n`;\r\nconst LoginFormButtonDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  width: 90%;\r\n  & button {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst LoadingImg = styled.img`\r\n  margin-top: 4px;\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const { isLoggingIn } = useSelector(state => state.user);\r\n  const [inputs, setInputs] = useState({\r\n    userId: '',\r\n    password: '',\r\n  });\r\n  const { userId, password } = inputs;\r\n\r\n  const onChangeInputs = useCallback(\r\n    e => {\r\n      setInputs({\r\n        ...inputs,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n    [inputs],\r\n  );\r\n\r\n  const onSubmitForm = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      dispatch({\r\n        type: LOG_IN_REQUEST,\r\n        data: {\r\n          userId,\r\n          password,\r\n        },\r\n      });\r\n    },\r\n    [userId, password],\r\n  );\r\n  return (\r\n    <Form onSubmit={onSubmitForm}>\r\n      <div>\r\n        <Label htmlFor=\"user-id\">아이디</Label>\r\n        <br />\r\n        <Input\r\n          htmlFor=\"user-id\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={onChangeInputs}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <Label htmlFor=\"user-password\">비밀번호</Label>\r\n        <br />\r\n        <Input\r\n          htmlFor=\"user-password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangeInputs}\r\n          required\r\n        />\r\n      </div>\r\n      <LoginFormButtonDiv>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button color=\"pink\">회원가입</Button>\r\n          </a>\r\n        </Link>\r\n        <Button type=\"submit\">\r\n          {isLoggingIn ? (\r\n            <LoadingImg src=\"/static/icons/loading_blue.gif\" />\r\n          ) : (\r\n            `로그인`\r\n          )}\r\n        </Button>\r\n      </LoginFormButtonDiv>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}