{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Button from '../components/designs/Button';\nvar WriteDiv = styled.div.withConfig({\n  displayName: \"writeboard__WriteDiv\",\n  componentId: \"sc-3uiybh-0\"\n})([\"margin-top:10px;width:98%;\"]);\nvar WriteBoardDivTop = styled.div.withConfig({\n  displayName: \"writeboard__WriteBoardDivTop\",\n  componentId: \"sc-3uiybh-1\"\n})([\"display:flex;align-items:center;margin-bottom:1rem;\"]);\nvar SWriteBoardTitle = styled.h1.withConfig({\n  displayName: \"writeboard__SWriteBoardTitle\",\n  componentId: \"sc-3uiybh-2\"\n})([\"display:inline-block;font-weight:bold;margin-left:10px;width:100%;\"]);\nvar SButton = styled(Button).withConfig({\n  displayName: \"writeboard__SButton\",\n  componentId: \"sc-3uiybh-3\"\n})([\"float:right;\"]);\n\nvar WriteBoard = function WriteBoard() {\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoded = _useState[0],\n      setEditorLoded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  var onSubmit = useCallback(function (e) {}, []);\n  return __jsx(WriteDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(\"style\", {\n    type: \"text/css\"\n  }, \"\\n            .ck-editor__editable { height: 500px;}\\n          \")), __jsx(WriteBoardDivTop, null, __jsx(SWriteBoardTitle, null, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(SButton, {\n    onClick: onSubmit\n  }, \"\\uC791\\uC131\")), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"\",\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\"));\n};\n\nWriteBoard.getInitialProps = function (context) {};\n\nexport default WriteBoard;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/writeboard.js"],"names":["React","useRef","useState","useEffect","useCallback","styled","Helmet","Button","WriteDiv","div","WriteBoardDivTop","SWriteBoardTitle","h1","SButton","WriteBoard","editorRef","editorLoded","setEditorLoded","current","CKEditor","ClassicEditor","require","onSubmit","e","event","editor","data","getData","console","log","getInitialProps","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,IAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,kCAAd;AAKA,IAAMC,gBAAgB,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,2DAAtB;AAMA,IAAME,gBAAgB,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,0EAAtB;AAOA,IAAMC,OAAO,GAAGR,MAAM,CAACE,MAAD,CAAT;AAAA;AAAA;AAAA,oBAAb;;AAIA,IAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,SAAS,GAAGd,MAAM,EAAxB;;AADuB,kBAEeC,QAAQ,CAAC,KAAD,CAFvB;AAAA,MAEhBc,WAFgB;AAAA,MAEHC,cAFG;;AAAA,aAGaF,SAAS,CAACG,OAAV,IAAqB,EAHlC;AAAA,MAGfC,QAHe,QAGfA,QAHe;AAAA,MAGLC,aAHK,QAGLA,aAHK;;AAKvBjB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,SAAS,CAACG,OAAV,GAAoB;AAClBC,MAAAA,QAAQ,EAAEE,OAAO,CAAC,2BAAD,CADC;AAElBD,MAAAA,aAAa,EAAEC,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,MAAMK,QAAQ,GAAGlB,WAAW,CAAC,UAAAmB,CAAC,EAAI,CAAE,CAAR,EAAU,EAAV,CAA5B;AAEA,SACE,MAAC,QAAD,QACE,MAAC,MAAD,QACE,mEADF,EAEE;AAAO,IAAA,IAAI,EAAC;AAAZ,wEAFF,CADF,EASE,MAAC,gBAAD,QACE,MAAC,gBAAD,0CADF,EAEE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAED;AAAlB,oBAFF,CATF,EAaGN,WAAW,GACV,MAAC,QAAD;AACE,IAAA,MAAM,EAAEI,aADV;AAEE,IAAA,IAAI,EAAC,EAFP;AAGE,IAAA,QAAQ,EAAE,kBAACI,KAAD,EAAQC,MAAR,EAAmB;AAC3B,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,EAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA,MAAT;AAAiBC,QAAAA,IAAI,EAAJA;AAAjB,OAAZ;AACD;AANH,IADU,GAUV,iCAvBJ,CADF;AA4BD,CA3CD;;AA6CAZ,UAAU,CAACgB,eAAX,GAA6B,UAAAC,OAAO,EAAI,CAAE,CAA1C;;AAEA,eAAejB,UAAf","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Button from '../components/designs/Button';\r\n\r\nconst WriteDiv = styled.div`\r\n  margin-top: 10px;\r\n  width: 98%;\r\n`;\r\n\r\nconst WriteBoardDivTop = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst SWriteBoardTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SButton = styled(Button)`\r\n  float: right;\r\n`;\r\n\r\nconst WriteBoard = () => {\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(e => {}, []);\r\n\r\n  return (\r\n    <WriteDiv>\r\n      <Helmet>\r\n        <title>추천게시글 작성</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable { height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <WriteBoardDivTop>\r\n        <SWriteBoardTitle>게시글 작성</SWriteBoardTitle>\r\n        <SButton onClick={onSubmit}>작성</SButton>\r\n      </WriteBoardDivTop>\r\n      {editorLoded ? (\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"\"\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>Editor Loding</p>\r\n      )}\r\n    </WriteDiv>\r\n  );\r\n};\r\n\r\nWriteBoard.getInitialProps = context => {};\r\n\r\nexport default WriteBoard;\r\n"]},"metadata":{},"sourceType":"module"}