{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nconst SProfileDiv = styled.div.withConfig({\n  displayName: \"profile__SProfileDiv\",\n  componentId: \"sc-1n71nmh-0\"\n})([\"width:98%;margin-top:10px;\"]);\nconst ProfileTitle = styled.h1.withConfig({\n  displayName: \"profile__ProfileTitle\",\n  componentId: \"sc-1n71nmh-1\"\n})([\"display:inline-block;font-weight:bold;margin-left:10px;width:100%;\"]);\nconst InfoCardWrap = styled.div.withConfig({\n  displayName: \"profile__InfoCardWrap\",\n  componentId: \"sc-1n71nmh-2\"\n})([\"margin-top:2rem;margin-left:1.5rem;border:solid 1px #495057;border-radius:6px;width:70%;\"]);\nconst InfoCardDiv = styled.div.withConfig({\n  displayName: \"profile__InfoCardDiv\",\n  componentId: \"sc-1n71nmh-3\"\n})([\"display:flex;margin:1.5rem;\"]);\nconst InfoLeftDiv = styled.div.withConfig({\n  displayName: \"profile__InfoLeftDiv\",\n  componentId: \"sc-1n71nmh-4\"\n})([\"height:3rem;\"]);\nconst InfoRightDiv = styled.div.withConfig({\n  displayName: \"profile__InfoRightDiv\",\n  componentId: \"sc-1n71nmh-5\"\n})([\"\"]);\n\nconst Profile = ({\n  id\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(e => {\n    if (!(me && me.id)) {\n      alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\n      Router.push('/');\n      return;\n    }\n\n    if ((me && me.userId) !== id) {\n      alert('잘 못된 접근입니다.');\n      Router.push('/');\n      return;\n    }\n  }, [me && me.userId, id]);\n  return __jsx(SProfileDiv, null, __jsx(ProfileTitle, null, me && me.nickname, \" \\uB2D8 \\uD504\\uB85C\\uD544 \\uC218\\uC815\"), __jsx(InfoCardWrap, null, __jsx(InfoCardDiv, null, __jsx(InfoLeftDiv, null, \"\\uC544\\uC774\\uB514\"), __jsx(InfoRightDiv, null, me && me.userId)), __jsx(InfoCardDiv, null, __jsx(InfoLeftDiv, null, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(InfoRightDiv, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uBCC0\\uACBD\")), __jsx(InfoCardDiv, null, __jsx(InfoLeftDiv, null, \"\\uB2C9\\uB124\\uC784\"), __jsx(InfoRightDiv, null, me && me.nickname))));\n};\n\nProfile.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nProfile.getInitialProps = async context => {\n  const id = context.query.id;\n  return {\n    id\n  };\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/profile.js"],"names":["React","useEffect","PropTypes","styled","Router","useSelector","LOAD_USER_REQUEST","SProfileDiv","div","ProfileTitle","h1","InfoCardWrap","InfoCardDiv","InfoLeftDiv","InfoRightDiv","Profile","id","me","state","user","e","alert","push","userId","nickname","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,kCAAjB;AAIA,MAAMC,YAAY,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,0EAAlB;AAMA,MAAMC,YAAY,GAAGR,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,gGAAlB;AAOA,MAAMI,WAAW,GAAGT,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,mCAAjB;AAIA,MAAMK,WAAW,GAAGV,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,oBAAjB;AAGA,MAAMM,YAAY,GAAGX,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,QAAlB;;AAEA,MAAMO,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AAEAlB,EAAAA,SAAS,CACPmB,CAAC,IAAI;AACH,QAAI,EAAEH,EAAE,IAAIA,EAAE,CAACD,EAAX,CAAJ,EAAoB;AAClBK,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACA;AACD;;AACD,QAAI,CAACL,EAAE,IAAIA,EAAE,CAACM,MAAV,MAAsBP,EAA1B,EAA8B;AAC5BK,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACA;AACD;AACF,GAZM,EAaP,CAACL,EAAE,IAAIA,EAAE,CAACM,MAAV,EAAkBP,EAAlB,CAbO,CAAT;AAgBA,SACE,MAAC,WAAD,QACE,MAAC,YAAD,QAAeC,EAAE,IAAIA,EAAE,CAACO,QAAxB,4CADF,EAEE,MAAC,YAAD,QACE,MAAC,WAAD,QACE,MAAC,WAAD,6BADF,EAEE,MAAC,YAAD,QAAeP,EAAE,IAAIA,EAAE,CAACM,MAAxB,CAFF,CADF,EAKE,MAAC,WAAD,QACE,MAAC,WAAD,mCADF,EAEE,MAAC,YAAD,+CAFF,CALF,EASE,MAAC,WAAD,QACE,MAAC,WAAD,6BADF,EAEE,MAAC,YAAD,QAAeN,EAAE,IAAIA,EAAE,CAACO,QAAxB,CAFF,CATF,CAFF,CADF;AA0CD,CA7DD;;AA+DAT,OAAO,CAACU,SAAR,GAAoB;AAClBT,EAAAA,EAAE,EAAEd,SAAS,CAACwB,MAAV,CAAiBC;AADH,CAApB;;AAIAZ,OAAO,CAACa,eAAR,GAA0B,MAAMC,OAAN,IAAiB;AACzC,QAAMb,EAAE,GAAGa,OAAO,CAACC,KAAR,CAAcd,EAAzB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n\r\nconst SProfileDiv = styled.div`\r\n  width: 98%;\r\n  margin-top: 10px;\r\n`;\r\nconst ProfileTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\nconst InfoCardWrap = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1.5rem;\r\n  border: solid 1px #495057;\r\n  border-radius: 6px;\r\n  width: 70%;\r\n`;\r\nconst InfoCardDiv = styled.div`\r\n  display: flex;\r\n  margin: 1.5rem;\r\n`;\r\nconst InfoLeftDiv = styled.div`\r\n  height: 3rem;\r\n`;\r\nconst InfoRightDiv = styled.div``;\r\n\r\nconst Profile = ({ id }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  useEffect(\r\n    e => {\r\n      if (!(me && me.id)) {\r\n        alert('로그인 하지 않은 사용자는 접근 할 수 없습니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n      if ((me && me.userId) !== id) {\r\n        alert('잘 못된 접근입니다.');\r\n        Router.push('/');\r\n        return;\r\n      }\r\n    },\r\n    [me && me.userId, id],\r\n  );\r\n\r\n  return (\r\n    <SProfileDiv>\r\n      <ProfileTitle>{me && me.nickname} 님 프로필 수정</ProfileTitle>\r\n      <InfoCardWrap>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>아이디</InfoLeftDiv>\r\n          <InfoRightDiv>{me && me.userId}</InfoRightDiv>\r\n        </InfoCardDiv>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>비밀번호</InfoLeftDiv>\r\n          <InfoRightDiv>비밀번호변경</InfoRightDiv>\r\n        </InfoCardDiv>\r\n        <InfoCardDiv>\r\n          <InfoLeftDiv>닉네임</InfoLeftDiv>\r\n          <InfoRightDiv>{me && me.nickname}</InfoRightDiv>\r\n        </InfoCardDiv>\r\n      </InfoCardWrap>\r\n\r\n      {/* <table>\r\n        <tr>\r\n          <td>아이디</td>\r\n          <td>{me && me.userId}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>닉네임</td>\r\n          <td>{me && me.nickname}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>연재한 글 수</td>\r\n          <td>{me && me.Books.length}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>선호작 수</td>\r\n          <td>{me && me.LikingBook.length}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>선호작가 수</td>\r\n          <td>{me && me.LikingUser.length}</td>\r\n        </tr>\r\n      </table> */}\r\n    </SProfileDiv>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n  const id = context.query.id;\r\n  return { id };\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}