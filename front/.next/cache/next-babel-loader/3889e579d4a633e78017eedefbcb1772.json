{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogout),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUpdateUser),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeEvery, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, UPDATE_USER_REQUEST, UPDATE_USER_FAILURE, UPDATE_USER_SUCCESS } from '../reducers/user'; // 로그인\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function login(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function login$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(function (loginData) {\n                      return axios.post('/user/login', loginData, {\n                        withCredentials: true\n                      });\n                    }, action.data);\n\n                  case 3:\n                    result = _context.sent;\n                    _context.next = 6;\n                    return put({\n                      type: LOG_IN_SUCCESS,\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context.next = 14;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.log(_context.t0);\n                    _context.next = 13;\n                    return put({\n                      type: LOG_IN_FAILURE,\n                      error: _context.t0\n                    });\n\n                  case 13:\n                    alert('로그인에 실패했습니다.');\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, login, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n} // 로그아웃\n\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_OUT_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function logout() {\n            return _regeneratorRuntime.wrap(function logout$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return call(function () {\n                      return axios.post('/user/logout', {}, {\n                        withCredentials: true\n                      });\n                    });\n\n                  case 3:\n                    _context3.next = 5;\n                    return put({\n                      type: LOG_OUT_SUCCESS\n                    });\n\n                  case 5:\n                    _context3.next = 12;\n                    break;\n\n                  case 7:\n                    _context3.prev = 7;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.log(_context3.t0);\n                    _context3.next = 12;\n                    return put({\n                      type: LOG_OUT_FAILURE,\n                      error: _context3.t0\n                    });\n\n                  case 12:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, logout, null, [[0, 7]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n} // 회원가입\n\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function signUp(action) {\n            var result;\n            return _regeneratorRuntime.wrap(function signUp$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return call(function (signUpData) {\n                      return axios.post('/user/signup', signUpData);\n                    }, action.data);\n\n                  case 3:\n                    result = _context5.sent;\n                    _context5.next = 6;\n                    return put({\n                      type: SIGN_UP_SUCCESS,\n                      data: result\n                    });\n\n                  case 6:\n                    _context5.next = 13;\n                    break;\n\n                  case 8:\n                    _context5.prev = 8;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.log(_context5.t0);\n                    _context5.next = 13;\n                    return put({\n                      type: SIGN_UP_FAILURE,\n                      error: _context5.t0\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, signUp, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n} // 유저 정보 가져오기\n\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? \"/user/\".concat(userId) : \"/user\", {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchUpdateUser() {\n  return _regeneratorRuntime.wrap(function watchUpdateUser$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(UPDATE_USER_REQUEST,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var result;\n            return _regeneratorRuntime.wrap(function _callee$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.prev = 0;\n                    _context9.next = 3;\n                    return call(function (updateData) {\n                      return axios.patch('/user', updateData, {\n                        withCredentials: true\n                      });\n                    }, action.data);\n\n                  case 3:\n                    result = _context9.sent;\n                    _context9.next = 6;\n                    return put({\n                      type: UPDATE_USER_SUCCESS,\n                      data: result.data\n                    });\n\n                  case 6:\n                    _context9.next = 13;\n                    break;\n\n                  case 8:\n                    _context9.prev = 8;\n                    _context9.t0 = _context9[\"catch\"](0);\n                    console.log(_context9.t0);\n                    _context9.next = 13;\n                    return put({\n                      type: UPDATE_USER_FAILURE,\n                      error: _context9.t0\n                    });\n\n                  case 13:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee, null, [[0, 8]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchSignUp), fork(watchLogin), fork(watchLogout), fork(watchLoadUser), fork(watchUpdateUser)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Document/Backpot/front/sagas/user.js"],"names":["watchLogin","watchLogout","watchSignUp","loadUser","watchLoadUser","watchUpdateUser","userSaga","all","fork","takeEvery","takeLatest","call","put","axios","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_FAILURE","UPDATE_USER_SUCCESS","login","action","loginData","post","withCredentials","data","result","type","console","log","error","alert","logout","signUp","signUpData","loadUserAPI","userId","get","me","updateData","patch"],"mappings":"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","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  takeEvery,\r\n  takeLatest,\r\n  call,\r\n  put,\r\n} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_FAILURE,\r\n  UPDATE_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n// 로그인\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, function* login(action) {\r\n    try {\r\n      const result = yield call(loginData => {\r\n        return axios.post('/user/login', loginData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: LOG_IN_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: LOG_IN_FAILURE,\r\n        error: e,\r\n      });\r\n      alert('로그인에 실패했습니다.');\r\n    }\r\n  });\r\n}\r\n\r\n// 로그아웃\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, function* logout() {\r\n    try {\r\n      yield call(() => {\r\n        return axios.post(\r\n          '/user/logout',\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        );\r\n      });\r\n      yield put({\r\n        type: LOG_OUT_SUCCESS,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: LOG_OUT_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// 회원가입\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, function* signUp(action) {\r\n    try {\r\n      const result = yield call(signUpData => {\r\n        return axios.post('/user/signup', signUpData);\r\n      }, action.data);\r\n      yield put({\r\n        type: SIGN_UP_SUCCESS,\r\n        data: result,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: SIGN_UP_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n// 유저 정보 가져오기\r\nfunction loadUserAPI(userId) {\r\n  return axios.get(userId ? `/user/${userId}` : `/user`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n      me: !action.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchUpdateUser() {\r\n  yield takeLatest(UPDATE_USER_REQUEST, function*() {\r\n    try {\r\n      const result = yield call(updateData => {\r\n        return axios.patch('/user', updateData, {\r\n          withCredentials: true,\r\n        });\r\n      }, action.data);\r\n      yield put({\r\n        type: UPDATE_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      yield put({\r\n        type: UPDATE_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchSignUp),\r\n    fork(watchLogin),\r\n    fork(watchLogout),\r\n    fork(watchLoadUser),\r\n    fork(watchUpdateUser),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}