{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { Container } from 'next/app';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport GlobalStyles from '../components/designs/GlobalStyles';\nimport Layout from '../components/Layout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { frontUrl } from '../config/config';\n\nvar Backpot = function Backpot(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Container, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Helmet, {\n    title: \"BackPot\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charSet: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width, initial-scale=1.0,minumum-scale=1.0, maximum-scale=1.0, user-scaleable=yes, viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: '웹소설 플랫폼 Backpot'\n    }, {\n      name: 'og:title',\n      content: 'Backpot'\n    }, {\n      name: 'og:description',\n      content: '웹소설 플랫폼 Backpot'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }, {\n      property: 'og:image',\n      content: \"\".concat(frontUrl, \"/favicon\")\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon'\n    }]\n  }), __jsx(Layout, null, __jsx(Component, pageProps)), __jsx(GlobalStyles, null)));\n};\n\nBackpot.getInitialProps = function _callee(context) {\n  var ctx, Component, pageProps, state, cookie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = context.ctx, Component = context.Component;\n          pageProps = {};\n          state = ctx.store.getState();\n          cookie = ctx.isServer ? ctx.req.headers.cookie : ''; // axios.defaults.headers.Cookie = '';\n\n          if (ctx.isServer && cookie) {\n            axios.defaults.headers.Cookie = cookie;\n          }\n\n          if (!state.user.me) {\n            ctx.store.dispatch({\n              type: LOAD_USER_REQUEST\n            });\n          }\n\n          if (!Component.getInitialProps) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n        case 9:\n          _context.t0 = _context.sent;\n\n          if (_context.t0) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.t0 = {};\n\n        case 12:\n          pageProps = _context.t0;\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, function (store) {\n    return function (next) {\n      return function (action) {\n        // saga Loging\n        console.log(action);\n        next(action);\n      };\n    };\n  }];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Backpot));","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/_app.js"],"names":["React","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","withRedux","withReduxSaga","Container","axios","Helmet","GlobalStyles","Layout","reducer","rootSaga","LOAD_USER_REQUEST","frontUrl","Backpot","Component","store","pageProps","lang","charSet","name","content","property","rel","href","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","next","action","console","log","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { Container } from 'next/app';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport GlobalStyles from '../components/designs/GlobalStyles';\r\nimport Layout from '../components/Layout';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { frontUrl } from '../config/config';\r\n\r\nconst Backpot = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <Container>\r\n      <Provider store={store}>\r\n        <Helmet\r\n          title=\"BackPot\"\r\n          htmlAttributes={{ lang: 'ko' }}\r\n          meta={[\r\n            {\r\n              charSet: 'UTF-8',\r\n            },\r\n            {\r\n              name: 'viewport',\r\n              content:\r\n                'width=device-width, initial-scale=1.0,minumum-scale=1.0, maximum-scale=1.0, user-scaleable=yes, viewport-fit=cover',\r\n            },\r\n            {\r\n              'http-equiv': 'X-UA-Compatible',\r\n              content: 'IE=edge',\r\n            },\r\n            {\r\n              name: 'description',\r\n              content: '웹소설 플랫폼 Backpot',\r\n            },\r\n            {\r\n              name: 'og:title',\r\n              content: 'Backpot',\r\n            },\r\n            {\r\n              name: 'og:description',\r\n              content: '웹소설 플랫폼 Backpot',\r\n            },\r\n            {\r\n              property: 'og:type',\r\n              content: 'website',\r\n            },\r\n            {\r\n              property: 'og:image',\r\n              content: `${frontUrl}/favicon`,\r\n            },\r\n          ]}\r\n          link={[\r\n            {\r\n              rel: 'shortcut icon',\r\n              href: '/favicon',\r\n            },\r\n          ]}\r\n        />\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n        <GlobalStyles />\r\n      </Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nBackpot.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  store: PropTypes.object.isRequired,\r\n  pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\nBackpot.getInitialProps = async (context) => {\r\n  const { ctx, Component } = context;\r\n  let pageProps = {};\r\n  const state = ctx.store.getState();\r\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n  // axios.defaults.headers.Cookie = '';\r\n  if (ctx.isServer && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  if (!state.user.me) {\r\n    ctx.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n    });\r\n  }\r\n  if (Component.getInitialProps) {\r\n    pageProps = (await Component.getInitialProps(ctx)) || {};\r\n  }\r\n\r\n  return { pageProps };\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [\r\n    sagaMiddleware,\r\n    (store) => (next) => (action) => {\r\n      // saga Loging\r\n      console.log(action);\r\n      next(action);\r\n    },\r\n  ];\r\n  const enhancer =\r\n    process.env.NODE_ENV === 'production'\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n          applyMiddleware(...middlewares),\r\n          !options.isServer &&\r\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined'\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : (f) => f,\r\n        );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(Backpot));\r\n"]},"metadata":{},"sourceType":"module"}