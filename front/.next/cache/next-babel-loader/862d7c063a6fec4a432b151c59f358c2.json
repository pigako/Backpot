{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BookCard from '../components/BookCard';\nimport { LOAD_BOOKS_REQUEST } from '../reducers/book';\nvar BookListTitle = styled.h1.withConfig({\n  displayName: \"booklist__BookListTitle\",\n  componentId: \"sc-1s39sfx-0\"\n})([\"margin:10px 0px 10px 0px;font-weight:bold;\"]);\nvar NovelList = styled.div.withConfig({\n  displayName: \"booklist__NovelList\",\n  componentId: \"sc-1s39sfx-1\"\n})([\"width:98%;overflow:hidden;\"]);\n\nvar BookList = function BookList() {\n  var _useSelector = useSelector(function (state) {\n    return state.book;\n  }),\n      books = _useSelector.books,\n      hasMoreBooks = _useSelector.hasMoreBooks,\n      keyword = _useSelector.keyword;\n\n  var dispatch = useDispatch();\n  var countRef = useRef([]);\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMoreBooks) {\n        var lastId = books[books.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_BOOKS_REQUEST,\n            lastId: lastId,\n            keyword: keyword\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [hasMoreBooks, books.length, keyword]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.addEventListener('scroll', onScroll);\n    };\n  }, [books.length]);\n  return __jsx(\"div\", null, __jsx(BookListTitle, null, \"\\uC5F0\\uC7AC\\uC18C\\uC124 \\uBAA9\\uB85D\"), __jsx(NovelList, null, books && books.map(function (book) {\n    return __jsx(BookCard, {\n      key: +book.id,\n      book: book,\n      nickname: book.User.nickname\n    });\n  })));\n};\n\nBookList.getInitialProps = function _callee(context) {\n  var state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          state = context.store.getState();\n          context.store.dispatch({\n            type: LOAD_BOOKS_REQUEST,\n            lastId: 0,\n            keyword: state.book.keyword\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BookList;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/booklist.js"],"names":["React","useEffect","useRef","styled","useSelector","useDispatch","BookCard","LOAD_BOOKS_REQUEST","BookListTitle","h1","NovelList","div","BookList","state","book","books","hasMoreBooks","keyword","dispatch","countRef","onScroll","useCallback","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","map","User","nickname","getInitialProps","context","store","getState"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport BookCard from '../components/BookCard';\r\nimport { LOAD_BOOKS_REQUEST } from '../reducers/book';\r\n\r\nconst BookListTitle = styled.h1`\r\n  margin: 10px 0px 10px 0px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NovelList = styled.div`\r\n  width: 98%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst BookList = () => {\r\n  const { books, hasMoreBooks, keyword } = useSelector(state => state.book);\r\n  const dispatch = useDispatch();\r\n  const countRef = useRef([]);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (\r\n      window.scrollY + document.documentElement.clientHeight >\r\n      document.documentElement.scrollHeight - 300\r\n    ) {\r\n      if (hasMoreBooks) {\r\n        let lastId = books[books.length - 1].id;\r\n        if (!countRef.current.includes(lastId)) {\r\n          dispatch({\r\n            type: LOAD_BOOKS_REQUEST,\r\n            lastId,\r\n            keyword,\r\n          });\r\n          countRef.current.push(lastId);\r\n        }\r\n      }\r\n    }\r\n  }, [hasMoreBooks, books.length, keyword]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.addEventListener('scroll', onScroll);\r\n    };\r\n  }, [books.length]);\r\n\r\n  return (\r\n    <div>\r\n      <BookListTitle>연재소설 목록</BookListTitle>\r\n      <NovelList>\r\n        {books &&\r\n          books.map(book => {\r\n            return (\r\n              <BookCard\r\n                key={+book.id}\r\n                book={book}\r\n                nickname={book.User.nickname}\r\n              />\r\n            );\r\n          })}\r\n      </NovelList>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookList.getInitialProps = async context => {\r\n  const state = context.store.getState();\r\n  context.store.dispatch({\r\n    type: LOAD_BOOKS_REQUEST,\r\n    lastId: 0,\r\n    keyword: state.book.keyword,\r\n  });\r\n};\r\n\r\nexport default BookList;\r\n"]},"metadata":{},"sourceType":"module"}