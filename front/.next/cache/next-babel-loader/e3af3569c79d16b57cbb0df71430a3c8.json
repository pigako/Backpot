{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\nimport Button from '../../components/designs/Button';\nimport { ADD_EPISODE_REQUEST } from '../../reducers/episode';\nconst WriteEpisodeDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeDiv\",\n  componentId: \"sc-1w592s4-0\"\n})([\"width:98%;margin:1rem 0rem 0rem 1rem;\"]);\nconst WriteEpisodeTopDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeTopDiv\",\n  componentId: \"sc-1w592s4-1\"\n})([\"position:relative;margin-bottom:2rem;\"]);\nconst BookTitle = styled.h1.withConfig({\n  displayName: \"write__BookTitle\",\n  componentId: \"sc-1w592s4-2\"\n})([\"font-weight:bold;font-size:1rem;margin-bottom:1rem;\"]);\nconst TopButtonDiv = styled.div.withConfig({\n  displayName: \"write__TopButtonDiv\",\n  componentId: \"sc-1w592s4-3\"\n})([\"position:absolute;top:5%;right:1%;\"]);\nconst EpisodeForm = styled.form.withConfig({\n  displayName: \"write__EpisodeForm\",\n  componentId: \"sc-1w592s4-4\"\n})([\"\"]);\nconst WriteEpisodeContentDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeContentDiv\",\n  componentId: \"sc-1w592s4-5\"\n})([\"margin:1.5rem;\"]);\nconst DivCard = styled.div.withConfig({\n  displayName: \"write__DivCard\",\n  componentId: \"sc-1w592s4-6\"\n})([\"display:flex;align-items:center;margin:1rem;width:100%;\"]);\nconst DivCardLeft = styled.div.withConfig({\n  displayName: \"write__DivCardLeft\",\n  componentId: \"sc-1w592s4-7\"\n})([\"flex:1;\"]);\nconst DivCardRight = styled.div.withConfig({\n  displayName: \"write__DivCardRight\",\n  componentId: \"sc-1w592s4-8\"\n})([\"flex:4;display:flex;& > input{width:calc(100% - 2rem);height:2rem;font-size:1rem;line-height:2rem;padding-left:10px;border:solid 2px #495057;border-radius:4px;transition:0.55s ease;&:hover{border:solid 2px #148cff;}&:focus{border:solid 2px #148cff;}}\"]);\nconst CheckBox = styled.input.withConfig({\n  displayName: \"write__CheckBox\",\n  componentId: \"sc-1w592s4-9\"\n})([\"width:1.5rem !important;height:1.5rem !important;\"]);\nconst WriteEditorDiv = styled.div.withConfig({\n  displayName: \"write__WriteEditorDiv\",\n  componentId: \"sc-1w592s4-10\"\n})([\"margin:1rem;& > label{width:100%;display:inline-block;margin-bottom:1rem;padding-bottom:1rem;border-bottom:solid 2px #495057;}\"]);\n\nconst Write = () => {\n  const {\n    book\n  } = useSelector(state => state.book);\n  const editorRef = useRef();\n  const {\n    0: editorLoded,\n    1: setEditorLoded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  const dispatch = useDispatch();\n  const {\n    0: checkNotice,\n    1: setCheckNotice\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: writerComment,\n    1: setWriterComment\n  } = useState('');\n  const onChangeCheckNotice = useCallback(() => {\n    setCheckNotice(!checkNotice);\n  }, [checkNotice]);\n  const onChangeTitle = useCallback(e => {\n    setTitle(e.target.value);\n  }, []);\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  const writeEpisode = useCallback(e => {\n    e.preventDefault();\n    const episodeContent = text + '<br/><br/><p><strong>작가의 말</strong><hr><br/>' + writerComment;\n    dispatch({\n      type: ADD_EPISODE_REQUEST,\n      data: {\n        title: title,\n        content: text,\n        isNotice: checkNotice ? 1 : 0,\n        bookId: book && book.id\n      }\n    });\n  }, [checkNotice, title, text, writerComment, book && book.id]);\n  return __jsx(WriteEpisodeDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, book && book.name), __jsx(\"style\", {\n    type: \"text/css\"\n  }, `\n            .ck.ck-editor {width:100%;}\n            .ck-editor__editable { height: 500px;}\n          `)), __jsx(EpisodeForm, {\n    onSubmit: writeEpisode\n  }, __jsx(WriteEpisodeTopDiv, null, __jsx(BookTitle, null, book && book.name), __jsx(TopButtonDiv, null, __jsx(Button, {\n    color: \"pink\",\n    type: \"button\"\n  }, \"\\uCDE8\\uC18C\"), __jsx(Button, {\n    type: \"submit\"\n  }, \"\\uC791\\uC131\"))), __jsx(WriteEpisodeContentDiv, null, __jsx(DivCard, null, __jsx(DivCardLeft, null, __jsx(\"label\", null, \"\\uC774 \\uAE00\\uC744 \\uACF5\\uC9C0\\uB85C \\uC791\\uC131\")), __jsx(DivCardRight, null, __jsx(CheckBox, {\n    type: \"checkbox\",\n    value: checkNotice,\n    onChange: onChangeCheckNotice\n  }))), __jsx(DivCard, null, __jsx(DivCardLeft, null, __jsx(\"label\", null, \"\\uC81C\\uBAA9\")), __jsx(DivCardRight, null, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: onChangeTitle\n  }))), __jsx(WriteEditorDiv, null, __jsx(\"label\", null, \"\\uBCF8\\uBB38\"), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: text,\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\")), __jsx(WriteEditorDiv, null, __jsx(\"label\", null, \"\\uC791\\uAC00\\uC758 \\uB9D0\"), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: writerComment,\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setWriterComment(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\")))));\n};\n\nWrite.getInitialProps = async context => {\n  const bookId = context.query.bookid;\n  context.store.dispatch({\n    type: LOAD_BOOK_REQUEST,\n    id: bookId\n  });\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/episode/write.js"],"names":["React","useState","useEffect","useRef","useCallback","styled","useSelector","useDispatch","Helmet","LOAD_BOOK_REQUEST","Button","ADD_EPISODE_REQUEST","WriteEpisodeDiv","div","WriteEpisodeTopDiv","BookTitle","h1","TopButtonDiv","EpisodeForm","form","WriteEpisodeContentDiv","DivCard","DivCardLeft","DivCardRight","CheckBox","input","WriteEditorDiv","Write","book","state","editorRef","editorLoded","setEditorLoded","CKEditor","ClassicEditor","current","dispatch","checkNotice","setCheckNotice","title","setTitle","text","setText","writerComment","setWriterComment","onChangeCheckNotice","onChangeTitle","e","target","value","require","writeEpisode","preventDefault","episodeContent","type","data","content","isNotice","bookId","id","name","event","editor","getData","getInitialProps","context","query","bookid","store"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\r\nimport Button from '../../components/designs/Button';\r\nimport { ADD_EPISODE_REQUEST } from '../../reducers/episode';\r\n\r\nconst WriteEpisodeDiv = styled.div`\r\n  width: 98%;\r\n  margin: 1rem 0rem 0rem 1rem;\r\n`;\r\n\r\nconst WriteEpisodeTopDiv = styled.div`\r\n  position: relative;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst BookTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst TopButtonDiv = styled.div`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 1%;\r\n`;\r\n\r\nconst EpisodeForm = styled.form``;\r\n\r\nconst WriteEpisodeContentDiv = styled.div`\r\n  margin: 1.5rem;\r\n`;\r\n\r\nconst DivCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem;\r\n\r\n  width: 100%;\r\n`;\r\nconst DivCardLeft = styled.div`\r\n  flex: 1;\r\n`;\r\nconst DivCardRight = styled.div`\r\n  flex: 4;\r\n  display: flex;\r\n\r\n  & > input {\r\n    width: calc(100% - 2rem);\r\n    height: 2rem;\r\n    font-size: 1rem;\r\n    line-height: 2rem;\r\n    padding-left: 10px;\r\n\r\n    border: solid 2px #495057;\r\n    border-radius: 4px;\r\n\r\n    transition: 0.55s ease;\r\n    & :hover {\r\n      border: solid 2px #148cff;\r\n    }\r\n    & :focus {\r\n      border: solid 2px #148cff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n  width: 1.5rem !important;\r\n  height: 1.5rem !important;\r\n`;\r\n\r\nconst WriteEditorDiv = styled.div`\r\n  margin: 1rem;\r\n  & > label {\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-bottom: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: solid 2px #495057;\r\n  }\r\n`;\r\n\r\nconst Write = () => {\r\n  const { book } = useSelector(state => state.book);\r\n\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checkNotice, setCheckNotice] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [writerComment, setWriterComment] = useState('');\r\n\r\n  const onChangeCheckNotice = useCallback(() => {\r\n    setCheckNotice(!checkNotice);\r\n  }, [checkNotice]);\r\n\r\n  const onChangeTitle = useCallback(e => {\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  const writeEpisode = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const episodeContent =\r\n        text +\r\n        '<br/><br/><p><strong>작가의 말</strong><hr><br/>' +\r\n        writerComment;\r\n\r\n      dispatch({\r\n        type: ADD_EPISODE_REQUEST,\r\n        data: {\r\n          title: title,\r\n          content: text,\r\n          isNotice: checkNotice ? 1 : 0,\r\n          bookId: book && book.id,\r\n        },\r\n      });\r\n    },\r\n    [checkNotice, title, text, writerComment, book && book.id],\r\n  );\r\n\r\n  return (\r\n    <WriteEpisodeDiv>\r\n      <Helmet>\r\n        <title>{book && book.name}</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck.ck-editor {width:100%;}\r\n            .ck-editor__editable { height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <EpisodeForm onSubmit={writeEpisode}>\r\n        <WriteEpisodeTopDiv>\r\n          <BookTitle>{book && book.name}</BookTitle>\r\n          <TopButtonDiv>\r\n            <Button color=\"pink\" type=\"button\">\r\n              취소\r\n            </Button>\r\n            <Button type=\"submit\">작성</Button>\r\n          </TopButtonDiv>\r\n        </WriteEpisodeTopDiv>\r\n        <WriteEpisodeContentDiv>\r\n          <DivCard>\r\n            <DivCardLeft>\r\n              <label>이 글을 공지로 작성</label>\r\n            </DivCardLeft>\r\n            <DivCardRight>\r\n              <CheckBox\r\n                type=\"checkbox\"\r\n                value={checkNotice}\r\n                onChange={onChangeCheckNotice}\r\n              />\r\n            </DivCardRight>\r\n          </DivCard>\r\n          <DivCard>\r\n            <DivCardLeft>\r\n              <label>제목</label>\r\n            </DivCardLeft>\r\n            <DivCardRight>\r\n              <input type=\"text\" value={title} onChange={onChangeTitle} />\r\n            </DivCardRight>\r\n          </DivCard>\r\n\r\n          <WriteEditorDiv>\r\n            <label>본문</label>\r\n            {editorLoded ? (\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={text}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setText(data);\r\n                }}\r\n              />\r\n            ) : (\r\n              <p>Editor Loding</p>\r\n            )}\r\n          </WriteEditorDiv>\r\n          <WriteEditorDiv>\r\n            <label>작가의 말</label>\r\n            {editorLoded ? (\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={writerComment}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setWriterComment(data);\r\n                }}\r\n              />\r\n            ) : (\r\n              <p>Editor Loding</p>\r\n            )}\r\n          </WriteEditorDiv>\r\n        </WriteEpisodeContentDiv>\r\n      </EpisodeForm>\r\n    </WriteEpisodeDiv>\r\n  );\r\n};\r\n\r\nWrite.getInitialProps = async context => {\r\n  const bookId = context.query.bookid;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_BOOK_REQUEST,\r\n    id: bookId,\r\n  });\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}