{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar MyError = function MyError(_ref) {\n  var statusCode = _ref.statusCode;\n  return __jsx(\"div\", null, __jsx(\"h1\", null, statusCode, \" \\uC5D0\\uB7EC \\uBC1C\\uC0DD\"));\n};\n\nMyError.defaultProps = {\n  statusCode: 400\n};\n\nMyError.getInitialProps = function _callee(context) {\n  var statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          statusCode = context.res ? context.res.statusCode : context.err ? context.err.statusCode : null;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyError;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/_error.js"],"names":["React","MyError","statusCode","defaultProps","getInitialProps","context","res","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAClC,SACE,mBACE,kBAAKA,UAAL,+BADF,CADF;AAKD,CAND;;AAYAD,OAAO,CAACE,YAAR,GAAuB;AACrBD,EAAAA,UAAU,EAAE;AADS,CAAvB;;AAIAD,OAAO,CAACG,eAAR,GAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBH,UAAAA,UADkB,GACLG,OAAO,CAACC,GAAR,GACfD,OAAO,CAACC,GAAR,CAAYJ,UADG,GAEfG,OAAO,CAACE,GAAR,GACAF,OAAO,CAACE,GAAR,CAAYL,UADZ,GAEA,IALoB;AAAA,2CAMjB;AAAEA,YAAAA,UAAU,EAAVA;AAAF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASA,eAAeD,OAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyError = ({ statusCode }) => {\r\n  return (\r\n    <div>\r\n      <h1>{statusCode} 에러 발생</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nMyError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n};\r\n\r\nMyError.defaultProps = {\r\n  statusCode: 400,\r\n};\r\n\r\nMyError.getInitialProps = async (context) => {\r\n  const statusCode = context.res\r\n    ? context.res.statusCode\r\n    : context.err\r\n    ? context.err.statusCode\r\n    : null;\r\n  return { statusCode };\r\n};\r\n\r\nexport default MyError;\r\n"]},"metadata":{},"sourceType":"module"}