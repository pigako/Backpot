{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Button from '../components/designs/Button';\nconst WriteDiv = styled.div.withConfig({\n  displayName: \"writeboard__WriteDiv\",\n  componentId: \"sc-3uiybh-0\"\n})([\"width:98%;\"]);\nconst WriteBoardDivTop = styled.div.withConfig({\n  displayName: \"writeboard__WriteBoardDivTop\",\n  componentId: \"sc-3uiybh-1\"\n})([\"margin-bottom:1rem;\"]);\nconst SWriteBoardTitle = styled.h1.withConfig({\n  displayName: \"writeboard__SWriteBoardTitle\",\n  componentId: \"sc-3uiybh-2\"\n})([\"display:inline-block;font-weight:bold;margin-left:10px;width:200px;\"]);\nconst SButton = styled(Button).withConfig({\n  displayName: \"writeboard__SButton\",\n  componentId: \"sc-3uiybh-3\"\n})([\"float:right;\"]);\n\nconst WriteBoard = () => {\n  const editorRef = useRef();\n  const {\n    0: editorLoded,\n    1: setEditorLoded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  return __jsx(WriteDiv, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\\uCD94\\uCC9C\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(\"style\", {\n    type: \"text/css\"\n  }, `\n            .ck-editor__editable {min-height: 500px;}\n          `)), __jsx(WriteBoardDivTop, null, __jsx(SWriteBoardTitle, null, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), __jsx(SButton, null, \"\\uC791\\uC131\")), editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"\",\n    onInit: editor => {\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log('Blur', editor);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus', editor);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\"));\n};\n\nWriteBoard.getInitialProps = context => {};\n\nexport default WriteBoard;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/writeboard.js"],"names":["React","useRef","useState","useEffect","styled","Helmet","Button","WriteDiv","div","WriteBoardDivTop","SWriteBoardTitle","h1","SButton","WriteBoard","editorRef","editorLoded","setEditorLoded","CKEditor","ClassicEditor","current","require","editor","console","log","event","data","getData","getInitialProps","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,kBAAd;AAIA,MAAMC,gBAAgB,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,2BAAtB;AAIA,MAAME,gBAAgB,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,2EAAtB;AAOA,MAAMC,OAAO,GAAGR,MAAM,CAACE,MAAD,CAAT;AAAA;AAAA;AAAA,oBAAb;;AAIA,MAAMO,UAAU,GAAG,MAAM;AACvB,QAAMC,SAAS,GAAGb,MAAM,EAAxB;AACA,QAAM;AAAA,OAACc,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8BJ,SAAS,CAACK,OAAV,IAAqB,EAAzD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS,CAACK,OAAV,GAAoB;AAClBF,MAAAA,QAAQ,EAAEG,OAAO,CAAC,2BAAD,CADC;AAElBF,MAAAA,aAAa,EAAEE,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,QAAD,QACE,MAAC,MAAD,QACE,mEADF,EAEE;AAAO,IAAA,IAAI,EAAC;AAAZ,KACI;;WADJ,CAFF,CADF,EASE,MAAC,gBAAD,QACE,MAAC,gBAAD,0CADF,EAEE,MAAC,OAAD,uBAFF,CATF,EAaGD,WAAW,GACV,MAAC,QAAD;AACE,IAAA,MAAM,EAAEG,aADV;AAEE,IAAA,IAAI,EAAC,EAFP;AAGE,IAAA,MAAM,EAAEG,MAAM,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,MAAvC;AACD,KALH;AAME,IAAA,QAAQ,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AAC3B,YAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,KAAF;AAASH,QAAAA,MAAT;AAAiBI,QAAAA;AAAjB,OAAZ;AACD,KATH;AAUE,IAAA,MAAM,EAAE,CAACD,KAAD,EAAQH,MAAR,KAAmB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,MAApB;AACD,KAZH;AAaE,IAAA,OAAO,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACD;AAfH,IADU,GAmBV,iCAhCJ,CADF;AAqCD,CAlDD;;AAoDAR,UAAU,CAACc,eAAX,GAA6BC,OAAO,IAAI,CAAE,CAA1C;;AAEA,eAAef,UAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Button from '../components/designs/Button';\r\n\r\nconst WriteDiv = styled.div`\r\n  width: 98%;\r\n`;\r\n\r\nconst WriteBoardDivTop = styled.div`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst SWriteBoardTitle = styled.h1`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 200px;\r\n`;\r\n\r\nconst SButton = styled(Button)`\r\n  float: right;\r\n`;\r\n\r\nconst WriteBoard = () => {\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <WriteDiv>\r\n      <Helmet>\r\n        <title>추천게시글 작성</title>\r\n        <style type=\"text/css\">\r\n          {`\r\n            .ck-editor__editable {min-height: 500px;}\r\n          `}\r\n        </style>\r\n      </Helmet>\r\n      <WriteBoardDivTop>\r\n        <SWriteBoardTitle>게시글 작성</SWriteBoardTitle>\r\n        <SButton>작성</SButton>\r\n      </WriteBoardDivTop>\r\n      {editorLoded ? (\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"\"\r\n          onInit={editor => {\r\n            console.log('Editor is ready to use!', editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n          }}\r\n          onBlur={(event, editor) => {\r\n            console.log('Blur', editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n            console.log('Focus', editor);\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>Editor Loding</p>\r\n      )}\r\n    </WriteDiv>\r\n  );\r\n};\r\n\r\nWriteBoard.getInitialProps = context => {};\r\n\r\nexport default WriteBoard;\r\n"]},"metadata":{},"sourceType":"module"}