{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\nvar WriteEpisodeDiv = styled.div.withConfig({\n  displayName: \"write__WriteEpisodeDiv\",\n  componentId: \"sc-1w592s4-0\"\n})([\"width:98%;margin:1rem 0rem 0rem 1rem;\"]);\nvar BookTitle = styled.h1.withConfig({\n  displayName: \"write__BookTitle\",\n  componentId: \"sc-1w592s4-1\"\n})([\"font-weight:bold;font-size:1rem;margin-bottom:1rem;\"]);\nvar WriteEditorDiv = styled.div.withConfig({\n  displayName: \"write__WriteEditorDiv\",\n  componentId: \"sc-1w592s4-2\"\n})([\"\"]);\n\nvar Write = function Write() {\n  var _useSelector = useSelector(function (state) {\n    return state.book;\n  }),\n      book = _useSelector.book;\n\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoded = _useState[0],\n      setEditorLoded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  var _useState2 = useState(''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoded(true);\n  }, []);\n  return __jsx(WriteEpisodeDiv, null, __jsx(BookTitle, null, book && book.name), __jsx(WriteEditorDiv, null, editorLoded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: text,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setText(data);\n    }\n  }) : __jsx(\"p\", null, \"Editor Loding\")));\n};\n\nWrite.getInitialProps = function _callee(context) {\n  var bookId;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          bookId = context.query.bookid;\n          context.store.dispatch({\n            type: LOAD_BOOK_REQUEST,\n            id: bookId\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Document/Backpot/front/pages/episode/write.js"],"names":["React","useState","useEffect","useRef","styled","useSelector","LOAD_BOOK_REQUEST","WriteEpisodeDiv","div","BookTitle","h1","WriteEditorDiv","Write","state","book","editorRef","editorLoded","setEditorLoded","current","CKEditor","ClassicEditor","text","setText","require","name","event","editor","data","getData","getInitialProps","context","bookId","query","bookid","store","dispatch","type","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,IAAMC,eAAe,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,6CAArB;AAKA,IAAMC,SAAS,GAAGL,MAAM,CAACM,EAAV;AAAA;AAAA;AAAA,2DAAf;AAMA,IAAMC,cAAc,GAAGP,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,QAApB;;AAEA,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,qBACDP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADV;AAAA,MACVA,IADU,gBACVA,IADU;;AAGlB,MAAMC,SAAS,GAAGZ,MAAM,EAAxB;;AAHkB,kBAIoBF,QAAQ,CAAC,KAAD,CAJ5B;AAAA,MAIXe,WAJW;AAAA,MAIEC,cAJF;;AAAA,aAKkBF,SAAS,CAACG,OAAV,IAAqB,EALvC;AAAA,MAKVC,QALU,QAKVA,QALU;AAAA,MAKAC,aALA,QAKAA,aALA;;AAAA,mBAOMnB,QAAQ,CAAC,EAAD,CAPd;AAAA,MAOXoB,IAPW;AAAA,MAOLC,OAPK;;AASlBpB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS,CAACG,OAAV,GAAoB;AAClBC,MAAAA,QAAQ,EAAEI,OAAO,CAAC,2BAAD,CADC;AAElBH,MAAAA,aAAa,EAAEG,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAN,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,eAAD,QACE,MAAC,SAAD,QAAYH,IAAI,IAAIA,IAAI,CAACU,IAAzB,CADF,EAEE,MAAC,cAAD,QACGR,WAAW,GACV,MAAC,QAAD;AACE,IAAA,MAAM,EAAEI,aADV;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,QAAQ,EAAE,kBAACI,KAAD,EAAQC,MAAR,EAAmB;AAC3B,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,EAAb;AACAN,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD;AANH,IADU,GAUV,iCAXJ,CAFF,CADF;AAmBD,CApCD;;AAsCAf,KAAK,CAACiB,eAAN,GAAwB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,MADgB,GACPD,OAAO,CAACE,KAAR,CAAcC,MADP;AAGtBH,UAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACrBC,YAAAA,IAAI,EAAE9B,iBADe;AAErB+B,YAAAA,EAAE,EAAEN;AAFiB,WAAvB;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAenB,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { LOAD_BOOK_REQUEST } from '../../reducers/book';\r\n\r\nconst WriteEpisodeDiv = styled.div`\r\n  width: 98%;\r\n  margin: 1rem 0rem 0rem 1rem;\r\n`;\r\n\r\nconst BookTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst WriteEditorDiv = styled.div``;\r\n\r\nconst Write = () => {\r\n  const { book } = useSelector(state => state.book);\r\n\r\n  const editorRef = useRef();\r\n  const [editorLoded, setEditorLoded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react'),\r\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n    };\r\n    setEditorLoded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <WriteEpisodeDiv>\r\n      <BookTitle>{book && book.name}</BookTitle>\r\n      <WriteEditorDiv>\r\n        {editorLoded ? (\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={text}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              setText(data);\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>Editor Loding</p>\r\n        )}\r\n      </WriteEditorDiv>\r\n    </WriteEpisodeDiv>\r\n  );\r\n};\r\n\r\nWrite.getInitialProps = async context => {\r\n  const bookId = context.query.bookid;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_BOOK_REQUEST,\r\n    id: bookId,\r\n  });\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}